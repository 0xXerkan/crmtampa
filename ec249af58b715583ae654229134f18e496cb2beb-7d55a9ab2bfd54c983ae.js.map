{"version":3,"file":"ec249af58b715583ae654229134f18e496cb2beb-7d55a9ab2bfd54c983ae.js","mappings":"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","sources":["webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://Cerberus Risk Management/./src/components/RequestAQuote.js","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/use-force-update.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","webpack://Cerberus Risk Management/./src/components/Navbar.jsx","webpack://Cerberus Risk Management/./src/components/UpperNavbar.js","webpack://Cerberus Risk Management/./src/components/Contact.jsx","webpack://Cerberus Risk Management/./src/components/Footer.jsx","webpack://Cerberus Risk Management/./src/components/Layout.js","webpack://Cerberus Risk Management/./src/hooks/use-site-metadata.js","webpack://Cerberus Risk Management/./src/components/Seo.js"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\",\n    \"resolveKeyframes\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.postRender(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap)\n                            onTap(event, info);\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            onTapStart(event, info);\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel)\n            onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return resolvedKeyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { frame, cancelFrame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        // Write\n        toResolve.forEach((resolver) => {\n            resolver.needsMeasurement && resolver.unsetTransforms();\n        });\n        // Read\n        toResolve.forEach((resolver) => {\n            resolver.needsMeasurement && resolver.measureInitialState();\n        });\n        // Write\n        toResolve.forEach((resolver) => {\n            resolver.needsMeasurement && resolver.renderEndStyles();\n        });\n        // Read\n        toResolve.forEach((resolver) => {\n            resolver.needsMeasurement && resolver.measureEndState();\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n    frame.resolveKeyframes(measureAllKeyframes);\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n    cancelFrame(readAllKeyframes);\n    cancelFrame(measureAllKeyframes);\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    unsetTransforms() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, removeNonTranslationalTransform, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        const noneKeyframeIndexes = [];\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            const keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\" && isCSSVariableToken(keyframe)) {\n                const resolved = getVariableValue(keyframe, element.current);\n                if (resolved !== undefined) {\n                    unresolvedKeyframes[i] = resolved;\n                }\n            }\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (!originType || !targetType || originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    unsetTransforms() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        this.removedTransforms = removeNonTranslationalTransform(element);\n        const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        element.getValue(name, finalKeyframe).jump(finalKeyframe, false);\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n    }\n    renderEndStyles() {\n        this.element.render();\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        unresolvedKeyframes[unresolvedKeyframes.length - 1] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (name === \"height\" && this.suspendedScrollY !== undefined) {\n            window.scrollTo(0, this.suspendedScrollY);\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        if (typeof unresolvedKeyframes[i] === \"string\" &&\n            unresolvedKeyframes[i] !== \"none\" &&\n            unresolvedKeyframes[i] !== \"0\") {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved)\n            flushKeyframeResolvers();\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes) {\n        const { name, type, velocity, delay, onComplete, onUpdate } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                const finalKeyframe = getFinalKeyframe(keyframes, this.options);\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(finalKeyframe);\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                this.updateFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        this._resolved = {\n            keyframes,\n            ...this.initPlayback(keyframes),\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = () => {\n                resolve();\n                this.updateFinishedPromise();\n            };\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mixNumber } from './number.mjs';\nimport { invariant } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\n\nfunction mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes) => this.onKeyframesResolved(resolvedKeyframes);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = this.resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        return millisecondsToSeconds(this.resolved.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    stop() {\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.state = \"idle\";\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.teardown();\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes) => this.onKeyframesResolved(resolvedKeyframes), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes) {\n        let duration = this.options.duration || 300;\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            duration = pregeneratedAnimation.duration;\n            this.options.times = pregeneratedAnimation.times;\n            this.options.ease = pregeneratedAnimation.ease;\n        }\n        const { motionValue, name } = this.options;\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n                this.updateFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { duration } = this.resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { animation } = this.resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { animation } = this.resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { animation } = this.resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { animation } = this.resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { animation } = this.resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { animation } = this.resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { animation } = this.resolved;\n        animation.play();\n    }\n    pause() {\n        const { animation } = this.resolved;\n        animation.pause();\n    }\n    stop() {\n        this.isStopped = true;\n        const { animation, keyframes } = this.resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n            });\n            motionValue.setWithVelocity(sampleAnimation.sample(this.time - sampleDelta).value, sampleAnimation.sample(this.time).value, sampleDelta);\n        }\n        this.cancel();\n    }\n    complete() {\n        this.resolved.animation.finish();\n    }\n    cancel() {\n        this.resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.0.12\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n                animation.then(() => willChange.remove(key));\n            }\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                fallbackAnimation[key] =\n                    fallbackTarget === undefined ? null : fallbackTarget;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart)\n                onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd)\n            onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        handler(event, info);\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd)\n                    onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            if (window.HandoffCancelAllAnimations) {\n                window.HandoffCancelAllAnimations();\n            }\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a, _b;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_b = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom)) === null || _b === void 0 ? void 0 : _b[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.0.12\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.0.12 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import React from 'react'\r\nimport { motion } from 'framer-motion';\r\n\r\nconst RequestAQuote = ({ toggleModal }) => {\r\n  return (\r\n    <motion.div\r\n    initial={{ opacity: 0}}\r\n    animate={{ opacity: 1}}\r\n    transition={{ duration: 0.3 }}\r\n    exit={{ opacity: 0 }}\r\n    className='modal-wrapper'>\r\n      <div className=\"modal-container\">\r\n        <div className=\"close-button-wrapper\">\r\n          <div aria-hidden=\"true\" onClick={toggleModal} className=\"close-button\">+</div>\r\n        </div>\r\n        <section id=\"request-a-quote\" className=\"text-light\">\r\n          <div className=\"container\">\r\n            <div className=\"d-flex justify-content-center\">\r\n              <h1 className=\"text-center mb-3 text-primary\">Request a Quote</h1>\r\n            </div>\r\n            <p className=\"lead text-center mb-4\">\r\n              Looking for services? Let us know what you need by filling out the\r\n              form below and one of our agents will get in touch with you!\r\n            </p>\r\n            <div className=\"card quote-form-container\">\r\n              <div className=\"card-body\">\r\n                <form\r\n                  className=\"quote-form\"\r\n                  action=\"https://formsubmit.co/31aee523a5e7db1381cf87d0da5ebbc5\"\r\n                  method=\"POST\"\r\n                >\r\n                  <input type=\"hidden\" name=\"_captcha\" value=\"false\" />\r\n                  <input type=\"text\" name=\"_honey\" style={{ display: \"none\" }} />\r\n                  {/* <!-- edit redirect location for production --> */}\r\n                  <input\r\n                    type=\"hidden\"\r\n                    name=\"_next\"\r\n                    value=\"https://www.crmtampa.com/thankyou\"\r\n                  />\r\n\r\n                  <div className=\"d-flex gap-3 group\">\r\n                    <div className=\"flex-grow-1 item\">\r\n                      <label htmlFor=\"firstname\">First Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"firstname\"\r\n                        name=\"firstname\"\r\n                        required\r\n                        className=\"form-control\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"flex-grow-1 item\">\r\n                      <label htmlFor=\"lastname\">Last Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"lastname\"\r\n                        name=\"lastname\"\r\n                        required\r\n                        className=\"form-control\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      id=\"email\"\r\n                      name=\"email\"\r\n                      required\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label htmlFor=\"phone\">Phone Number</label>\r\n                    <input\r\n                      type=\"tel\"\r\n                      id=\"phone\"\r\n                      name=\"phone\"\r\n                      required\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label htmlFor=\"service\">\r\n                      What services are you looking for?\r\n                    </label>\r\n                    <select\r\n                      name=\"service\"\r\n                      id=\"service\"\r\n                      required\r\n                      className=\"form-select\"\r\n                    >\r\n                      <option selected disabled>\r\n                        Please select an option\r\n                      </option>\r\n                      <option value=\"guard\">Guard Services</option>\r\n                      <option value=\"executive\">Executive Protection</option>\r\n                      <option value=\"event\">Event Safety and Security</option>\r\n                      <option value=\"vehicles\">Armored Vehicles</option>\r\n                      <option value=\"other\">Other</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label htmlFor=\"message\" className=\"form-label\">\r\n                      Additional details about your request\r\n                    </label>\r\n                    <textarea\r\n                      id=\"message\"\r\n                      name=\"message\"\r\n                      required\r\n                      className=\"form-control\"\r\n                      placeholder=\"\"\r\n                    ></textarea>\r\n                  </div>\r\n                  <button className=\"btn btn-primary mt-2\">Submit</button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </motion.div>\r\n  )\r\n}\r\n\r\nexport default RequestAQuote;\r\n","import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                // clean up the exiting children map\n                exitingChildren.delete(key);\n                // compute the keys of children that were rendered once but are no longer present\n                // this could happen in case of too many fast consequent renderings\n                // @link https://github.com/framer/motion/issues/2023\n                const leftOverKeys = Array.from(allChildren.keys()).filter((childKey) => !targetKeys.includes(childKey));\n                // clean up the all children map\n                leftOverKeys.forEach((leftOverKey) => allChildren.delete(leftOverKey));\n                // make sure to render only the children that are actually visible\n                presentChildren.current = filteredChildren.filter((presentChild) => {\n                    const presentChildKey = getChildKey(presentChild);\n                    return (\n                    // filter out the node exiting\n                    presentChildKey === key ||\n                        // filter out the leftover children\n                        leftOverKeys.includes(presentChildKey));\n                });\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exitingChildren.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'gatsby';\r\nimport RequestAQuote from './RequestAQuote';\r\nimport { AnimatePresence } from 'framer-motion';\r\nimport { withAssetPrefix } from 'gatsby';\r\n\r\nconst Navbar = () => {\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  const toggleModal = () => {\r\n    setModalOpen(!modalOpen);\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.body.style.overflow = modalOpen ? \"hidden\" : \"unset\";\r\n  }, [modalOpen]);\r\n\r\n  return (\r\n      <nav className=\"navbar navbar-expand-lg bg-black navbar-dark sticky-top py-2 border-bottom border-primary border-3\">\r\n        <div className=\"container\">\r\n          <Link to=\"/\" className='navbar-brand m-0 p-0'>\r\n            <div className='d-flex align-items-center navbar-brand m-0'>\r\n              <div className=\"navbar-brand border-end border-light border-2 pe-2 m-0 __nav-small CRM\">CRM</div>\r\n              <div className='navbar-brand m-0 mx-1 __nav-small'>\r\n                <img src={withAssetPrefix(\"/logo.png\")} alt=\"logo\" height='46' width='auto' />\r\n              </div>\r\n              <div className=\"navbar-brand m-0 __nav-small\">Cerberus Risk Management</div>\r\n            </div>\r\n          </Link>\r\n\r\n\r\n          <button className=\"navbar-toggler px-0\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"navigation\">\r\n            <ul className=\"navbar-nav ms-auto d-lg-flex align-items-lg-center\">\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/#services\" className=\"nav-link\">Services</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <div aria-hidden=\"true\" className=\"nav-link\" onClick={toggleModal}>Request a Quote</div>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/#contact\" className=\"nav-link\">Contact Us</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/careers\" className=\"nav-link\">Careers</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a href=\"tel:(656) 224-3902\" className=\"nav-link\">\r\n                  <button className='btn btn-primary' type='button'>(656) 224-3902</button>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <AnimatePresence>\r\n          { modalOpen && <RequestAQuote toggleModal={toggleModal} />}\r\n        </AnimatePresence>\r\n      </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar","import React from 'react'\r\nimport { withAssetPrefix } from 'gatsby'\r\n\r\nconst UpperNavbar = () => {\r\n  return (\r\n    <div className='bg-black'>\r\n      <div className='container py-3 d-flex align-items-center justify-content-between'>\r\n        <div className='text-light'>\r\n          <a className='text-decoration-none' href='https://licensing.fdacs.gov/access/agency.aspx?TYPE=AGENCY&CATEGORY=&COUNTY=00&LICENSE=B%203300204&STATUS=ORG_DETAIL&ORG_ID=' target='_blank' rel=\"noreferrer\">License # B 3300204</a>\r\n        </div>\r\n        <div className=\"text-light\">\r\n        {/* <button className='btn btn-primary' type='button'>(401) 588-2449</button> */}\r\n        <img className='ms-2' src={withAssetPrefix(\"/vet.png\")} alt=\"vetOwned\" height='40' width='auto' />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UpperNavbar","// import { Link } from 'gatsby'\r\nimport React from 'react'\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <section id=\"contact\" className=\"py-4 bg-black text-light\">\r\n      <div className=\"container\">\r\n        <div className='h1 text-center mb-4 text-primary'>Contact Us</div>\r\n        <div className=\"row g-4\">\r\n          <div className=\"col-md text-primary\">\r\n            <div className='border-start border-light border-5 ps-3'>\r\n              <div className='lead'><span className=\"fw-bold text-light\">Mailing Address:</span> 7901 4th St N, Suite 300, St.\r\n                Petersburg, FL</div>\r\n              <div className='lead'><span className=\"fw-bold text-light\">Business Development:</span> <a href=\"tel:(656) 224-3902\" className='text-decoration-none'>(656) 224-3902</a></div>\r\n              <div className='lead'><span className=\"fw-bold text-light\">VIP Services:</span> <a href=\"tel:(656) 224-3903\" className='text-decoration-none'>(656) 224-3903</a></div>\r\n              <div className='lead'><span className=\"fw-bold text-light\">Email:</span> <a href=\"mailto:info@crmtampa.com\" className='text-decoration-none'>info@crmtampa.com</a></div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <form action=\"https://formsubmit.co/31aee523a5e7db1381cf87d0da5ebbc5\" method=\"POST\">\r\n                  <input type=\"hidden\" name=\"_captcha\" value=\"false\" />\r\n                  <input type=\"text\" name=\"_honey\" style={{display: 'none'}} />\r\n                  {/* <!-- edit redirect location for production --> */}\r\n                  <input type=\"hidden\" name=\"_next\" value=\"https://www.crmtampa.com/thankyou\" />\r\n\r\n\r\n                  <label htmlFor=\"name\">Name</label>\r\n                  <input type=\"text\" id='name' name='name' required className='form-control' />\r\n\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input type=\"email\" id='email' name='email' required className='form-control' />\r\n\r\n                  <label htmlFor=\"message\" className='form-label'>Message</label>\r\n                  <textarea id='message' name='message' required className='form-control' placeholder=''></textarea>\r\n                  <button className='btn btn-primary mt-2'>Submit</button>\r\n\r\n                </form>\r\n\r\n              </div>\r\n\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Contact","import React from 'react'\r\nimport Contact from './Contact';\r\n\r\nconst Footer = () => {\r\n  const year = new Date().getFullYear();\r\n  return (\r\n    <>\r\n      <Contact />\r\n      <div className=\"ntsa-widget\">\r\n        <iframe src=\"https://www.dhs.gov/ntas/\" name=\"National Terrorism Advisory System\" title=\"National Terrorism Advisory System\" width=\"170\" height=\"180\" scrolling=\"no\" frameBorder=\"0\" seamless border=\"0\"></iframe>\r\n      </div>\r\n\r\n      <section id=\"copyright\" className=\"py-4 bg-black text-primary\">\r\n        <div className='container text-center'>\r\n        <p><i className=\"bi bi-c-circle\"> </i>{year} CERBERUS RISK MANAGEMENT. All Rights Reserved</p>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\nimport Navbar from './Navbar'\r\nimport UpperNavbar from './UpperNavbar'\r\nimport Footer from './Footer'\r\nimport { Script } from 'gatsby'\r\nimport '../styles/globals.css'\r\nimport '../styles/custom.css'\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <div className='layout'>\r\n      <UpperNavbar />\r\n      <Navbar />\r\n      <div className=\"content\">\r\n        { children }\r\n      </div>\r\n      <Footer />\r\n      {/* <!-- Start of Tawk.to Script--> */}\r\n      <Script \r\n        type=\"text/javascript\" id='Tawkto'>{`\r\n        var Tawk_API = Tawk_API || {}, Tawk_LoadStart = new Date();\r\n        (function () {\r\n          var s1 = document.createElement(\"script\"), s0 = document.getElementsByTagName(\"script\")[0];\r\n          s1.async = true;\r\n          s1.src = 'https://embed.tawk.to/644fc6b031ebfa0fe7fb5ece/1gvbq0853';\r\n          s1.charset = 'UTF-8';\r\n          s1.setAttribute('crossorigin', '*');\r\n          s0.parentNode.insertBefore(s1, s0);\r\n        })();`}\r\n      </Script>\r\n      {/* <!--End of Tawk.to Script --> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout","import { graphql, useStaticQuery } from \"gatsby\"\r\n\r\nexport const useSiteMetadata = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n          description\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return data.site.siteMetadata\r\n}","import React from \"react\"\r\nimport { useSiteMetadata } from \"../hooks/use-site-metadata\"\r\nimport { withAssetPrefix } from 'gatsby'\r\n\r\nexport const Seo = ({ title, description, pathname, children }) => {\r\n  const { title: defaultTitle, description: defaultDescription } = useSiteMetadata()\r\n\r\n  const seo = {\r\n    title: title || defaultTitle,\r\n    description: description || defaultDescription,\r\n    // image: `${siteUrl}${image}`,\r\n    // url: `${siteUrl}${pathname || ``}`,\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <title>{title ? `${seo.title} | ${defaultTitle}` : defaultTitle}</title>\r\n      <meta name=\"description\" content={seo.description} />\r\n      <meta property=\"og:title\" content={title ? `${seo.title} | ${defaultTitle}` : defaultTitle} />\r\n      <meta property=\"og:description\" content={seo.description} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta property=\"og:image\" content={withAssetPrefix(\"/favicon.ico\")} />\r\n      {children}\r\n    </>\r\n  )\r\n}"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","MotionGlobalConfig","Queue","constructor","this","order","scheduled","Set","add","process","has","push","remove","index","indexOf","splice","delete","clear","length","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","steps","reduce","acc","key","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","keepAlive","immediate","addToCurrentFrame","queue","cancel","frameData","i","createRenderStep","processStep","stepId","processBatch","performance","now","Math","max","min","forEach","microtask","cancelMicrotask","queueMicrotask","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","postRender","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","Fragment","children","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","useConstant","init","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","noop","any","cancelFrame","requestAnimationFrame","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","transformers","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","sqrt","getValueTransition","instantAnimationState","isNotNull","getFinalKeyframe","repeat","repeatType","resolvedKeyframes","filter","clearTime","time","newTime","isZeroValueString","warning","invariant","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolver","needsMeasurement","unsetTransforms","measureInitialState","renderEndStyles","measureEndState","complete","readAllKeyframes","readKeyframes","resolveKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","resume","isColorString","testProp","splitColor","aName","bName","cName","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","map","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","DOMKeyframesResolver","owner","noneKeyframeIndexes","keyframe","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","originType","targetType","removedTransforms","getValue","removeNonTranslationalTransform","jump","suspendedScrollY","pageYOffset","measuredOrigin","measureViewportBox","scrollTo","unsetTransformName","unsetTransformValue","isAnimatable","BaseAnimation","autoplay","delay","repeatDelay","isStopped","updateFinishedPromise","_resolved","onKeyframesResolved","onUpdate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","pow","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","x1","y1","x2","y2","progress","from","to","toFromDifference","mixNumber","hueToRgb","q","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixImmediate","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","KeyframeResolver$1","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","onStop","teardown","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","supportsWaapi","memo","Element","acceleratedValues","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","setWithVelocity","static","HTMLElement","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","supports","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","HandoffCancelAllAnimations","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","_ref","toggleModal","React","div","className","onClick","action","method","htmlFor","required","selected","disabled","placeholder","useIsMounted","PopChildMeasure","childRef","sizeRef","offsetHeight","offsetWidth","offsetTop","offsetLeft","PopChild","nonce","dataset","motionPopId","head","appendChild","sheet","insertRule","removeChild","PresenceChild","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","childId","_","getChildKey","AnimatePresence","exitBeforeEnter","forceRender","forcedRenderCount","setForcedRenderCount","useState","useForceUpdate","filteredChildren","filtered","Children","isValidElement","onlyElements","childrenToRender","exitingChildren","presentChildren","allChildren","updateChildLookup","presentKeys","targetKeys","numPresent","component","insertionIndex","exitingComponent","onExit","leftOverKeys","childKey","leftOverKey","presentChild","presentChildKey","cloneElement","Navbar","modalOpen","setModalOpen","overflow","Link","src","withAssetPrefix","alt","href","RequestAQuote","UpperNavbar","rel","Contact","Footer","year","Date","getFullYear","title","scrolling","frameBorder","seamless","border","Script","Seo","description","pathname","defaultTitle","defaultDescription","useStaticQuery","site","siteMetadata","seo","content","property"],"sourceRoot":""}