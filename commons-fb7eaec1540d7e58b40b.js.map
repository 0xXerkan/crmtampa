{"version":3,"file":"commons-fb7eaec1540d7e58b40b.js","mappings":"qNAGA,SAASA,IACL,MAAMC,GAAY,IAAAC,SAAO,GAOzB,OANA,QAA0B,KACtBD,EAAUE,SAAU,EACb,KACHF,EAAUE,SAAU,CAAK,IAE9B,IACIF,CACX,C,+CCJA,MAAMG,UAAwB,YAC1BC,wBAAwBC,GACpB,MAAMC,EAAUC,KAAKC,MAAMC,SAASP,QACpC,GAAII,GAAWD,EAAUK,YAAcH,KAAKC,MAAME,UAAW,CACzD,MAAMC,EAAOJ,KAAKC,MAAMI,QAAQV,QAChCS,EAAKE,OAASP,EAAQQ,cAAgB,EACtCH,EAAKI,MAAQT,EAAQU,aAAe,EACpCL,EAAKM,IAAMX,EAAQY,UACnBP,EAAKQ,KAAOb,EAAQc,UACxB,CACA,OAAO,IACX,CAIAC,qBAAuB,CACvBC,SACI,OAAOf,KAAKC,MAAMe,QACtB,EAEJ,SAASC,GAAS,SAAED,EAAQ,UAAEb,IAC1B,MAAMe,GAAK,IAAAC,SACLC,GAAM,IAAA1B,QAAO,MACbU,GAAO,IAAAV,QAAO,CAChBc,MAAO,EACPF,OAAQ,EACRI,IAAK,EACLE,KAAM,KAEJ,MAAES,IAAU,IAAAC,YAAWC,EAAA,GAkC7B,OAxBA,IAAAC,qBAAmB,KACf,MAAM,MAAEhB,EAAK,OAAEF,EAAM,IAAEI,EAAG,KAAEE,GAASR,EAAKT,QAC1C,GAAIQ,IAAciB,EAAIzB,UAAYa,IAAUF,EACxC,OACJc,EAAIzB,QAAQ8B,QAAQC,YAAcR,EAClC,MAAMS,EAAQC,SAASC,cAAc,SAerC,OAdIR,IACAM,EAAMN,MAAQA,GAClBO,SAASE,KAAKC,YAAYJ,GACtBA,EAAMK,OACNL,EAAMK,MAAMC,WAAW,oCACFf,yEAEZV,wCACCF,qCACHI,sCACCE,0CAIL,KACHgB,SAASE,KAAKI,YAAYP,EAAM,CACnC,GACF,CAACxB,IACI,gBAAoBP,EAAiB,CAAEO,UAAWA,EAAWD,SAAUkB,EAAKf,QAASD,GAAQ,eAAmBY,EAAU,CAAEI,QACxI,CClEA,MAAMe,EAAgB,EAAGnB,WAAUoB,UAASjC,YAAWkC,iBAAgBC,SAAQC,wBAAuBC,WAClG,MAAMC,GAAmB,OAAYC,GAC/BxB,GAAK,IAAAC,SACLwB,GAAU,IAAAC,UAAQ,KAAM,CAC1B1B,KACAkB,UACAjC,YACAmC,SACAD,eAAiBQ,IACbJ,EAAiBK,IAAID,GAAS,GAC9B,IAAK,MAAME,KAAcN,EAAiBO,SACtC,IAAKD,EACD,OAERV,GAAkBA,GAAgB,EAEtCY,SAAWJ,IACPJ,EAAiBK,IAAID,GAAS,GACvB,IAAMJ,EAAiBS,OAAOL,OAQ7CN,OAAwBY,EAAY,CAAChD,IAiBrC,OAhBA,IAAAyC,UAAQ,KACJH,EAAiBW,SAAQ,CAACC,EAAGC,IAAQb,EAAiBK,IAAIQ,GAAK,IAAO,GACvE,CAACnD,IAKJ,aAAgB,MACXA,IACIsC,EAAiBrC,MAClBiC,GACAA,GAAgB,GACrB,CAAClC,IACS,cAATqC,IACAxB,EAAW,gBAAoBC,EAAU,CAAEd,UAAWA,GAAaa,IAE/D,gBAAoBuC,EAAA,EAAgBC,SAAU,CAAEC,MAAOd,GAAW3B,EAAU,EAExF,SAAS0B,IACL,OAAO,IAAIgB,GACf,C,4BC3CA,MAAMC,EAAeC,GAAUA,EAAMN,KAAO,GAiD5C,MAAMO,EAAkB,EAAG7C,WAAUsB,SAAQF,WAAU,EAAMC,iBAAgByB,kBAAiBvB,yBAAwB,EAAMC,OAAO,YAC/H,QAAWsB,EAAiB,4CAG5B,MAAMC,GAAc,IAAAzC,YAAW0C,EAAA,GAAoBD,aC3DvD,WACI,MAAMtE,EAAYD,KACXyE,EAAmBC,IAAwB,IAAAC,UAAS,GACrDJ,GAAc,IAAAK,cAAY,KAC5B3E,EAAUE,SAAWuE,EAAqBD,EAAoB,EAAE,GACjE,CAACA,IAMJ,MAAO,EADqB,IAAAG,cAAY,IAAM,KAAMC,WAAWN,IAAc,CAACA,IACjDE,EACjC,CD+CsEK,GAAiB,GAC7E7E,EAAYD,IAEZ+E,EAjDV,SAAsBvD,GAClB,MAAMwD,EAAW,GAMjB,OAJA,EAAAC,SAASrB,QAAQpC,GAAW4C,KACpB,IAAAc,gBAAed,IACfY,EAASG,KAAKf,EAAM,IAErBY,CACX,CAyC6BI,CAAa5D,GACtC,IAAI6D,EAAmBN,EACvB,MAAMO,GAAkB,IAAApF,QAAO,IAAIgE,KAAO/D,QAGpCoF,GAAkB,IAAArF,QAAOmF,GAEzBG,GAAc,IAAAtF,QAAO,IAAIgE,KAAO/D,QAGhCsF,GAAkB,IAAAvF,SAAO,GE1EnC,IAA0BwF,EFqFtB,IAVA,QAA0B,KACtBD,EAAgBtF,SAAU,EAnElC,SAA2BqB,EAAUgE,GACjChE,EAASoC,SAASQ,IACd,MAAMN,EAAMK,EAAYC,GACxBoB,EAAYlC,IAAIQ,EAAKM,EAAM,GAEnC,CA+DQuB,CAAkBZ,EAAkBS,GACpCD,EAAgBpF,QAAUkF,CAAgB,IE9ExBK,EFgFL,KACbD,EAAgBtF,SAAU,EAC1BqF,EAAYI,QACZN,EAAgBM,OAAO,GElFpB,IAAAC,YAAU,IAAM,IAAMH,KAAY,IFoFrCD,EAAgBtF,QAChB,OAAQ,gBAAoB,WAAgB,KAAMkF,EAAiBS,KAAK1B,GAAW,gBAAoBzB,EAAe,CAAEmB,IAAKK,EAAYC,GAAQzD,WAAW,EAAMiC,UAASA,QAAUe,EAAmBZ,sBAAuBA,EAAuBC,KAAMA,GAAQoB,MAGxQiB,EAAmB,IAAIA,GAGvB,MAAMU,EAAcR,EAAgBpF,QAAQ2F,IAAI3B,GAC1C6B,EAAajB,EAAiBe,IAAI3B,GAElC8B,EAAaF,EAAYG,OAC/B,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAYE,IAAK,CACjC,MAAMrC,EAAMiC,EAAYI,IACS,IAA7BH,EAAWI,QAAQtC,IAAgBwB,EAAgBe,IAAIvC,IACvDwB,EAAgBhC,IAAIQ,OAAKH,EAEjC,CA4DA,MAzDa,SAATX,GAAmBsC,EAAgB1E,OACnCyE,EAAmB,IAIvBC,EAAgB1B,SAAQ,CAAC0C,EAAWxC,KAEhC,IAAiC,IAA7BkC,EAAWI,QAAQtC,GACnB,OACJ,MAAMM,EAAQoB,EAAYe,IAAIzC,GAC9B,IAAKM,EACD,OACJ,MAAMoC,EAAiBT,EAAYK,QAAQtC,GAC3C,IAAI2C,EAAmBH,EACvB,IAAKG,EAAkB,CACnB,MAAMC,EAAS,KAEXpB,EAAgB5B,OAAOI,GAIvB,MAAM6C,EAAeC,MAAMC,KAAKrB,EAAYsB,QAAQC,QAAQC,IAAchB,EAAWiB,SAASD,KAa9F,GAXAL,EAAa/C,SAASsD,GAAgB1B,EAAY9B,OAAOwD,KAEzD3B,EAAgBpF,QAAU4E,EAAiBgC,QAAQI,IAC/C,MAAMC,EAAkBjD,EAAYgD,GACpC,OAEAC,IAAoBtD,GAEhB6C,EAAaM,SAASG,EAAiB,KAG1C9B,EAAgB1E,KAAM,CACvB,IAA0B,IAAtBX,EAAUE,QACV,OACJoE,IACA1B,GAAkBA,GACtB,GAEJ4D,EAAoB,gBAAoB9D,EAAe,CAAEmB,IAAKK,EAAYC,GAAQzD,WAAW,EAAOkC,eAAgB6D,EAAQ5D,OAAQA,EAAQC,sBAAuBA,EAAuBC,KAAMA,GAAQoB,GACxMkB,EAAgBhC,IAAIQ,EAAK2C,EAC7B,CACApB,EAAiBgC,OAAOb,EAAgB,EAAGC,EAAiB,IAIhEpB,EAAmBA,EAAiBS,KAAK1B,IACrC,MAAMN,EAAMM,EAAMN,IAClB,OAAOwB,EAAgBe,IAAIvC,GAAO,EAAW,gBAAoBnB,EAAe,CAAEmB,IAAKK,EAAYC,GAAQzD,WAAW,EAAMoC,sBAAuBA,EAAuBC,KAAMA,GAAQoB,EAAO,IAO3L,gBAAoB,WAAgB,KAAMkB,EAAgB1E,KAC5DyE,EACAA,EAAiBS,KAAK1B,IAAU,IAAAkD,cAAalD,KAAS,EGrGhE,MA3DemD,KAEb,MAAM,EAACC,EAAU,EAACC,IAAgB9C,EAAAA,EAAAA,WAAS,GAErC+C,EAAcA,KAClBD,GAAcD,EAAU,EAO1B,OAJA3B,EAAAA,EAAAA,YAAU,KACRzD,SAASuF,KAAKxF,MAAMyF,SAAWJ,EAAY,SAAW,OAAO,GAC5D,CAACA,IAGAK,EAAAA,cAAA,OAAKC,UAAU,sGACbD,EAAAA,cAAA,OAAKC,UAAU,aACbD,EAAAA,cAACE,EAAAA,GAAI,CAACC,GAAG,IAAIF,UAAU,wBACrBD,EAAAA,cAAA,OAAKC,UAAU,8CACbD,EAAAA,cAAA,OAAKC,UAAU,0EAAyE,OACxFD,EAAAA,cAAA,OAAKC,UAAU,qCACbD,EAAAA,cAAA,OAAKI,IAAI,YAAYC,IAAI,OAAOpH,OAAO,KAAKE,MAAM,UAEpD6G,EAAAA,cAAA,OAAKC,UAAU,gCAA+B,8BAKlDD,EAAAA,cAAA,UAAQC,UAAU,sBAAsBK,KAAK,SAAS,iBAAe,WAAW,iBAAe,eAC7FN,EAAAA,cAAA,QAAMC,UAAU,yBAGlBD,EAAAA,cAAA,OAAKC,UAAU,2BAA2BpG,GAAG,cAC3CmG,EAAAA,cAAA,MAAIC,UAAU,sDACZD,EAAAA,cAAA,MAAIC,UAAU,YACZD,EAAAA,cAACE,EAAAA,GAAI,CAACC,GAAG,aAAaF,UAAU,YAAW,aAE7CD,EAAAA,cAAA,MAAIC,UAAU,YACZD,EAAAA,cAAA,OAAK,cAAY,OAAOC,UAAU,WAAWM,QAASV,GAAa,oBAErEG,EAAAA,cAAA,MAAIC,UAAU,YACZD,EAAAA,cAACE,EAAAA,GAAI,CAACC,GAAG,YAAYF,UAAU,YAAW,eAE5CD,EAAAA,cAAA,MAAIC,UAAU,YACZD,EAAAA,cAACE,EAAAA,GAAI,CAACM,KAAK,IAAIP,UAAU,YAAW,YAEtCD,EAAAA,cAAA,MAAIC,UAAU,YACZD,EAAAA,cAACE,EAAAA,GAAI,CAACC,GAAG,qBAAqBF,UAAU,YACtCD,EAAAA,cAAA,UAAQC,UAAU,kBAAkBK,KAAK,UAAS,uBAM5DN,EAAAA,cAACxD,EAAe,KACZmD,GAAaK,EAAAA,cAACS,EAAAA,EAAa,CAACZ,YAAaA,KAEzC,EC1CZ,MAhBoBa,IAEhBV,EAAAA,cAAA,OAAKC,UAAU,YACbD,EAAAA,cAAA,OAAKC,UAAU,oEACbD,EAAAA,cAAA,OAAKC,UAAU,cACbD,EAAAA,cAAA,KAAGC,UAAU,uBAAuBO,KAAK,+HAA+HG,OAAO,SAASC,IAAI,cAAa,wBAE3MZ,EAAAA,cAAA,OAAKC,UAAU,cAEfD,EAAAA,cAAA,OAAKC,UAAU,OAAOG,IAAI,WAAWC,IAAI,WAAWpH,OAAO,KAAKE,MAAM,YCwC9E,MAjDgB0H,IAEZb,EAAAA,cAAA,WAASnG,GAAG,UAAUoG,UAAU,4BAC9BD,EAAAA,cAAA,OAAKC,UAAU,aACbD,EAAAA,cAAA,OAAKC,UAAU,oCAAmC,cAClDD,EAAAA,cAAA,OAAKC,UAAU,WACbD,EAAAA,cAAA,OAAKC,UAAU,uBACbD,EAAAA,cAAA,OAAKC,UAAU,2CACbD,EAAAA,cAAA,OAAKC,UAAU,QAAOD,EAAAA,cAAA,QAAMC,UAAU,sBAAqB,oBAAuB,iDAElFD,EAAAA,cAAA,OAAKC,UAAU,QAAOD,EAAAA,cAAA,QAAMC,UAAU,sBAAqB,UAAa,mBACxED,EAAAA,cAAA,OAAKC,UAAU,QAAOD,EAAAA,cAAA,QAAMC,UAAU,sBAAqB,UAAa,wBAI5ED,EAAAA,cAAA,OAAKC,UAAU,UACbD,EAAAA,cAAA,OAAKC,UAAU,QACbD,EAAAA,cAAA,OAAKC,UAAU,aACbD,EAAAA,cAAA,QAAMc,OAAO,yDAAyDC,OAAO,QAC3Ef,EAAAA,cAAA,SAAOM,KAAK,SAASU,KAAK,WAAW5E,MAAM,UAC3C4D,EAAAA,cAAA,SAAOM,KAAK,OAAOU,KAAK,SAAS1G,MAAO,CAAC2G,QAAS,UAElDjB,EAAAA,cAAA,SAAOM,KAAK,SAASU,KAAK,QAAQ5E,MAAM,sCAGxC4D,EAAAA,cAAA,SAAOkB,QAAQ,QAAO,QACtBlB,EAAAA,cAAA,SAAOM,KAAK,OAAOzG,GAAG,OAAOmH,KAAK,OAAOG,UAAQ,EAAClB,UAAU,iBAE5DD,EAAAA,cAAA,SAAOkB,QAAQ,SAAQ,SACvBlB,EAAAA,cAAA,SAAOM,KAAK,QAAQzG,GAAG,QAAQmH,KAAK,QAAQG,UAAQ,EAAClB,UAAU,iBAE/DD,EAAAA,cAAA,SAAOkB,QAAQ,UAAUjB,UAAU,cAAa,WAChDD,EAAAA,cAAA,YAAUnG,GAAG,UAAUmH,KAAK,UAAUG,UAAQ,EAAClB,UAAU,eAAemB,YAAY,KACpFpB,EAAAA,cAAA,UAAQC,UAAU,wBAAuB,iBCd3D,MAlBeoB,KACb,MAAMC,GAAO,IAAIC,MAAOC,cACxB,OACExB,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACa,EAAO,MACRb,EAAAA,cAAA,OAAKC,UAAU,eACbD,EAAAA,cAAA,UAAQI,IAAI,4BAA4BY,KAAK,qCAAqCS,MAAM,qCAAqCtI,MAAM,MAAMF,OAAO,MAAMyI,UAAU,KAAKC,YAAY,IAAIC,UAAQ,EAACC,OAAO,OAGvM7B,EAAAA,cAAA,WAASnG,GAAG,YAAYoG,UAAU,8BAChCD,EAAAA,cAAA,OAAKC,UAAU,yBACfD,EAAAA,cAAA,SAAGA,EAAAA,cAAA,KAAGC,UAAU,kBAAiB,KAAMqB,EAAK,oDAG7C,ECkBP,MA3BeQ,IAAmB,IAAlB,SAAEnI,GAAUmI,EAC1B,OACE9B,EAAAA,cAAA,OAAKC,UAAU,UACbD,EAAAA,cAACU,EAAW,MACZV,EAAAA,cAACN,EAAM,MACPM,EAAAA,cAAA,OAAKC,UAAU,WACXtG,GAEJqG,EAAAA,cAACqB,EAAM,MAEPrB,EAAAA,cAAC+B,EAAAA,GAAM,CACLzB,KAAK,kBAAkBzG,GAAG,UAAQ,ucAYhC,C,gFC7BV,MAAMmI,GAAgB,IAAAC,eAAc,CAAC,G,uBCArC,MAAMC,GAAc,IAAAD,eAAc,CAAEE,QAAQ,ICCtCC,EAAeC,GAAQA,EAAIC,QAAQ,mBAAoB,SAASC,cCAhEC,EAA+B,QAAUJ,EADjB,kB,cCA9B,MAAQK,SAAUC,EAAWC,OAAQC,IAAoB,OAAoBC,gBAAgB,GCF7F,SAASC,EAAY/I,GACjB,OAAQA,GACW,iBAARA,GACPgJ,OAAOC,UAAUC,eAAeC,KAAKnJ,EAAK,UAClD,CCDA,SAASoJ,EAAeC,GACpB,MAAoB,iBAANA,GAAkBrE,MAAMsE,QAAQD,EAClD,CCLA,SAASE,EAAoBF,GACzB,OAAc,OAANA,GACS,iBAANA,GACY,mBAAZA,EAAEG,KACjB,CCJA,MAAMC,EAAuB,CACzB,UACA,cACA,aACA,aACA,WACA,YACA,QAEEC,EAAe,CAAC,aAAcD,GCLpC,SAASE,EAAsB9K,GAC3B,OAAQ0K,EAAoB1K,EAAM+K,UAC9BF,EAAaG,MAAM5C,GAASmC,EAAevK,EAAMoI,KACzD,CACA,SAAS6C,EAAcjL,GACnB,OAAOkL,QAAQJ,EAAsB9K,IAAUA,EAAMmL,SACzD,CCNA,SAASC,EAAuBpL,GAC5B,MAAM,QAAEmC,EAAO,QAAE4I,GCFrB,SAAgC/K,EAAO0C,GACnC,GAAIoI,EAAsB9K,GAAQ,CAC9B,MAAM,QAAEmC,EAAO,QAAE4I,GAAY/K,EAC7B,MAAO,CACHmC,SAAqB,IAAZA,GAAqBoI,EAAepI,GACvCA,OACAe,EACN6H,QAASR,EAAeQ,GAAWA,OAAU7H,EAErD,CACA,OAAyB,IAAlBlD,EAAMqL,QAAoB3I,EAAU,CAAC,CAChD,CDTiC4I,CAAuBtL,GAAO,IAAAqB,YAAW+H,IACtE,OAAO,IAAAzG,UAAQ,KAAM,CAAGR,UAAS4I,aAAY,CAACQ,EAA0BpJ,GAAUoJ,EAA0BR,IAChH,CACA,SAASQ,EAA0BC,GAC/B,OAAOrF,MAAMsE,QAAQe,GAAQA,EAAKC,KAAK,KAAOD,CAClD,CEVA,MAAME,EAAe,CACjBC,UAAW,CACP,UACA,WACA,aACA,WACA,OACA,cACA,aACA,aAEJC,KAAM,CAAC,QACPC,KAAM,CAAC,OAAQ,gBACfC,MAAO,CAAC,cACRC,MAAO,CAAC,aAAc,eAAgB,cACtCC,IAAK,CAAC,WAAY,QAAS,aAAc,eACzCC,IAAK,CAAC,QAAS,aAAc,oBAAqB,YAClDC,OAAQ,CAAC,cAAe,kBAAmB,mBAC3CC,OAAQ,CAAC,SAAU,aAEjBC,EAAqB,CAAC,EAC5B,IAAK,MAAM/I,MAAOqI,EACdU,EAAmB/I,IAAO,CACtBgJ,UAAYrM,GAAU0L,EAAarI,IAAK2H,MAAM5C,KAAWpI,EAAMoI,M,wBClBvE,MAAMkE,GAA2B,IAAAjD,eAAc,CAAC,GCL1CkD,EAAwBC,OAAOC,IAAI,yBCuBzC,SAAS,GAAsB,kBAAEC,EAAiB,oBAAEC,EAAmB,UAAEC,EAAS,eAAEC,EAAc,UAAEC,IAChGJ,GCtBJ,SAAsBK,GAClB,IAAK,MAAM1J,KAAO0J,EACdX,EAAmB/I,GAAO,IACnB+I,EAAmB/I,MACnB0J,EAAS1J,GAGxB,CDeyB2J,CAAaN,GA2ClC,MAAMO,GAAsB,IAAAC,aA1C5B,SAAyBlN,EAAOmN,GAK5B,IAAIC,EACJ,MAAMC,EAAiB,KAChB,IAAAhM,YAAWC,EAAA,MACXtB,EACHsN,SAAUC,EAAYvN,KAEpB,SAAEwN,GAAaH,EACf3K,EAAU0I,EAAuBpL,GACjCyN,EAAcZ,EAAe7M,EAAOwN,GAC1C,IAAKA,GAAY,IAAW,CAOxB9K,EAAQgL,cErCpB,SAA0BZ,EAAWW,EAAazN,EAAO2M,GACrD,MAAQe,cAAeC,IAAW,IAAAtM,YAAW+H,GACvCwE,GAAc,IAAAvM,YAAWiI,GACzBuE,GAAkB,IAAAxM,YAAW,KAC7ByM,GAAsB,IAAAzM,YAAWC,EAAA,GAAqByM,cACtDC,GAAmB,IAAAvO,UAIzBkN,EAAsBA,GAAuBiB,EAAYK,UACpDD,EAAiBtO,SAAWiN,IAC7BqB,EAAiBtO,QAAUiN,EAAoBG,EAAW,CACtDW,cACAE,SACA3N,QACA6N,kBACAK,wBAAuBL,IACW,IAA5BA,EAAgB1L,QAEtB2L,yBAGR,MAAMJ,EAAgBM,EAAiBtO,SACvC,IAAA6B,qBAAmB,KACfmM,GAAiBA,EAAcS,OAAOnO,EAAO6N,EAAgB,IAMjE,MAAMO,GAAe,IAAA3O,QAAOyL,QAAQlL,EAAM4J,KAAkCyE,OAAOC,kBAgCnF,OA/BA,QAA0B,KACjBZ,IAEL5D,EAAU1F,WAAWsJ,EAAc5M,QAW/BsN,EAAa1O,SAAWgO,EAAca,gBACtCb,EAAca,eAAeC,iBACjC,KAEJ,IAAApJ,YAAU,KACDsI,IAELA,EAAce,kBACTL,EAAa1O,SAAWgO,EAAca,gBACvCb,EAAca,eAAeC,iBAE7BJ,EAAa1O,UACb0O,EAAa1O,SAAU,EAEvB2O,OAAOC,iBAAkB,GAC7B,IAEGZ,CACX,CF1BoCgB,CAAiB5B,EAAWW,EAAaJ,EAAgBV,GAKjF,MAAMgC,GAA2B,IAAAtN,YAAWiL,GACtCsC,GAAW,IAAAvN,YAAWiI,GAAaC,OACrC7G,EAAQgL,gBACRN,EAAgB1K,EAAQgL,cAAcV,aAEtCK,EAAgBuB,EAAUlC,EAAmBiC,GAErD,CAKA,OAAQ,gBAAoBvF,EAAc7F,SAAU,CAAEC,MAAOd,GACzD0K,GAAiB1K,EAAQgL,cAAiB,gBAAoBN,EAAe,CAAEM,cAAehL,EAAQgL,iBAAkBL,IAAqB,KAC7IT,EAAUE,EAAW9M,EG1DjC,SAAsByN,EAAaC,EAAeP,GAC9C,OAAO,IAAAhJ,cAAa0K,IAChBA,GAAYpB,EAAYqB,OAASrB,EAAYqB,MAAMD,GAC/CnB,IACAmB,EACMnB,EAAcoB,MAAMD,GACpBnB,EAAcqB,WAEpB5B,IAC2B,mBAAhBA,EACPA,EAAY0B,GAEP3E,EAAYiD,KACjBA,EAAYzN,QAAUmP,GAE9B,GAOJ,CAACnB,GACL,CHmCwCsB,CAAavB,EAAa/K,EAAQgL,cAAeP,GAAcM,EAAaD,EAAU9K,EAAQgL,eAClI,IAGA,OADAT,EAAoBV,GAAyBO,EACtCG,CACX,CACA,SAASM,GAAY,SAAED,IACnB,MAAM2B,GAAgB,IAAA5N,YAAW0C,EAAA,GAAoB9C,GACrD,OAAOgO,QAA8B/L,IAAboK,EAClB2B,EAAgB,IAAM3B,EACtBA,CACV,CI5DA,SAAS4B,EAAkBC,GACvB,SAAS9M,EAAOyK,EAAWsC,EAA8B,CAAC,GACtD,OAAO,EAAsBD,EAAarC,EAAWsC,GACzD,CACA,GAAqB,oBAAVC,MACP,OAAOhN,EAMX,MAAMiN,EAAiB,IAAI7L,IAC3B,OAAO,IAAI4L,MAAMhN,EAAQ,CAMrByD,IAAK,CAACyJ,EAASlM,KAINiM,EAAe1J,IAAIvC,IACpBiM,EAAezM,IAAIQ,EAAKhB,EAAOgB,IAE5BiM,EAAexJ,IAAIzC,KAGtC,CCxCA,MAAMmM,EAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,EAAe3C,GACpB,MAKqB,iBAAdA,IAIHA,EAAUtG,SAAS,SAOvBgJ,EAAqB7J,QAAQmH,IAAc,GAIvC,SAAS4C,KAAK5C,GAItB,CC3BA,MAAM6C,EAAkB,CAAC,ECGzB,MAAMC,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,EAAiB,IAAIC,IAAIF,GCtB/B,SAASG,EAAoB1M,GAAK,OAAE8I,EAAM,SAAEmB,IACxC,OAAQuC,EAAejK,IAAIvC,IACvBA,EAAI2M,WAAW,YACb7D,QAAuBjJ,IAAboK,OACLqC,EAAgBtM,IAAgB,YAARA,EACvC,CCRA,MAAM4M,EAAiBzM,GAAU0H,QAAQ1H,GAASA,EAAM0M,aCElDC,EAAiB,CACnBC,EAAG,aACHC,EAAG,aACHC,EAAG,aACHC,qBAAsB,eAEpBC,EAAgBZ,EAAmBnK,OCRzC,MAAMgL,EAAyBC,GAAWrN,GAAuB,iBAARA,GAAoBA,EAAI2M,WAAWU,GACtFC,EAAoBF,EAAsB,MAC1CG,EAAwBH,EAAsB,UAC9CI,EAAsBrN,KACAoN,EAAsBpN,IAIvCsN,EAAuBpB,KAAKlM,EAAMuN,MAAM,MAAM,GAAGC,QAEtDF,EAAyB,sFCPzBG,EAAiB,CAACzN,EAAOkE,IACpBA,GAAyB,iBAAVlE,EAChBkE,EAAKwJ,UAAU1N,GACfA,ECNJ2N,EAAQ,CAACC,EAAKC,EAAK7G,IACjBA,EAAI6G,EACGA,EACP7G,EAAI4G,EACGA,EACJ5G,ECHL8G,EAAS,CACX5B,KAAOlF,GAAmB,iBAANA,EACpB+G,MAAOC,WACPN,UAAY1G,GAAMA,GAEhBiH,EAAQ,IACPH,EACHJ,UAAY1G,GAAM2G,EAAM,EAAG,EAAG3G,IAE5BkH,EAAQ,IACPJ,EACHK,QAAS,GCPPC,EAAYpH,GAAMqH,KAAKC,MAAU,IAAJtH,GAAc,IAC3CuH,EAAa,8BACbC,EAAa,qHACbC,GAAmB,sHACzB,SAASC,GAAS1H,GACd,MAAoB,iBAANA,CAClB,CCVA,MAAM2H,GAAkBC,IAAS,CAC7B1C,KAAOlF,GAAM0H,GAAS1H,IAAMA,EAAE6H,SAASD,IAAiC,IAAxB5H,EAAEuG,MAAM,KAAKtL,OAC7D8L,MAAOC,WACPN,UAAY1G,GAAM,GAAGA,IAAI4H,MAEvBE,GAAUH,GAAe,OACzBI,GAAUJ,GAAe,KACzBK,GAAKL,GAAe,MACpBM,GAAKN,GAAe,MACpBO,GAAKP,GAAe,MACpBQ,GAAqB,IACpBJ,GACHhB,MAAQ/G,GAAM+H,GAAQhB,MAAM/G,GAAK,IACjC0G,UAAY1G,GAAM+H,GAAQrB,UAAc,IAAJ1G,ICblC,GAAM,IACL8G,EACHJ,UAAWW,KAAKC,OCAdc,GAAmB,CAErBC,YAAaL,GACbM,eAAgBN,GAChBO,iBAAkBP,GAClBQ,kBAAmBR,GACnBS,gBAAiBT,GACjBU,aAAcV,GACdW,OAAQX,GACRY,oBAAqBZ,GACrBa,qBAAsBb,GACtBc,wBAAyBd,GACzBe,uBAAwBf,GAExBjS,MAAOiS,GACPgB,SAAUhB,GACVnS,OAAQmS,GACRiB,UAAWjB,GACXrS,KAAMqS,GACN/R,IAAK+R,GACLkB,MAAOlB,GACPmB,OAAQnB,GACR7R,KAAM6R,GAENoB,QAASpB,GACTqB,WAAYrB,GACZsB,aAActB,GACduB,cAAevB,GACfwB,YAAaxB,GACbyB,OAAQzB,GACR0B,UAAW1B,GACX2B,YAAa3B,GACb4B,aAAc5B,GACd6B,WAAY7B,GAEZ8B,OAAQhC,GACRiC,QAASjC,GACTkC,QAASlC,GACTmC,QAASnC,GACTZ,MAAK,EACLgD,OAAQhD,EACRiD,OAAQjD,EACRkD,OAAQlD,EACRmD,KAAMvC,GACNwC,MAAOxC,GACPyC,MAAOzC,GACP0C,SAAUxC,GACVyC,WAAYzC,GACZ0C,WAAY1C,GACZ2C,WAAY3C,GACZpC,EAAGoC,GACHnC,EAAGmC,GACHlC,EAAGkC,GACH4C,YAAa5C,GACbjC,qBAAsBiC,GACtB6C,QAAS5D,EACT6D,QAAS3C,GACT4C,QAAS5C,GACT6C,QAAShD,GAETiD,OAAQ,GAERC,YAAajE,EACbkE,cAAelE,EACfmE,WAAY,IC9DhB,SAASC,GAAgBC,EAAOC,EAAcC,EAASC,GACnD,MAAM,MAAEvU,EAAK,KAAEwU,EAAI,UAAEhF,EAAS,gBAAEiF,GAAoBL,EAEpD,IAAIM,GAAe,EACfC,GAAqB,EAErBC,GAAkB,EAOtB,IAAK,MAAMjT,KAAO0S,EAAc,CAC5B,MAAMvS,EAAQuS,EAAa1S,GAI3B,GAAIsN,EAAkBtN,GAAM,CACxB6S,EAAK7S,GAAOG,EACZ,QACJ,CAEA,MAAM+S,EAAY3D,GAAiBvP,GAC7BmT,EAAcvF,EAAezN,EAAO+S,GAC1C,GAAI1G,EAAejK,IAAIvC,GAAM,CAKzB,GAHA+S,GAAe,EACflF,EAAU7N,GAAOmT,GAEZF,EACD,SAEA9S,KAAW+S,EAAU5E,SAAW,KAChC2E,GAAkB,EAC1B,MACSjT,EAAI2M,WAAW,WAEpBqG,GAAqB,EACrBF,EAAgB9S,GAAOmT,GAGvB9U,EAAM2B,GAAOmT,CAErB,CAiBA,GAhBKT,EAAa7E,YACVkF,GAAgBH,EAChBvU,EAAMwP,UTtClB,SAAwBA,GAAW,2BAAEuF,GAA6B,EAAI,mBAAEC,GAAqB,GAASC,EAAoBV,GAEtH,IAAIW,EAAkB,GAKtB,IAAK,IAAIlR,EAAI,EAAGA,EAAI8K,EAAe9K,IAAK,CACpC,MAAMrC,EAAMuM,EAAmBlK,QACRxC,IAAnBgO,EAAU7N,KAEVuT,GAAmB,GADGzG,EAAe9M,IAAQA,KACN6N,EAAU7N,OAEzD,CAaA,OAZIoT,IAA+BvF,EAAUZ,IACzCsG,GAAmB,iBAEvBA,EAAkBA,EAAgB5F,OAG9BiF,EACAW,EAAkBX,EAAkB/E,EAAWyF,EAAqB,GAAKC,GAEpEF,GAAsBC,IAC3BC,EAAkB,QAEfA,CACX,CSW8BC,CAAef,EAAM5E,UAAW8E,EAASM,EAAiBL,GAEvEvU,EAAMwP,YAKXxP,EAAMwP,UAAY,SAOtBmF,EAAoB,CACpB,MAAM,QAAEf,EAAU,MAAK,QAAEC,EAAU,MAAK,QAAEC,EAAU,GAAOW,EAC3DzU,EAAMyU,gBAAkB,GAAGb,KAAWC,KAAWC,GACrD,CACJ,CCvEA,MAAMsB,GAAwB,KAAM,CAChCpV,MAAO,CAAC,EACRwP,UAAW,CAAC,EACZiF,gBAAiB,CAAC,EAClBD,KAAM,CAAC,ICEX,SAASa,GAAkBhP,EAAQiP,EAAQhX,GACvC,IAAK,MAAMqD,KAAO2T,EACT/G,EAAc+G,EAAO3T,KAAU0M,EAAoB1M,EAAKrD,KACzD+H,EAAO1E,GAAO2T,EAAO3T,GAGjC,CAQA,SAAS4T,GAASjX,EAAOyN,EAAaD,GAClC,MACM9L,EAAQ,CAAC,EAMf,OAFAqV,GAAkBrV,EALA1B,EAAM0B,OAAS,CAAC,EAKE1B,GACpCmK,OAAO+M,OAAOxV,EAdlB,UAAgC,kBAAEuU,GAAqBxI,EAAaD,GAChE,OAAO,IAAA7K,UAAQ,KACX,MAAMmT,EAAQgB,KAEd,OADAjB,GAAgBC,EAAOrI,EAAa,CAAEgJ,4BAA6BjJ,GAAYyI,GACxE9L,OAAO+M,OAAO,CAAC,EAAGpB,EAAMI,KAAMJ,EAAMpU,MAAM,GAClD,CAAC+L,GACR,CAQyB0J,CAAuBnX,EAAOyN,EAAaD,IACzD9L,CACX,CACA,SAAS0V,GAAapX,EAAOyN,EAAaD,GAEtC,MAAM6J,EAAY,CAAC,EACb3V,EAAQuV,GAASjX,EAAOyN,EAAaD,GAoB3C,OAnBIxN,EAAM6L,OAA+B,IAAvB7L,EAAMsX,eAEpBD,EAAUE,WAAY,EAEtB7V,EAAM8V,WACF9V,EAAM+V,iBACF/V,EAAMgW,mBACF,OAEZhW,EAAMiW,aACa,IAAf3X,EAAM6L,KACA,OACA,QAAsB,MAAf7L,EAAM6L,KAAe,IAAM,WAEzB3I,IAAnBlD,EAAM4X,WACL5X,EAAM6X,OAAS7X,EAAM8X,YAAc9X,EAAM+X,YAC1CV,EAAUO,SAAW,GAEzBP,EAAU3V,MAAQA,EACX2V,CACX,CChDA,MAAMW,GAAmB,IAAIlI,IAAI,CAC7B,UACA,OACA,WACA,UACA,QACA,SACA,WACA,aACA,oBACA,SACA,UACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,kBACA,eACA,aAUJ,SAASmI,GAAkB5U,GACvB,OAAQA,EAAI2M,WAAW,UAClB3M,EAAI2M,WAAW,SAAmB,cAAR3M,GAC3BA,EAAI2M,WAAW,WACf3M,EAAI2M,WAAW,UACf3M,EAAI2M,WAAW,UACf3M,EAAI2M,WAAW,aACfgI,GAAiBpS,IAAIvC,EAC7B,CCpDA,IAAI6U,GAAiB7U,IAAS4U,GAAkB5U,GAoBhD,KAnBiC8U,GAyBLC,QAAQ,0BAA0BzG,WArB1DuG,GAAiB7U,GAAQA,EAAI2M,WAAW,OAASiI,GAAkB5U,GAAO8U,GAAY9U,GAsB1F,CACA,MAAOgV,IAEP,CA7BA,IAAiCF,GCDjC,SAASG,GAAWC,EAAQC,EAAQrY,GAChC,MAAyB,iBAAXoY,EACRA,EACA/F,GAAGtB,UAAUsH,EAASrY,EAAOoY,EACvC,CCJA,MAAME,GAAW,CACbD,OAAQ,oBACRE,MAAO,oBAELC,GAAY,CACdH,OAAQ,mBACRE,MAAO,mBCDX,SAASE,GAAc9C,GAAO,MAAE+C,EAAK,MAAEC,EAAK,UAAEC,EAAS,QAAEzD,EAAO,QAAEC,EAAO,WAAEyD,EAAU,YAAEC,EAAc,EAAC,WAAEC,EAAa,KAElHC,GAAUnD,EAASoD,EAAUnD,GAM5B,GALAJ,GAAgBC,EAAOqD,EAAQnD,EAASC,GAKpCmD,EAIA,YAHItD,EAAMpU,MAAM2X,UACZvD,EAAMwD,MAAMD,QAAUvD,EAAMpU,MAAM2X,UAI1CvD,EAAMwD,MAAQxD,EAAMpU,MACpBoU,EAAMpU,MAAQ,CAAC,EACf,MAAM,MAAE4X,EAAK,MAAE5X,EAAK,WAAE6X,GAAezD,EAKjCwD,EAAMpI,YACFqI,IACA7X,EAAMwP,UAAYoI,EAAMpI,kBACrBoI,EAAMpI,WAGbqI,SACarW,IAAZoS,QAAqCpS,IAAZqS,GAAyB7T,EAAMwP,aACzDxP,EAAMyU,gBFzBd,SAAgCoD,EAAYjE,EAASC,GAGjD,MAAO,GAFW+C,GAAWhD,EAASiE,EAAWnJ,EAAGmJ,EAAWhZ,UAC7C+X,GAAW/C,EAASgE,EAAWlJ,EAAGkJ,EAAWlZ,SAEnE,CEqBgCmZ,CAAuBD,OAAwBrW,IAAZoS,EAAwBA,EAAU,QAAiBpS,IAAZqS,EAAwBA,EAAU,UAG1HrS,IAAV2V,IACAS,EAAMlJ,EAAIyI,QACA3V,IAAV4V,IACAQ,EAAMjJ,EAAIyI,QACI5V,IAAd6V,IACAO,EAAM5H,MAAQqH,QAEC7V,IAAf8V,GD7BR,SAAsBM,EAAO7T,EAAQgU,EAAU,EAAGjB,EAAS,EAAGkB,GAAc,GAExEJ,EAAMN,WAAa,EAGnB,MAAM3S,EAAOqT,EAAcjB,GAAWE,GAEtCW,EAAMjT,EAAKmS,QAAUhG,GAAGtB,WAAWsH,GAEnC,MAAMQ,EAAaxG,GAAGtB,UAAUzL,GAC1BwT,EAAczG,GAAGtB,UAAUuI,GACjCH,EAAMjT,EAAKqS,OAAS,GAAGM,KAAcC,GACzC,CCkBQU,CAAaL,EAAON,EAAYC,EAAaC,GAAY,EAEjE,CC/CA,MAAMU,GAAuB,KAAM,IAC5B9C,KACHwC,MAAO,CAAC,ICJNF,GAAYS,GAAuB,iBAARA,GAA0C,QAAtBA,EAAIlQ,cCMzD,SAASmQ,GAAY9Z,EAAOyN,EAAasM,EAAWjN,GAChD,MAAMkN,GAAc,IAAArX,UAAQ,KACxB,MAAMmT,EAAQ8D,KAEd,OADAhB,GAAc9C,EAAOrI,EAAa,CAAEgJ,4BAA4B,GAAS2C,GAAStM,GAAY9M,EAAMiW,mBAC7F,IACAH,EAAMwD,MACT5X,MAAO,IAAKoU,EAAMpU,OACrB,GACF,CAAC+L,IACJ,GAAIzN,EAAM0B,MAAO,CACb,MAAMuY,EAAY,CAAC,EACnBlD,GAAkBkD,EAAWja,EAAM0B,MAAO1B,GAC1Cga,EAAYtY,MAAQ,IAAKuY,KAAcD,EAAYtY,MACvD,CACA,OAAOsY,CACX,CCdA,SAASE,GAAgBC,GAAqB,GAsB1C,MArBkB,CAACrN,EAAW9M,EAAOmB,GAAO4U,gBAAgBvI,KACxD,MAGMwM,GAHiBvK,EAAe3C,GAChCgN,GACA1C,IAC6BpX,EAAO+V,EAAcvI,EAAUV,GAC5DsN,EPoBd,SAAqBpa,EAAOqa,EAAOF,GAC/B,MAAMC,EAAgB,CAAC,EACvB,IAAK,MAAM/W,KAAOrD,EAQF,WAARqD,GAA4C,iBAAjBrD,EAAM+C,SAEjCmV,GAAc7U,KACU,IAAvB8W,GAA+BlC,GAAkB5U,KAChDgX,IAAUpC,GAAkB5U,IAE7BrD,EAAiB,WAAKqD,EAAI2M,WAAW,aACtCoK,EAAc/W,GAAOrD,EAAMqD,IAGnC,OAAO+W,CACX,COzC8BE,CAAYta,EAA4B,iBAAd8M,EAAwBqN,GAClEI,EAAezN,IAAc,EAAA0N,SAC7B,IAAKJ,KAAkBJ,EAAa7Y,OACpC,CAAC,GAMD,SAAEJ,GAAaf,EACfya,GAAmB,IAAA9X,UAAQ,IAAOsN,EAAclP,GAAYA,EAAS+E,MAAQ/E,GAAW,CAACA,IAC/F,OAAO,IAAAa,eAAckL,EAAW,IACzByN,EACHxZ,SAAU0Z,GACZ,CAGV,CC9BA,SAASC,GAAW5a,GAAS,MAAE4B,EAAK,KAAEwU,GAAQyE,EAAWC,GACrDzQ,OAAO+M,OAAOpX,EAAQ4B,MAAOA,EAAOkZ,GAAcA,EAAWC,oBAAoBF,IAEjF,IAAK,MAAMtX,KAAO6S,EACdpW,EAAQ4B,MAAMoZ,YAAYzX,EAAK6S,EAAK7S,GAE5C,CCHA,MAAM0X,GAAsB,IAAIjL,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBCtBJ,SAASkL,GAAUlb,EAASmb,EAAaC,EAAYN,GACjDF,GAAW5a,EAASmb,OAAa/X,EAAW0X,GAC5C,IAAK,MAAMvX,KAAO4X,EAAY3B,MAC1BxZ,EAAQqb,aAAcJ,GAAoBnV,IAAIvC,GAA0BA,EAAnBmG,EAAYnG,GAAY4X,EAAY3B,MAAMjW,GAEvG,CCNA,SAAS+X,GAA4Bpb,EAAOH,GACxC,MAAM,MAAE6B,GAAU1B,EACZqb,EAAY,CAAC,EACnB,IAAK,MAAMhY,KAAO3B,GACVuO,EAAcvO,EAAM2B,KACnBxD,EAAU6B,OAASuO,EAAcpQ,EAAU6B,MAAM2B,KAClD0M,EAAoB1M,EAAKrD,MACzBqb,EAAUhY,GAAO3B,EAAM2B,IAG/B,OAAOgY,CACX,CCVA,SAAS,GAA4Brb,EAAOH,GACxC,MAAMwb,EAAYD,GAA8Bpb,EAAOH,GACvD,IAAK,MAAMwD,KAAOrD,EACd,GAAIiQ,EAAcjQ,EAAMqD,KAAS4M,EAAcpQ,EAAUwD,IAAO,CAI5DgY,GAHuD,IAArCzL,EAAmBjK,QAAQtC,GACvC,OAASA,EAAIiY,OAAO,GAAGC,cAAgBlY,EAAImY,UAAU,GACrDnY,GACiBrD,EAAMqD,EACjC,CAEJ,OAAOgY,CACX,CCfA,SAASI,GAAwBzb,EAAO0b,EAAYrZ,EAAQsZ,EAAgB,CAAC,EAAGC,EAAkB,CAAC,GAsB/F,MAlB0B,mBAAfF,IACPA,EAAaA,OAAsBxY,IAAXb,EAAuBA,EAASrC,EAAMqC,OAAQsZ,EAAeC,IAM/D,iBAAfF,IACPA,EAAa1b,EAAMmL,UAAYnL,EAAMmL,SAASuQ,IAOxB,mBAAfA,IACPA,EAAaA,OAAsBxY,IAAXb,EAAuBA,EAASrC,EAAMqC,OAAQsZ,EAAeC,IAElFF,CACX,C,eCvBA,MAAMG,GAAqBrR,GAChBrE,MAAMsE,QAAQD,GCCnBsR,GAAiBtR,GACZU,QAAQV,GAAkB,iBAANA,GAAkBA,EAAEuR,KAAOvR,EAAEwR,SAEtDC,GAAgCzR,GAE3BqR,GAAkBrR,GAAKA,EAAEA,EAAE/E,OAAS,IAAM,EAAI+E,ECCzD,SAAS0R,GAAmB1Y,GACxB,MAAM2Y,EAAiBlM,EAAczM,GAASA,EAAMsC,MAAQtC,EAC5D,OAAOsY,GAAcK,GACfA,EAAeH,UACfG,CACV,CCMA,MAAMC,GAAsBC,GAAW,CAACrc,EAAOwN,KAC3C,MAAM9K,GAAU,IAAArB,YAAW+H,GACrByE,GAAkB,IAAAxM,YAAW,KAC7Bib,EAAO,IAbjB,UAAmB,4BAAElB,EAA2B,kBAAEmB,EAAiB,QAAEC,GAAYxc,EAAO0C,EAASmL,GAC7F,MAAMiI,EAAQ,CACVC,aAAc0G,GAAiBzc,EAAO0C,EAASmL,EAAiBuN,GAChEH,YAAasB,KAKjB,OAHIC,IACA1G,EAAMhH,MAASD,GAAa2N,EAAQxc,EAAO6O,EAAUiH,IAElDA,CACX,CAIuB4G,CAAUL,EAAQrc,EAAO0C,EAASmL,GACrD,OAAOL,EAAW8O,KAAS,QAAYA,EAAK,EAEhD,SAASG,GAAiBzc,EAAO0C,EAASmL,EAAiB8O,GACvD,MAAM5Z,EAAS,CAAC,EACV6Z,EAAeD,EAAmB3c,EAAO,CAAC,GAChD,IAAK,MAAMqD,KAAOuZ,EACd7Z,EAAOM,GAAO6Y,GAAmBU,EAAavZ,IAElD,IAAI,QAAElB,EAAO,QAAE4I,GAAY/K,EAC3B,MAAM6c,EAA0B/R,EAAsB9K,GAChD8c,EAAkB7R,EAAcjL,GAClC0C,GACAoa,IACCD,IACiB,IAAlB7c,EAAMqL,eACUnI,IAAZf,IACAA,EAAUO,EAAQP,cACNe,IAAZ6H,IACAA,EAAUrI,EAAQqI,UAE1B,IAAIgS,IAA4BlP,IACE,IAA5BA,EAAgB1L,QAEtB4a,EAA4BA,IAAyC,IAAZ5a,EACzD,MAAM6a,EAAeD,EAA4BhS,EAAU5I,EAC3D,GAAI6a,GACwB,kBAAjBA,IACNtS,EAAoBsS,GAAe,EACvB7W,MAAMsE,QAAQuS,GAAgBA,EAAe,CAACA,IACtD7Z,SAASuY,IACV,MAAMuB,EAAWxB,GAAwBzb,EAAO0b,GAChD,IAAKuB,EACD,OACJ,MAAM,cAAEC,EAAa,WAAEC,KAAepV,GAAWkV,EACjD,IAAK,MAAM5Z,KAAO0E,EAAQ,CACtB,IAAIqV,EAAcrV,EAAO1E,GACzB,GAAI8C,MAAMsE,QAAQ2S,GAAc,CAQ5BA,EAAcA,EAHAL,EACRK,EAAY3X,OAAS,EACrB,EAEV,CACoB,OAAhB2X,IACAra,EAAOM,GAAO+Z,EAEtB,CACA,IAAK,MAAM/Z,KAAO6Z,EACdna,EAAOM,GAAO6Z,EAAc7Z,EAAI,GAE5C,CACA,OAAON,CACX,C,eCtEA,MAAMsa,GAAkB,CACpBxQ,eAAgBuP,GAAmB,CAC/BhB,4BAA6B,GAC7BmB,kBAAmB3C,GACnB4C,QAAS,CAACxc,EAAO6O,GAAYoM,cAAalF,mBACtC,MAAMuH,MAAK,KACP,IACIrC,EAAY1B,WAEJ,mBADG1K,EAAS0O,QAEV1O,EAAS0O,UACT1O,EAAS2O,uBACvB,CACA,MAAOC,GAEHxC,EAAY1B,WAAa,CACrBnJ,EAAG,EACHC,EAAG,EACH9P,MAAO,EACPF,OAAQ,EAEhB,KAEJ,MAAMS,QAAO,KACT8X,GAAcqC,EAAalF,EAAc,CAAEU,4BAA4B,GAAS2C,GAASvK,EAAS6O,SAAU1d,EAAMiW,mBAClH+E,GAAUnM,EAAUoM,EAAY,GAClC,KC9BR0C,GAAmB,CACrB9Q,eAAgBuP,GAAmB,CAC/BhB,4BAA2B,GAC3BmB,kBAAmBzF,MCP3B,SAAS8G,GAAY7V,EAAQ8V,EAAWC,EAAS9H,EAAU,CAAE+H,SAAS,IAElE,OADAhW,EAAOiW,iBAAiBH,EAAWC,EAAS9H,GACrC,IAAMjO,EAAOkW,oBAAoBJ,EAAWC,EACvD,CCHA,MAAMI,GAAoBC,GACI,UAAtBA,EAAMC,YACyB,iBAAjBD,EAAME,QAAuBF,EAAME,QAAU,GAWhC,IAApBF,EAAMG,UCXrB,SAASC,GAAiBJ,EAAOK,EAAY,QACzC,MAAO,CACHC,MAAO,CACHrO,EAAG+N,EAAMK,EAAY,KACrBnO,EAAG8N,EAAMK,EAAY,MAGjC,CACA,MAAME,GAAkBZ,GACZK,GAAUD,GAAiBC,IAAUL,EAAQK,EAAOI,GAAiBJ,ICRjF,SAASQ,GAAgB5W,EAAQ8V,EAAWC,EAAS9H,GACjD,OAAO4H,GAAY7V,EAAQ8V,EAAWa,GAAeZ,GAAU9H,EACnE,CCEA,MAAM4I,GAAmB,CAACC,EAAGC,IAAOtU,GAAMsU,EAAED,EAAErU,IACxCuU,GAAO,IAAIC,IAAiBA,EAAaC,OAAOL,ICRtD,SAASM,GAAW9W,GAChB,IAAI+W,EAAO,KACX,MAAO,KACH,MAAMC,EAAW,KACbD,EAAO,IAAI,EAEf,OAAa,OAATA,IACAA,EAAO/W,EACAgX,EAEC,CAEpB,CACA,MAAMC,GAAuBH,GAAW,kBAClCI,GAAqBJ,GAAW,gBACtC,SAASK,GAAc1T,GACnB,IAAIsT,GAAO,EACX,GAAa,MAATtT,EACAsT,EAAOG,UAEN,GAAa,MAATzT,EACLsT,EAAOE,SAEN,CACD,MAAMG,EAAiBH,KACjBI,EAAeH,KACjBE,GAAkBC,EAClBN,EAAO,KACHK,IACAC,GAAc,GAKdD,GACAA,IACAC,GACAA,IAEZ,CACA,OAAON,CACX,CACA,SAASO,KAGL,MAAMC,EAAkBJ,IAAc,GACtC,OAAKI,IAELA,KACO,EACX,CClDA,MAAMC,GACFC,YAAYC,GACR/f,KAAKP,WAAY,EACjBO,KAAK+f,KAAOA,CAChB,CACA3R,SAAW,ECAf,SAAS4R,GAAcD,EAAME,GACzB,MAAMnC,EAAY,WAAamC,EAAW,QAAU,SAC9CC,EAAe,WAAaD,EAAW,QAAU,OAYvD,OAAOrB,GAAgBmB,EAAKpgB,QAASme,GAXjB,CAACM,EAAO+B,KACxB,GAA0B,UAAtB/B,EAAMC,aAA2BsB,KACjC,OACJ,MAAM1f,EAAQ8f,EAAKK,WACfL,EAAKvR,gBAAkBvO,EAAMogB,YAC7BN,EAAKvR,eAAe8R,UAAU,aAAcL,GAE5ChgB,EAAMigB,IACNjgB,EAAMigB,GAAc9B,EAAO+B,EAC/B,GAEyD,CACzDnC,SAAU+B,EAAKK,WAAWF,IAElC,CCfA,MAAMK,GAAgB,CAAC3S,EAAQhK,MACtBA,IAGIgK,IAAWhK,GAIT2c,GAAc3S,EAAQhK,EAAM4c,gB,eCN3C,SAASC,GAA0BpY,EAAM0V,GACrC,IAAKA,EACD,OACJ,MAAM2C,EAAwB,IAAIC,aAAa,UAAYtY,GAC3D0V,EAAQ2C,EAAuBlC,GAAiBkC,GACpD,CCTA,MAAME,GAAoB,IAAIC,QAMxBC,GAAY,IAAID,QAChBE,GAAwBC,IAC1B,MAAM9b,EAAW0b,GAAkB7a,IAAIib,EAAMhZ,QAC7C9C,GAAYA,EAAS8b,EAAM,EAEzBC,GAA4BC,IAC9BA,EAAQ9d,QAAQ2d,GAAqB,EAqBzC,SAASI,GAAoBphB,EAASkW,EAAS/Q,GAC3C,MAAMkc,EApBV,UAAkC,KAAEC,KAASpL,IACzC,MAAMqL,EAAaD,GAAQzf,SAItBkf,GAAUjb,IAAIyb,IACfR,GAAUhe,IAAIwe,EAAY,CAAC,GAE/B,MAAMC,EAAgBT,GAAU/a,IAAIub,GAC9Bhe,EAAMke,KAAKC,UAAUxL,GAQ3B,OAHKsL,EAAcje,KACfie,EAAcje,GAAO,IAAIoe,qBAAqBT,GAA0B,CAAEI,UAASpL,KAEhFsL,EAAcje,EACzB,CAEsCqe,CAAyB1L,GAG3D,OAFA2K,GAAkB9d,IAAI/C,EAASmF,GAC/Bkc,EAA0BQ,QAAQ7hB,GAC3B,KACH6gB,GAAkB1d,OAAOnD,GACzBqhB,EAA0BS,UAAU9hB,EAAQ,CAEpD,CC3CA,MAAM+hB,GAAiB,CACnB7W,KAAM,EACN8W,IAAK,GCAT,MAAMC,GAAoB,CACtB7V,OAAQ,CACJ0T,QDAR,cAA4BA,GACxBC,cACImC,SAASC,WACTliB,KAAKmiB,gBAAiB,EACtBniB,KAAKoiB,UAAW,CACpB,CACAC,gBACIriB,KAAKgP,UACL,MAAM,SAAEsT,EAAW,CAAC,GAAMtiB,KAAK+f,KAAKK,YAC9B,KAAEiB,EAAMnN,OAAQqO,EAAU,OAAEC,EAAS,OAAM,KAAEC,GAASH,EACtDrM,EAAU,CACZoL,KAAMA,EAAOA,EAAK1hB,aAAUwD,EAC5Bof,aACAG,UAA6B,iBAAXF,EAAsBA,EAASV,GAAeU,IA+BpE,OAAOrB,GAAoBnhB,KAAK+f,KAAKpgB,QAASsW,GA7BhB+K,IAC1B,MAAM,eAAE2B,GAAmB3B,EAI3B,GAAIhhB,KAAKoiB,WAAaO,EAClB,OAMJ,GALA3iB,KAAKoiB,SAAWO,EAKZF,IAASE,GAAkB3iB,KAAKmiB,eAChC,OAEKQ,IACL3iB,KAAKmiB,gBAAiB,GAEtBniB,KAAK+f,KAAKvR,gBACVxO,KAAK+f,KAAKvR,eAAe8R,UAAU,cAAeqC,GAMtD,MAAM,gBAAEC,EAAe,gBAAEC,GAAoB7iB,KAAK+f,KAAKK,WACjDlb,EAAWyd,EAAiBC,EAAkBC,EACpD3d,GAAYA,EAAS8b,EAAM,GAGnC,CACAjS,QACI/O,KAAKqiB,eACT,CACAjU,SACI,GAAoC,oBAAzBsT,qBACP,OACJ,MAAM,MAAEzhB,EAAK,UAAEH,GAAcE,KAAK+f,KACR,CAAC,SAAU,SAAU,QAAQ9U,KAO/D,UAAkC,SAAEqX,EAAW,CAAC,IAAOA,SAAUQ,EAAe,CAAC,GAAM,CAAC,GACpF,OAAQza,GAASia,EAASja,KAAUya,EAAaza,EACrD,CAToE0a,CAAyB9iB,EAAOH,KAExFE,KAAKqiB,eAEb,CACArT,UAAY,ICxDZ/C,IAAK,CACD4T,QHKR,cAA2BA,GACvBC,cACImC,SAASC,WACTliB,KAAKgjB,qBAAuBC,GAAA,EAC5BjjB,KAAKkjB,mBAAqBD,GAAA,EAC1BjjB,KAAKmjB,0BAA4BF,GAAA,EACjCjjB,KAAKojB,kBAAoB,CAACC,EAAYC,KAClC,GAAItjB,KAAKujB,WACL,OACJvjB,KAAKkjB,qBACL,MAAMjjB,EAAQD,KAAK+f,KAAKK,WAclBoD,EAA0B5E,GAAgBtQ,OAAQ,aAbhC,CAACmV,EAAUC,KAC/B,IAAK1jB,KAAK2jB,gBACN,OACJ,MAAM,MAAE7L,EAAK,YAAE8L,EAAW,gBAAEC,GAAoB7jB,KAAK+f,KAAKK,WAKzDyD,GACItD,GAAcvgB,KAAK+f,KAAKpgB,QAAS8jB,EAASzb,QAEzC8P,GAASA,EAAM2L,EAAUC,GADzBE,GAAeA,EAAYH,EAAUC,EACJ,GAE2C,CAAE1F,UAAW/d,EAAM6X,OAAS7X,EAAmB,eAC/H6jB,EAA8BlF,GAAgBtQ,OAAQ,iBAAiB,CAACyV,EAAaC,IAAehkB,KAAKikB,YAAYF,EAAaC,IAAa,CAAEhG,UAAW/d,EAAM2jB,aAAe3jB,EAAuB,mBAC9MD,KAAKkjB,mBAAqBlE,GAAKwE,EAAyBM,GACxD9jB,KAAKkkB,WAAWb,EAAYC,EAAU,EAE1CtjB,KAAKmkB,qBAAuB,KACxB,MAkBMC,EAAwBvG,GAAY7d,KAAK+f,KAAKpgB,QAAS,WAlBtC0kB,IACnB,GAAyB,UAArBA,EAAa/gB,KAAmBtD,KAAKujB,WACrC,OAUJvjB,KAAKkjB,qBACLljB,KAAKkjB,mBAAqBrF,GAAY7d,KAAK+f,KAAKpgB,QAAS,SAVpC2kB,IACM,UAAnBA,EAAWhhB,KAAoBtD,KAAK2jB,iBAExClD,GAA0B,MAAM,CAACrC,EAAO+B,KACpC,MAAM,MAAErI,GAAU9X,KAAK+f,KAAKK,WACxBtI,GACAA,EAAMsG,EAAO+B,EAAK,GACxB,IAINM,GAA0B,QAAQ,CAACrC,EAAO+B,KACtCngB,KAAKkkB,WAAW9F,EAAO+B,EAAK,GAC9B,IAQAoE,EAAqB1G,GAAY7d,KAAK+f,KAAKpgB,QAAS,QALvC,KACVK,KAAKujB,YAEV9C,GAA0B,UAAU,CAACsD,EAAaC,IAAehkB,KAAKikB,YAAYF,EAAaC,IAAY,IAG/GhkB,KAAKmjB,0BAA4BnE,GAAKoF,EAAuBG,EAAmB,CAExF,CACAL,WAAW9F,EAAO+B,GACdngB,KAAKujB,YAAa,EAClB,MAAM,WAAExL,EAAU,SAAEC,GAAahY,KAAK+f,KAAKK,WAIvCpI,GAAYhY,KAAK+f,KAAKvR,gBACtBxO,KAAK+f,KAAKvR,eAAe8R,UAAU,YAAY,GAE/CvI,GACAA,EAAWqG,EAAO+B,EAE1B,CACAwD,gBACI3jB,KAAKkjB,qBACLljB,KAAKujB,YAAa,EAKlB,OAJcvjB,KAAK+f,KAAKK,WACdpI,UAAYhY,KAAK+f,KAAKvR,gBAC5BxO,KAAK+f,KAAKvR,eAAe8R,UAAU,YAAY,IAE3CX,IACZ,CACAsE,YAAY7F,EAAO+B,GACf,IAAKngB,KAAK2jB,gBACN,OACJ,MAAM,YAAEC,GAAgB5jB,KAAK+f,KAAKK,WAC9BwD,GACAA,EAAYxF,EAAO+B,EAC3B,CACApR,QACI,MAAM9O,EAAQD,KAAK+f,KAAKK,WAClBoE,EAAwB5F,GAAgB3e,EAAM4jB,gBAAkBvV,OAAStO,KAAK+f,KAAKpgB,QAAS,cAAeK,KAAKojB,kBAAmB,CAAEpF,UAAW/d,EAAM8X,YAAc9X,EAAsB,kBAC1LwkB,EAAsB5G,GAAY7d,KAAK+f,KAAKpgB,QAAS,QAASK,KAAKmkB,sBACzEnkB,KAAKgjB,qBAAuBhE,GAAKwF,EAAuBC,EAC5D,CACAzV,UACIhP,KAAKgjB,uBACLhjB,KAAKkjB,qBACLljB,KAAKmjB,2BACT,IGpGApX,MAAO,CACH8T,QCTR,cAA2BA,GACvBC,cACImC,SAASC,WACTliB,KAAKigB,UAAW,CACpB,CACAyE,UACI,IAAIC,GAAiB,EAOrB,IACIA,EAAiB3kB,KAAK+f,KAAKpgB,QAAQilB,QAAQ,iBAC/C,CACA,MAAOlH,GACHiH,GAAiB,CACrB,CACKA,GAAmB3kB,KAAK+f,KAAKvR,iBAElCxO,KAAK+f,KAAKvR,eAAe8R,UAAU,cAAc,GACjDtgB,KAAKigB,UAAW,EACpB,CACA4E,SACS7kB,KAAKigB,UAAajgB,KAAK+f,KAAKvR,iBAEjCxO,KAAK+f,KAAKvR,eAAe8R,UAAU,cAAc,GACjDtgB,KAAKigB,UAAW,EACpB,CACAlR,QACI/O,KAAKgP,QAAUgQ,GAAKnB,GAAY7d,KAAK+f,KAAKpgB,QAAS,SAAS,IAAMK,KAAK0kB,YAAY7G,GAAY7d,KAAK+f,KAAKpgB,QAAS,QAAQ,IAAMK,KAAK6kB,WACzI,CACA7V,UAAY,IDtBZhD,MAAO,CACH6T,QLOR,cAA2BA,GACvB9Q,QACI/O,KAAKgP,QAAUgQ,GAAKgB,GAAchgB,KAAK+f,MAAM,GAAOC,GAAchgB,KAAK+f,MAAM,GACjF,CACA/Q,UAAY,KO3BhB,SAAS8V,GAAeC,EAAMC,GAC1B,IAAK5e,MAAMsE,QAAQsa,GACf,OAAO,EACX,MAAMC,EAAaD,EAAKtf,OACxB,GAAIuf,IAAeF,EAAKrf,OACpB,OAAO,EACX,IAAK,IAAIC,EAAI,EAAGA,EAAIsf,EAAYtf,IAC5B,GAAIqf,EAAKrf,KAAOof,EAAKpf,GACjB,OAAO,EAEf,OAAO,CACX,CCOA,SAASuf,GAAevX,EAAegO,EAAYrZ,GAC/C,MAAMrC,EAAQ0N,EAAcyS,WAC5B,OAAO1E,GAAwBzb,EAAO0b,OAAuBxY,IAAXb,EAAuBA,EAASrC,EAAMqC,OAf5F,SAAoBqL,GAChB,MAAMhO,EAAU,CAAC,EAEjB,OADAgO,EAAc3K,OAAOI,SAAQ,CAACK,EAAOH,IAAS3D,EAAQ2D,GAAOG,EAAMsC,QAC5DpG,CACX,CAWoGwlB,CAAWxX,GAP/G,SAAqBA,GACjB,MAAMyX,EAAW,CAAC,EAElB,OADAzX,EAAc3K,OAAOI,SAAQ,CAACK,EAAOH,IAAS8hB,EAAS9hB,GAAOG,EAAM0M,gBAC7DiV,CACX,CAG+HjV,CAAYxC,GAC3I,CCfA,MAAM0X,GAAyBC,GAAsB,IAAVA,EACrCC,GAAyBC,GAAiBA,EAAe,ICLzDC,GAAoB,CACtB9d,KAAM,SACN+d,UAAW,IACXC,QAAS,GACTC,UAAW,IAQTC,GAAsB,CACxBle,KAAM,YACNme,SAAU,IAMRC,GAAO,CACTpe,KAAM,YACNoe,KAAM,CAAC,IAAM,GAAK,IAAM,GACxBD,SAAU,IAERE,GAAuB,CAACC,GAAYC,eAClCA,EAAUxgB,OAAS,EACZmgB,GAEF/V,EAAejK,IAAIogB,GACjBA,EAAShW,WAAW,SAxBQ,CACvCtI,KAAM,SACN+d,UAAW,IACXC,QAAoB,IAsBaO,EAAU,GAtBnB,EAAIpU,KAAKqU,KAAK,KAAO,GAC7CP,UAAW,IAsBDH,GAEHM,GC5BX,SAASK,GAAmBhJ,EAAY9Z,GACpC,OAAO8Z,EAAW9Z,IAAQ8Z,EAAoB,SAAKA,CACvD,C,eCVA,MAAMiJ,IACO,ECDPC,GAAa7iB,GAAoB,OAAVA,EAC7B,SAAS8iB,GAAiBL,GAAW,OAAEM,EAAM,WAAEC,EAAa,SACxD,MAAMC,EAAoBR,EAAU3f,OAAO+f,IAI3C,OAAOI,EAHOF,GAAyB,SAAfC,GAAyBD,EAAS,GAAM,EAC1D,EACAE,EAAkBhhB,OAAS,EAErC,CCJA,IAAIihB,GACJ,SAASC,KACLD,QAAMxjB,CACV,CASA,MAAM0jB,GAAO,CACTF,IAAK,UACWxjB,IAARwjB,IACAE,GAAK/jB,IAAI,GAAAgkB,UAAUC,cAAgB,KAAmBC,gBAChD,GAAAF,UAAUG,UACVC,YAAYP,OAEfA,IAEX7jB,IAAMqkB,IACFR,GAAMQ,EACNjd,eAAe0c,GAAU,GCvB3BQ,GAAqB3c,GAAM,cAAckF,KAAKlF,G,eCApD,MAAM4c,GAAqB5c,GAAM,+BAA+BkF,KAAKlF,GCU/D6c,GAEN,2DASA,SAASC,GAAiB5nB,EAASI,EAASynB,EAAQ,IAChD,QAAUA,GAFG,EAEgB,yDAAyD7nB,yDACtF,MAAOgR,EAAO8W,GAVlB,SAA0B9nB,GACtB,MAAM+nB,EAAQJ,GAAsBK,KAAKhoB,GACzC,IAAK+nB,EACD,MAAO,CAAC,GACZ,MAAO,CAAEE,EAAQC,EAAQJ,GAAYC,EACrC,MAAO,CAAC,KAAKE,QAAuCA,EAASC,IAAUJ,EAC3E,CAI8BK,CAAiBnoB,GAE3C,IAAKgR,EACD,OAEJ,MAAMuM,EAAW5O,OAAOyZ,iBAAiBhoB,GAASioB,iBAAiBrX,GACnE,GAAIuM,EAAU,CACV,MAAM+K,EAAU/K,EAASjM,OACzB,OAAOoW,GAAkBY,GAAWxW,WAAWwW,GAAWA,CAC9D,CACA,OAAOnX,EAAmB2W,GACpBF,GAAiBE,EAAU1nB,EAASynB,EAAQ,GAC5CC,CACV,CCnCA,MAAMS,GAAiB,IAAInY,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,SACA,IACA,IACA,aACA,eAEEoY,GAAiB1d,GAAMA,IAAM8G,GAAU9G,IAAMgI,GAC7C2V,GAAmB,CAACC,EAAQC,IAAQ7W,WAAW4W,EAAOrX,MAAM,MAAMsX,IAClEC,GAAyB,CAACC,EAAMC,IAAS,CAACC,GAASvX,gBACrD,GAAkB,SAAdA,IAAyBA,EACzB,OAAO,EACX,MAAMwX,EAAWxX,EAAUuW,MAAM,uBACjC,GAAIiB,EACA,OAAOP,GAAiBO,EAAS,GAAIF,GAEpC,CACD,MAAMJ,EAASlX,EAAUuW,MAAM,qBAC/B,OAAIW,EACOD,GAAiBC,EAAO,GAAIG,GAG5B,CAEf,GAEEI,GAAgB,IAAI7Y,IAAI,CAAC,IAAK,IAAK,MACnC8Y,GAAgChZ,EAAmBtJ,QAAQjD,IAASslB,GAAc/iB,IAAIvC,KAe5F,MAAMwlB,GAAmB,CAErBtoB,MAAO,EAAG6P,MAAO4D,cAAc,IAAKF,eAAe,OAAU1D,EAAEiB,IAAMjB,EAAEgB,IAAMI,WAAWwC,GAAexC,WAAWsC,GAClHzT,OAAQ,EAAGgQ,MAAOwD,aAAa,IAAKE,gBAAgB,OAAU1D,EAAEgB,IAAMhB,EAAEe,IAAMI,WAAWqC,GAAcrC,WAAWuC,GAClHtT,IAAK,CAACgoB,GAAShoB,SAAU+Q,WAAW/Q,GACpCE,KAAM,CAAC8nB,GAAS9nB,UAAW6Q,WAAW7Q,GACtCgT,OAAQ,EAAGtD,MAAO5P,SAAU+Q,WAAW/Q,IAAQ4P,EAAEgB,IAAMhB,EAAEe,KACzDsC,MAAO,EAAGtD,MAAOzP,UAAW6Q,WAAW7Q,IAASyP,EAAEiB,IAAMjB,EAAEgB,KAE1DhB,EAAGkY,GAAuB,EAAG,IAC7BjY,EAAGiY,GAAuB,EAAG,KAGjCO,GAAiB5T,WAAa4T,GAAiBzY,EAC/CyY,GAAiB3T,WAAa2T,GAAiBxY,EC9D/C,MAAMyY,GAAiBte,GAAO9C,GAASA,EAAKgI,KAAKlF,GCK3Cue,GAAsB,CAACzX,EAAQkB,GAAID,GAASD,GAASI,GAAID,GCLlD,CACT/C,KAAOlF,GAAY,SAANA,EACb+G,MAAQ/G,GAAMA,IDOZwe,GAA0Bxe,GAAMue,GAAoBE,KAAKH,GAActe,IEVvE0e,GAAY,IAAIpZ,IACtB,IAAIqZ,IAAc,EACdC,IAAsB,EAC1B,SAASC,KACDD,KAEAF,GAAU/lB,SAASmmB,IACfA,EAASC,kBAAoBD,EAASE,iBAAiB,IAG3DN,GAAU/lB,SAASmmB,IACfA,EAASC,kBAAoBD,EAASG,qBAAqB,IAG/DP,GAAU/lB,SAASmmB,IACfA,EAASC,kBAAoBD,EAASI,iBAAiB,IAG3DR,GAAU/lB,SAASmmB,IACfA,EAASC,kBAAoBD,EAASK,iBAAiB,KAG/DP,IAAsB,EACtBD,IAAc,EACdD,GAAU/lB,SAASmmB,GAAaA,EAASM,aACzCV,GAAU/jB,OACd,CACA,SAAS0kB,KACLX,GAAU/lB,SAASmmB,IACfA,EAASQ,gBACLR,EAASC,mBACTH,IAAsB,EAC1B,IAEJ,MAAMW,iBAAiBV,GAC3B,CAOA,MAAMW,GACFnK,YAAYoK,EAAqBC,EAAY9hB,EAAM+hB,EAAarqB,EAASsqB,GAAU,GAK/ErqB,KAAK+C,YAAa,EAMlB/C,KAAKqqB,SAAU,EAKfrqB,KAAKwpB,kBAAmB,EAKxBxpB,KAAKopB,aAAc,EACnBppB,KAAKkqB,oBAAsB,IAAIA,GAC/BlqB,KAAKmqB,WAAaA,EAClBnqB,KAAKqI,KAAOA,EACZrI,KAAKoqB,YAAcA,EACnBpqB,KAAKD,QAAUA,EACfC,KAAKqqB,QAAUA,CACnB,CACAC,kBACItqB,KAAKopB,aAAc,EACfppB,KAAKqqB,SACLlB,GAAUoB,IAAIvqB,MACTopB,KACDA,IAAc,EACd,MAAM7L,KAAKuM,OAIf9pB,KAAK+pB,gBACL/pB,KAAK6pB,WAEb,CACAE,gBACI,MAAM,oBAAEG,EAAmB,KAAE7hB,EAAI,QAAEtI,EAAO,YAAEqqB,GAAgBpqB,KAK5D,IAAK,IAAI2F,EAAI,EAAGA,EAAIukB,EAAoBxkB,OAAQC,IAC5C,GAA+B,OAA3BukB,EAAoBvkB,GAIpB,GAAU,IAANA,EAAS,CACT,MAAM6kB,EAAeJ,aAAiD,EAASA,EAAYrkB,MACrF0kB,EAAgBP,EAAoBA,EAAoBxkB,OAAS,GACvE,QAAqBvC,IAAjBqnB,EACAN,EAAoB,GAAKM,OAExB,GAAIzqB,GAAWsI,EAAM,CACtB,MAAMqiB,EAAc3qB,EAAQ4qB,UAAUtiB,EAAMoiB,GACxCC,UACAR,EAAoB,GAAKQ,EAEjC,MAC+BvnB,IAA3B+mB,EAAoB,KACpBA,EAAoB,GAAKO,GAEzBL,QAAgCjnB,IAAjBqnB,GACfJ,EAAYtnB,IAAIonB,EAAoB,GAE5C,MAEIA,EAAoBvkB,GAAKukB,EAAoBvkB,EAAI,EAIjE,CACA8jB,kBAAoB,CACpBC,sBAAwB,CACxBC,kBAAoB,CACpBC,kBAAoB,CACpBC,WACI7pB,KAAK+C,YAAa,EAClB/C,KAAKmqB,WAAWnqB,KAAKkqB,qBACrBf,GAAUjmB,OAAOlD,KACrB,CACAgK,SACShK,KAAK+C,aACN/C,KAAKopB,aAAc,EACnBD,GAAUjmB,OAAOlD,MAEzB,CACA4qB,SACS5qB,KAAK+C,YACN/C,KAAKsqB,iBACb,ECxIJ,MAAMO,GAAgB,CAACljB,EAAMmjB,IAAcrgB,GAChCU,QAASgH,GAAS1H,IAAMyH,GAAiBvC,KAAKlF,IAAMA,EAAEwF,WAAWtI,IACnEmjB,GAAY1gB,OAAOC,UAAUC,eAAeC,KAAKE,EAAGqgB,IAEvDC,GAAa,CAACC,EAAOC,EAAOC,IAAWzgB,IACzC,IAAK0H,GAAS1H,GACV,OAAOA,EACX,MAAOqU,EAAGC,EAAGoM,EAAGzZ,GAASjH,EAAEid,MAAM1V,GACjC,MAAO,CACH,CAACgZ,GAAQvZ,WAAWqN,GACpB,CAACmM,GAAQxZ,WAAWsN,GACpB,CAACmM,GAAQzZ,WAAW0Z,GACpBzZ,WAAiBvO,IAAVuO,EAAsBD,WAAWC,GAAS,EACpD,ECbC0Z,GAAU,IACT7Z,EACHJ,UAAY1G,GAAMqH,KAAKC,MAHN,CAACtH,GAAM2G,EAAM,EAAG,IAAK3G,GAGT4gB,CAAa5gB,KAExC6gB,GAAO,CACT3b,KAAMkb,GAAc,MAAO,OAC3BrZ,MAAOuZ,GAAW,MAAO,QAAS,QAClC5Z,UAAW,EAAGoa,MAAKC,QAAOC,OAAM/Z,MAAOga,EAAU,KAAQ,QACrDN,GAAQja,UAAUoa,GAClB,KACAH,GAAQja,UAAUqa,GAClB,KACAJ,GAAQja,UAAUsa,GAClB,KACA5Z,EAASH,EAAMP,UAAUua,IACzB,KCYR,MAAMC,GAAM,CACRhc,KAAMkb,GAAc,KACpBrZ,MAhCJ,SAAkB/G,GACd,IAAImhB,EAAI,GACJC,EAAI,GACJ9M,EAAI,GACJD,EAAI,GAmBR,OAjBIrU,EAAE/E,OAAS,GACXkmB,EAAInhB,EAAEgR,UAAU,EAAG,GACnBoQ,EAAIphB,EAAEgR,UAAU,EAAG,GACnBsD,EAAItU,EAAEgR,UAAU,EAAG,GACnBqD,EAAIrU,EAAEgR,UAAU,EAAG,KAInBmQ,EAAInhB,EAAEgR,UAAU,EAAG,GACnBoQ,EAAIphB,EAAEgR,UAAU,EAAG,GACnBsD,EAAItU,EAAEgR,UAAU,EAAG,GACnBqD,EAAIrU,EAAEgR,UAAU,EAAG,GACnBmQ,GAAKA,EACLC,GAAKA,EACL9M,GAAKA,EACLD,GAAKA,GAEF,CACHyM,IAAKO,SAASF,EAAG,IACjBJ,MAAOM,SAASD,EAAG,IACnBJ,KAAMK,SAAS/M,EAAG,IAClBrN,MAAOoN,EAAIgN,SAAShN,EAAG,IAAM,IAAM,EAE3C,EAII3N,UAAWma,GAAKna,WC/Bd4a,GAAO,CACTpc,KAAMkb,GAAc,MAAO,OAC3BrZ,MAAOuZ,GAAW,MAAO,aAAc,aACvC5Z,UAAW,EAAG6a,MAAKC,aAAYC,YAAWxa,MAAOga,EAAU,KAC/C,QACJ5Z,KAAKC,MAAMia,GACX,KACAxZ,GAAQrB,UAAUU,EAASoa,IAC3B,KACAzZ,GAAQrB,UAAUU,EAASqa,IAC3B,KACAra,EAASH,EAAMP,UAAUua,IACzB,KCZNS,GAAQ,CACVxc,KAAOlF,GAAM6gB,GAAK3b,KAAKlF,IAAMkhB,GAAIhc,KAAKlF,IAAMshB,GAAKpc,KAAKlF,GACtD+G,MAAQ/G,GACA6gB,GAAK3b,KAAKlF,GACH6gB,GAAK9Z,MAAM/G,GAEbshB,GAAKpc,KAAKlF,GACRshB,GAAKva,MAAM/G,GAGXkhB,GAAIna,MAAM/G,GAGzB0G,UAAY1G,GACD0H,GAAS1H,GACVA,EACAA,EAAEH,eAAe,OACbghB,GAAKna,UAAU1G,GACfshB,GAAK5a,UAAU1G,ICZjC,MAAM2hB,GAAe,SACfC,GAAc,QACdC,GAAY,MACZC,GAAqB,OACrBC,GAAc,MAEdC,GAAe,kOACrB,SAASC,GAAoBjpB,GACzB,MAAMkpB,EAAgBlpB,EAAMmpB,WACtB5pB,EAAS,GACT6pB,EAAU,CACZV,MAAO,GACP5a,OAAQ,GACRub,IAAK,IAEHC,EAAQ,GACd,IAAIpnB,EAAI,EACR,MAmBMqL,EAnBY2b,EAAchjB,QAAQ8iB,IAAeO,IAC/Cb,GAAMxc,KAAKqd,IACXH,EAAQV,MAAMxnB,KAAKgB,GACnBonB,EAAMpoB,KAAK0nB,IACXrpB,EAAO2B,KAAKwnB,GAAM3a,MAAMwb,KAEnBA,EAAY/c,WAAWsc,KAC5BM,EAAQC,IAAInoB,KAAKgB,GACjBonB,EAAMpoB,KAAK2nB,IACXtpB,EAAO2B,KAAKqoB,KAGZH,EAAQtb,OAAO5M,KAAKgB,GACpBonB,EAAMpoB,KAAKynB,IACXppB,EAAO2B,KAAK8M,WAAWub,OAEzBrnB,EACK6mB,MAEaxb,MAAMwb,IAC9B,MAAO,CAAExpB,SAAQgO,QAAO6b,UAASE,QACrC,CACA,SAASE,GAAkBxiB,GACvB,OAAOiiB,GAAoBjiB,GAAGzH,MAClC,CACA,SAASkqB,GAAkBjW,GACvB,MAAM,MAAEjG,EAAK,MAAE+b,GAAUL,GAAoBzV,GACvCkW,EAAcnc,EAAMtL,OAC1B,OAAQ+E,IACJ,IAAI2iB,EAAS,GACb,IAAK,IAAIznB,EAAI,EAAGA,EAAIwnB,EAAaxnB,IAE7B,GADAynB,GAAUpc,EAAMrL,QACHxC,IAATsH,EAAE9E,GAAkB,CACpB,MAAMgC,EAAOolB,EAAMpnB,GAEfynB,GADAzlB,IAASykB,GACCva,EAASpH,EAAE9E,IAEhBgC,IAAS0kB,GACJF,GAAMhb,UAAU1G,EAAE9E,IAGlB8E,EAAE9E,EAEpB,CAEJ,OAAOynB,CAAM,CAErB,CACA,MAAMC,GAAwB5iB,GAAmB,iBAANA,EAAiB,EAAIA,EAMhE,MAAM6iB,GAAU,CACZ3d,KAhFJ,SAAclF,GACV,IAAI6N,EAAIiV,EACR,OAAQC,MAAM/iB,IACV0H,GAAS1H,MACwB,QAA9B6N,EAAK7N,EAAEid,MAAM1V,UAAgC,IAAPsG,OAAgB,EAASA,EAAG5S,SAAW,KAC3C,QAA9B6nB,EAAK9iB,EAAEid,MAAMzV,UAAgC,IAAPsb,OAAgB,EAASA,EAAG7nB,SAAW,GAChF,CACZ,EA0EI8L,MAAOyb,GACPC,qBACAO,kBATJ,SAA2BhjB,GACvB,MAAMijB,EAAST,GAAkBxiB,GAEjC,OADoByiB,GAAkBziB,EAC/BkjB,CAAYD,EAAOpoB,IAAI+nB,IAClC,GC3EMO,GAAc,IAAI7d,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAAS8d,GAAmBpjB,GACxB,MAAOpC,EAAM5E,GAASgH,EAAEqjB,MAAM,GAAI,GAAG9c,MAAM,KAC3C,GAAa,gBAAT3I,EACA,OAAOoC,EACX,MAAO8G,GAAU9N,EAAMikB,MAAM1V,IAAe,GAC5C,IAAKT,EACD,OAAO9G,EACX,MAAM4H,EAAO5O,EAAMkG,QAAQ4H,EAAQ,IACnC,IAAIwc,EAAeH,GAAY/nB,IAAIwC,GAAQ,EAAI,EAG/C,OAFIkJ,IAAW9N,IACXsqB,GAAgB,KACb1lB,EAAO,IAAM0lB,EAAe1b,EAAO,GAC9C,CACA,MAAM2b,GAAgB,uBAChBznB,GAAS,IACR+mB,GACHG,kBAAoBhjB,IAChB,MAAMwjB,EAAYxjB,EAAEid,MAAMsG,IAC1B,OAAOC,EAAYA,EAAU3oB,IAAIuoB,IAAoBniB,KAAK,KAAOjB,CAAC,GClBpEyjB,GAAoB,IACnBrb,GAEHsZ,MAAK,GACLgC,gBAAiBhC,GACjBiC,aAAcjC,GACdkC,KAAMlC,GACNmC,OAAQnC,GAERoC,YAAapC,GACbqC,eAAgBrC,GAChBsC,iBAAkBtC,GAClBuC,kBAAmBvC,GACnBwC,gBAAiBxC,GACjB5lB,OAAM,GACNqoB,aAAcroB,IAKZsoB,GAAuBvrB,GAAQ4qB,GAAkB5qB,GCvBvD,SAAS,GAAkBA,EAAKG,GAC5B,IAAIqrB,EAAmBD,GAAoBvrB,GAI3C,OAHIwrB,IAAqBvoB,KACrBuoB,EAAmBxB,IAEhBwB,EAAiBrB,kBAClBqB,EAAiBrB,kBAAkBhqB,QACnCN,CACV,CCJA,MAAM4rB,WAA6B9E,GAC/BnK,YAAYoK,EAAqBC,EAAY9hB,EAAM+hB,GAC/CnI,MAAMiI,EAAqBC,EAAY9hB,EAAM+hB,EAAaA,aAAiD,EAASA,EAAY4E,OAAO,EAC3I,CACAjF,gBACI,MAAM,oBAAEG,EAAmB,QAAEnqB,EAAO,KAAEsI,GAASrI,KAC/C,IAAKD,EAAQJ,QACT,OACJ,MAAMsvB,EAAsB,GAC5BhN,MAAM8H,gBAIN,IAAK,IAAIpkB,EAAI,EAAGA,EAAIukB,EAAoBxkB,OAAQC,IAAK,CACjD,MAAMupB,EAAWhF,EAAoBvkB,GACrC,GAAwB,iBAAbupB,GAAyBpe,EAAmBoe,GAAW,CAC9D,MAAMhS,EAAWqK,GAAiB2H,EAAUnvB,EAAQJ,cACnCwD,IAAb+Z,IACAgN,EAAoBvkB,GAAKuX,EAEjC,ECzBa,iBADTzZ,ED2BOymB,EAAoBvkB,ICzBlB,IAAVlC,EAEQ,OAAVA,GACY,SAAVA,GAA8B,MAAVA,GAAiB2jB,GAAkB3jB,KDuBtDwrB,EAAoBtqB,KAAKgB,EAEjC,CC9BR,IAAgBlC,EDwCR,GATIwrB,EAAoBvpB,QEzBhC,SAAqCwkB,EAAqB+E,EAAqB5mB,GAC3E,IACI8mB,EADAxpB,EAAI,EAER,KAAOA,EAAIukB,EAAoBxkB,SAAWypB,GACA,iBAA3BjF,EAAoBvkB,IACA,SAA3BukB,EAAoBvkB,IACO,MAA3BukB,EAAoBvkB,KACpBwpB,EAAqBjF,EAAoBvkB,IAE7CA,IAEJ,GAAIwpB,GAAsB9mB,EACtB,IAAK,MAAM+mB,KAAaH,EACpB/E,EAAoBkF,GAAa,GAAkB/mB,EAAM8mB,EAGrE,CFUYE,CAA4BnF,EAAqB+E,EAAqB5mB,IAQrE6f,GAAeriB,IAAIwC,IAAwC,IAA/B6hB,EAAoBxkB,OACjD,OAEJ,MAAO8S,EAAQxQ,GAAUkiB,EACnBoF,EAAarG,GAAuBzQ,GACpC+W,EAAatG,GAAuBjhB,GAI1C,GAAKsnB,GAAeC,GAAcD,IAAeC,EAMjD,GAAIpH,GAAcmH,IAAenH,GAAcoH,GAC3C,IAAK,IAAI5pB,EAAI,EAAGA,EAAIukB,EAAoBxkB,OAAQC,IAAK,CACjD,MAAMlC,EAAQymB,EAAoBvkB,GACb,iBAAVlC,IACPymB,EAAoBvkB,GAAK8L,WAAWhO,GAE5C,MAMAzD,KAAKwpB,kBAAmB,CAEhC,CACAC,kBACI,MAAM,QAAE1pB,EAAO,KAAEsI,EAAI,oBAAE6hB,GAAwBlqB,KAC/C,IAAKD,EAAQJ,QACT,OACJK,KAAKwvB,kBdvCb,SAAyC7hB,GACrC,MAAM6hB,EAAoB,GAW1B,OAVA3G,GAA8BzlB,SAASE,IACnC,MAAMG,EAAQkK,EAAc8hB,SAASnsB,QACvBH,IAAVM,IACA+rB,EAAkB7qB,KAAK,CAACrB,EAAKG,EAAMsC,QACnCtC,EAAMX,IAAIQ,EAAI2M,WAAW,SAAW,EAAI,GAC5C,IAGAuf,EAAkB9pB,QAClBiI,EAAc5M,SACXyuB,CACX,Cc0BiCE,CAAgC3vB,GACzD,MAAM0qB,EAAgBP,EAAoBA,EAAoBxkB,OAAS,GACvE3F,EAAQ0vB,SAASpnB,EAAMoiB,GAAekF,KAAKlF,GAAe,EAC9D,CACAf,sBACI,MAAM,QAAE3pB,EAAO,oBAAEmqB,EAAmB,KAAE7hB,GAASrI,KAC1CD,EAAQJ,UAEA,WAAT0I,IACArI,KAAK4vB,iBAAmBthB,OAAOuhB,aAEnC7vB,KAAK8vB,eAAiBhH,GAAiBzgB,GAAMtI,EAAQgwB,qBAAsBzhB,OAAOyZ,iBAAiBhoB,EAAQJ,UAC3GuqB,EAAoB,GAAKlqB,KAAK8vB,eAClC,CACAnG,kBACI3pB,KAAKD,QAAQgB,QACjB,CACA6oB,kBACI,IAAItR,EACJ,MAAM,QAAEvY,EAAO,KAAEsI,EAAI,oBAAE6hB,GAAwBlqB,KAC/C,IAAKD,EAAQJ,QACT,OACJ,MAAM8D,EAAQ1D,EAAQ0vB,SAASpnB,GAC/B5E,GAASA,EAAMksB,KAAK3vB,KAAK8vB,gBAAgB,GACzC5F,EAAoBA,EAAoBxkB,OAAS,GAAKojB,GAAiBzgB,GAAMtI,EAAQgwB,qBAAsBzhB,OAAOyZ,iBAAiBhoB,EAAQJ,UAC9H,WAAT0I,QAA+ClF,IAA1BnD,KAAK4vB,kBAC1BthB,OAAO0hB,SAAS,EAAGhwB,KAAK4vB,mBAGU,QAAjCtX,EAAKtY,KAAKwvB,yBAAsC,IAAPlX,OAAgB,EAASA,EAAG5S,SACtE1F,KAAKwvB,kBAAkBpsB,SAAQ,EAAE6sB,EAAoBC,MACjDnwB,EACK0vB,SAASQ,GACTntB,IAAIotB,EAAoB,GAGzC,EGrGJ,MAAMC,GAAe,CAAC1sB,EAAO4E,IAEZ,WAATA,MAKiB,iBAAV5E,IAAsB2C,MAAMsE,QAAQjH,OAE1B,iBAAVA,IACN6pB,GAAQ3d,KAAKlM,IAAoB,MAAVA,GACvBA,EAAMwM,WAAW,UCjB1B,MAAMmgB,GACFtQ,aAAY,SAAEuQ,GAAW,EAAI,MAAEC,EAAQ,EAAC,KAAE3oB,EAAO,YAAW,OAAE6e,EAAS,EAAC,YAAE+J,EAAc,EAAC,WAAE9J,EAAa,UAAWxQ,IAE/GjW,KAAKwwB,WAAY,EACjBxwB,KAAKiW,QAAU,CACXoa,WACAC,QACA3oB,OACA6e,SACA+J,cACA9J,gBACGxQ,GAEPjW,KAAKywB,uBACT,CAMIvT,eAGA,OAFKld,KAAK0wB,Ydad5G,KACAR,MACA,SAAYQ,KACZ,SAAYR,KcdDtpB,KAAK0wB,SAChB,CAMAC,oBAAoBzK,GAChB,MAAM,KAAE7d,EAAI,KAAEV,EAAI,SAAEyd,EAAQ,MAAEkL,EAAK,WAAEnG,EAAU,SAAEyG,GAAa5wB,KAAKiW,QAKnE,IC7BR,SAAoBiQ,EAAW7d,EAAMV,EAAMyd,GAMvC,MAAMyL,EAAiB3K,EAAU,GACjC,GAAuB,OAAnB2K,EACA,OAAO,EACX,MAAMC,EAAiB5K,EAAUA,EAAUxgB,OAAS,GAC9CqrB,EAAqBZ,GAAaU,EAAgBxoB,GAClD2oB,EAAqBb,GAAaW,EAAgBzoB,GAGxD,OAFA,QAAQ0oB,IAAuBC,EAAoB,6BAA6B3oB,WAAcwoB,UAAuBC,OAAoBD,+DAA4EA,8BAA2CC,oCAE3PC,IAAuBC,KAvBhC,SAA6B9K,GACzB,MAAMvmB,EAAUumB,EAAU,GAC1B,GAAyB,IAArBA,EAAUxgB,OACV,OAAO,EACX,IAAK,IAAIC,EAAI,EAAGA,EAAIugB,EAAUxgB,OAAQC,IAClC,GAAIugB,EAAUvgB,KAAOhG,EACjB,OAAO,CAEnB,CAkBWsxB,CAAoB/K,IAAwB,WAATve,GAAqByd,EACnE,CDWa8L,CAAWhL,EAAW7d,EAAMV,EAAMyd,GAAW,CAE9C,GAAIiB,KAAkCiK,EAAO,CACzC,MAAM7F,EAAgBlE,GAAiBL,EAAWlmB,KAAKiW,SAKvD,OAJA2a,SAAoDA,EAASnG,GAC7DN,SAAwDA,IACxDnqB,KAAKmxB,8BACLnxB,KAAKywB,uBAET,CAGIzwB,KAAKiW,QAAQ6P,SAAW,CAEhC,CACA9lB,KAAK0wB,UAAY,CACbxK,eACGlmB,KAAKoxB,aAAalL,IAEzBlmB,KAAKqxB,gBACT,CACAA,iBAAmB,CAMnBC,KAAKC,EAASC,GACV,OAAOxxB,KAAKyxB,uBAAuBH,KAAKC,EAASC,EACrD,CACAf,wBACIzwB,KAAKyxB,uBAAyB,IAAIC,SAASH,IACvCvxB,KAAKmxB,uBAAyB,KAC1BI,IACAvxB,KAAKywB,uBAAuB,CAC/B,GAET,EExEJ,SAASkB,GAAkBvM,EAAUwM,GACjC,OAAOA,EAAgBxM,GAAY,IAAOwM,GAAiB,CAC/D,CCNA,MAAMC,GAAyB,EAC/B,SAASC,GAAsBC,EAAcC,EAAGryB,GAC5C,MAAMsyB,EAAQngB,KAAKR,IAAI0gB,EAAIH,GAAwB,GACnD,OAAOF,GAAkBhyB,EAAUoyB,EAAaE,GAAQD,EAAIC,EAChE,CCFA,MAAMC,GAAU,KACVC,GAAc,IACdC,GAAc,GACdC,GAAa,IACbC,GAAa,EACnB,SAASC,IAAW,SAAEzM,EAAW,IAAG,OAAE0M,EAAS,IAAI,SAAEpN,EAAW,EAAC,KAAEqN,EAAO,IACtE,IAAIC,EACAC,GACJ,QAAQ7M,GAAYT,GAAsB+M,IAAc,8CACxD,IAAIQ,EAAe,EAAIJ,EAIvBI,EAAexhB,EAAMihB,GAAYC,GAAYM,GAC7C9M,EAAW1U,EAAM+gB,GAAaC,GAAa7M,GAAsBO,IAC7D8M,EAAe,GAIfF,EAAYG,IACR,MAAMC,EAAmBD,EAAeD,EAClCG,EAAQD,EAAmBhN,EAC3BhH,EAAIgU,EAAmB1N,EACvBrG,EAAIiU,GAAgBH,EAAcD,GAClCzH,EAAIrZ,KAAKmhB,KAAKF,GACpB,OAAOb,GAAWpT,EAAIC,EAAKoM,CAAC,EAEhCwH,EAAcE,IACV,MACME,EADmBF,EAAeD,EACP9M,EAC3BoN,EAAIH,EAAQ3N,EAAWA,EACvB1H,EAAI5L,KAAKqhB,IAAIP,EAAc,GAAK9gB,KAAKqhB,IAAIN,EAAc,GAAK/M,EAC5DsN,EAAIthB,KAAKmhB,KAAKF,GACdlH,EAAImH,GAAgBlhB,KAAKqhB,IAAIN,EAAc,GAAID,GAErD,QADgBF,EAASG,GAAgBX,GAAU,GAAK,EAAI,KACzCgB,EAAIxV,GAAK0V,GAAMvH,CAAC,IAOvC6G,EAAYG,GACE/gB,KAAKmhB,KAAKJ,EAAe/M,KACxB+M,EAAezN,GAAYU,EAAW,GACzCoM,GAEZS,EAAcE,GACA/gB,KAAKmhB,KAAKJ,EAAe/M,IACIA,EAAWA,GAAvCV,EAAWyN,KAI9B,MACMA,EAmBV,SAAyBH,EAAUC,EAAYU,GAC3C,IAAIC,EAASD,EACb,IAAK,IAAI1tB,EAAI,EAAGA,EAAI4tB,GAAgB5tB,IAChC2tB,GAAkBZ,EAASY,GAAUX,EAAWW,GAEpD,OAAOA,CACX,CAzByBE,CAAgBd,EAAUC,EAD1B,EAAI7M,GAGzB,GADAA,EAAWT,GAAsBS,GAC7B0H,MAAMqF,GACN,MAAO,CACHnN,UAAW,IACXC,QAAS,GACTG,YAGH,CACD,MAAMJ,EAAY5T,KAAKqhB,IAAIN,EAAc,GAAKJ,EAC9C,MAAO,CACH/M,YACAC,QAAwB,EAAfiN,EAAmB9gB,KAAKqU,KAAKsM,EAAO/M,GAC7CI,WAER,CACJ,CACA,MAAMyN,GAAiB,GAQvB,SAASP,GAAgBH,EAAcD,GACnC,OAAOC,EAAe/gB,KAAKqU,KAAK,EAAIyM,EAAeA,EACvD,CClFA,MAAMa,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAa1d,EAAS3P,GAC3B,OAAOA,EAAK2E,MAAM3H,QAAyBH,IAAjB8S,EAAQ3S,IACtC,CAuBA,SAASswB,IAAO,UAAE1N,EAAS,UAAE2N,EAAS,UAAEjO,KAAc3P,IAClD,MAAMuC,EAAS0N,EAAU,GACnBle,EAASke,EAAUA,EAAUxgB,OAAS,GAKtCqQ,EAAQ,CAAE+d,MAAM,EAAOrwB,MAAO+U,IAC9B,UAAEkN,EAAS,QAAEC,EAAO,KAAE8M,EAAI,SAAE3M,EAAQ,SAAEV,EAAQ,uBAAE2O,GA9B1D,SAA0B9d,GACtB,IAAI+d,EAAgB,CAChB5O,SAAU,EACVM,UAAW,IACXC,QAAS,GACT8M,KAAM,EACNsB,wBAAwB,KACrB9d,GAGP,IAAK0d,GAAa1d,EAASyd,KACvBC,GAAa1d,EAASwd,IAAe,CACrC,MAAMQ,EAAU1B,GAAWtc,GAC3B+d,EAAgB,IACTA,KACAC,EACHxB,KAAM,GAEVuB,EAAcD,wBAAyB,CAC3C,CACA,OAAOC,CACX,CASsFE,CAAiB,IAC5Fje,EACHmP,UAAWG,GAAsBtP,EAAQmP,UAAY,KAEnD+O,EAAkB/O,GAAY,EAC9BwN,EAAejN,GAAW,EAAI7T,KAAKqU,KAAKT,EAAY+M,IACpD2B,EAAepsB,EAASwQ,EACxB6b,EAAsB9O,GAAsBzT,KAAKqU,KAAKT,EAAY+M,IAQlE6B,EAAkBxiB,KAAKyiB,IAAIH,GAAgB,EAGjD,IAAII,EACJ,GAHA5O,IAAcA,EAAY0O,EAAkB,IAAO,GACnDT,IAAcA,EAAYS,EAAkB,KAAQ,IAEhD1B,EAAe,EAAG,CAClB,MAAM6B,EAAczB,GAAgBqB,EAAqBzB,GAEzD4B,EAAiBxC,IACb,MAAMU,EAAW5gB,KAAKmhB,KAAKL,EAAeyB,EAAsBrC,GAChE,OAAQhqB,EACJ0qB,IACOyB,EACCvB,EAAeyB,EAAsBD,GACrCK,EACA3iB,KAAK4iB,IAAID,EAAczC,GACvBoC,EAAetiB,KAAK6iB,IAAIF,EAAczC,GAAI,CAE9D,MACK,GAAqB,IAAjBY,EAEL4B,EAAiBxC,GAAMhqB,EACnB8J,KAAKmhB,KAAKoB,EAAsBrC,IAC3BoC,GACID,EAAkBE,EAAsBD,GAAgBpC,OAEpE,CAED,MAAM4C,EAAoBP,EAAsBviB,KAAKqU,KAAKyM,EAAeA,EAAe,GACxF4B,EAAiBxC,IACb,MAAMU,EAAW5gB,KAAKmhB,KAAKL,EAAeyB,EAAsBrC,GAE1D6C,EAAW/iB,KAAKT,IAAIujB,EAAoB5C,EAAG,KACjD,OAAQhqB,EACH0qB,IACKyB,EACEvB,EAAeyB,EAAsBD,GACrCtiB,KAAKgjB,KAAKD,GACVD,EACIR,EACAtiB,KAAKijB,KAAKF,IAClBD,CAAkB,CAElC,CACA,MAAO,CACHI,mBAAoBjB,GAAyBjO,GAAmB,KAChEf,KAAOiN,IACH,MAAMryB,EAAU60B,EAAcxC,GAC9B,GAAK+B,EAqBDhe,EAAM+d,KAAO9B,GAAKlM,MArBO,CACzB,IAAIjK,EAAkBsY,EACZ,IAANnC,IAOInW,EADA+W,EAAe,EACGd,GAAsB0C,EAAexC,EAAGryB,GAGxC,GAG1B,MAAMs1B,EAA2BnjB,KAAKyiB,IAAI1Y,IAAoB+J,EACxDsP,EAA+BpjB,KAAKyiB,IAAIvsB,EAASrI,IAAYk0B,EACnE9d,EAAM+d,KACFmB,GAA4BC,CACpC,CAKA,OADAnf,EAAMtS,MAAQsS,EAAM+d,KAAO9rB,EAASrI,EAC7BoW,CAAK,EAGxB,CC7HA,SAASof,IAAQ,UAAEjP,EAAS,SAAEd,EAAW,EAAG,MAAEgQ,EAAQ,GAAG,aAAEC,EAAe,IAAG,cAAEC,EAAgB,GAAE,gBAAEC,EAAkB,IAAG,aAAEC,EAAY,IAAEnkB,EAAG,IAAEC,EAAG,UAAEuiB,EAAY,GAAG,UAAEjO,IAC/J,MAAMpN,EAAS0N,EAAU,GACnBnQ,EAAQ,CACV+d,MAAM,EACNrwB,MAAO+U,GAGLid,EAAmBhrB,QACTtH,IAARkO,EACOC,OACCnO,IAARmO,GAEGQ,KAAKyiB,IAAIljB,EAAM5G,GAAKqH,KAAKyiB,IAAIjjB,EAAM7G,GAD/B4G,EAC0CC,EAEzD,IAAIokB,EAAYN,EAAQhQ,EACxB,MAAMuQ,EAAQnd,EAASkd,EACjB1tB,OAA0B7E,IAAjBqyB,EAA6BG,EAAQH,EAAaG,GAK7D3tB,IAAW2tB,IACXD,EAAY1tB,EAASwQ,GACzB,MAAMod,EAAa5D,IAAO0D,EAAY5jB,KAAKmhB,KAAKjB,EAAIqD,GAC9CQ,EAAc7D,GAAMhqB,EAAS4tB,EAAU5D,GACvC8D,EAAiB9D,IACnB,MAAMe,EAAQ6C,EAAU5D,GAClB5Y,EAASyc,EAAW7D,GAC1Bjc,EAAM+d,KAAOhiB,KAAKyiB,IAAIxB,IAAUc,EAChC9d,EAAMtS,MAAQsS,EAAM+d,KAAO9rB,EAASoR,CAAM,EAQ9C,IAAI2c,EACAC,EACJ,MAAMC,EAAsBjE,IAjCN,IAACvnB,KAkCAsL,EAAMtS,WAlCSN,IAARkO,GAAqB5G,EAAI4G,QAAiBlO,IAARmO,GAAqB7G,EAAI6G,KAoCrFykB,EAAsB/D,EACtBgE,EAAWpC,GAAO,CACd1N,UAAW,CAACnQ,EAAMtS,MAAOgyB,EAAgB1f,EAAMtS,QAC/C2hB,SAAU0M,GAAsB+D,EAAY7D,EAAGjc,EAAMtS,OACrDkiB,QAAS2P,EACT5P,UAAW6P,EACX1B,YACAjO,cACF,EAGN,OADAqQ,EAAmB,GACZ,CACHjB,mBAAoB,KACpBjQ,KAAOiN,IAOH,IAAIkE,GAAkB,EAUtB,OATKF,QAAoC7yB,IAAxB4yB,IACbG,GAAkB,EAClBJ,EAAc9D,GACdiE,EAAmBjE,SAMK7uB,IAAxB4yB,GAAqC/D,GAAK+D,EACnCC,EAASjR,KAAKiN,EAAI+D,KAGxBG,GAAmBJ,EAAc9D,GAC3Bjc,EACX,EAGZ,CChEA,MAAMogB,GAAa,CAACnE,EAAGoE,EAAIC,OAAU,EAAM,EAAMA,EAAK,EAAMD,GAAMpE,GAAK,EAAMqE,EAAK,EAAMD,IAAOpE,EAAI,EAAMoE,GACrGpE,EACEsE,GAAuB,KACvBC,GAA2B,GAkBjC,SAASC,GAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAO3T,GAAA,EACX,MAAM4T,EAAYC,GArBtB,SAAyBzmB,EAAG0mB,EAAYC,EAAYP,EAAKE,GACrD,IAAIM,EACAC,EACAvxB,EAAI,EACR,GACIuxB,EAAWH,GAAcC,EAAaD,GAAc,EACpDE,EAAWd,GAAWe,EAAUT,EAAKE,GAAOtmB,EACxC4mB,EAAW,EACXD,EAAaE,EAGbH,EAAaG,QAEZplB,KAAKyiB,IAAI0C,GAAYX,MACxB3wB,EAAI4wB,IACV,OAAOW,CACX,CAK6BC,CAAgBL,EAAI,EAAG,EAAGL,EAAKE,GAExD,OAAQ3E,GAAY,IAANA,GAAiB,IAANA,EAAUA,EAAImE,GAAWU,EAAS7E,GAAI0E,EAAKE,EACxE,CC9CA,MAAMQ,GAASZ,GAAY,IAAM,EAAG,EAAG,GACjCa,GAAUb,GAAY,EAAG,EAAG,IAAM,GAClCc,GAAYd,GAAY,IAAM,EAAG,IAAM,GCFvCe,GAAgBC,GAAYC,GAAMA,GAAK,GAAMD,EAAO,EAAIC,GAAK,GAAK,EAAID,EAAO,GAAK,EAAIC,KAAO,ECA7FC,GAAiBF,GAAYC,GAAM,EAAID,EAAO,EAAIC,GCClDE,GAAUF,GAAM,EAAI3lB,KAAK4iB,IAAI5iB,KAAK8lB,KAAKH,IACvCI,GAAUH,GAAcC,IACxBG,GAAYP,GAAaI,ICDzBI,GAAUvB,GAAY,IAAM,KAAM,IAAM,KACxCwB,GAASN,GAAcK,IACvBE,GAAYV,GAAaS,ICEzBE,GAAe,CACjBC,OAAQlV,GAAA,EACRmU,OAAM,GACNE,UAAS,GACTD,QAAO,GACPM,OAAM,GACNG,UAAS,GACTD,QAAO,GACPG,OAAM,GACNC,UAAS,GACTF,QAAO,GACPK,WCjBgBX,IAAOA,GAAK,GAAK,EAAI,GAAMO,GAAOP,GAAK,IAAO,EAAI3lB,KAAKqhB,IAAI,GAAI,IAAMsE,EAAI,MDmBvFY,GAA8B1c,IAChC,GAAIvV,MAAMsE,QAAQiR,GAAa,EAE3B,QAAgC,IAAtBA,EAAWjW,OAAc,2DACnC,MAAO4yB,EAAIC,EAAIC,EAAIC,GAAM9c,EACzB,OAAO6a,GAAY8B,EAAIC,EAAIC,EAAIC,EACnC,CACK,MAA0B,iBAAf9c,IAEZ,aAAuCxY,IAA7B+0B,GAAavc,GAA2B,wBAAwBA,MACnEuc,GAAavc,IAEjBA,CAAU,EErBf+c,GAAW,CAACryB,EAAMmB,EAAI/D,KACxB,MAAMk1B,EAAmBnxB,EAAKnB,EAC9B,OAA4B,IAArBsyB,EAAyB,GAAKl1B,EAAQ4C,GAAQsyB,CAAgB,ECOnEC,GAAY,CAACvyB,EAAMmB,EAAIkxB,IAClBryB,GAAQmB,EAAKnB,GAAQqyB,ECrBhC,SAASG,GAASpB,EAAGqB,EAAG9G,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACDyF,EAAc,GAATqB,EAAIrB,GAASzF,EACzBA,EAAI,GACG8G,EACP9G,EAAI,EAAI,EACDyF,GAAKqB,EAAIrB,IAAM,EAAI,EAAIzF,GAAK,EAChCyF,CACX,CCHA,MAAMsB,GAAiB,CAAC1yB,EAAMmB,EAAIiD,KAC9B,MAAMuuB,EAAW3yB,EAAOA,EAClB4yB,EAAOxuB,GAAKjD,EAAKA,EAAKwxB,GAAYA,EACxC,OAAOC,EAAO,EAAI,EAAInnB,KAAKqU,KAAK8S,EAAK,EAEnCC,GAAa,CAACvN,GAAKL,GAAMS,IAE/B,SAASoN,GAAOhN,GACZ,MAAMxkB,GAFY8C,EAEQ0hB,EAFF+M,GAAWhQ,MAAMvhB,GAASA,EAAKgI,KAAKlF,MAA3C,IAACA,GAGlB,QAAUU,QAAQxD,GAAO,IAAIwkB,yEAC7B,IAAIiN,EAAQzxB,EAAK6J,MAAM2a,GAKvB,OAJIxkB,IAASokB,KAETqN,EDTR,UAAoB,IAAEpN,EAAG,WAAEC,EAAU,UAAEC,EAAS,MAAExa,IAC9Csa,GAAO,IAEPE,GAAa,IACb,IAAIX,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GALAQ,GAAc,IAQT,CACD,MAAM6M,EAAI5M,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrCwL,EAAI,EAAIvL,EAAY4M,EAC1BvN,EAAMsN,GAASpB,EAAGqB,EAAG9M,EAAM,EAAI,GAC/BR,EAAQqN,GAASpB,EAAGqB,EAAG9M,GACvBP,EAAOoN,GAASpB,EAAGqB,EAAG9M,EAAM,EAAI,EACpC,MAVIT,EAAMC,EAAQC,EAAOS,EAWzB,MAAO,CACHX,IAAKzZ,KAAKC,MAAY,IAANwZ,GAChBC,MAAO1Z,KAAKC,MAAc,IAARyZ,GAClBC,KAAM3Z,KAAKC,MAAa,IAAP0Z,GACjB/Z,QAER,CChBgB2nB,CAAWD,IAEhBA,CACX,CACA,MAAME,GAAW,CAACjzB,EAAMmB,KACpB,MAAM+xB,EAAWJ,GAAO9yB,GAClBmzB,EAASL,GAAO3xB,GAChBiyB,EAAU,IAAKF,GACrB,OAAQ9uB,IACJgvB,EAAQlO,IAAMwN,GAAeQ,EAAShO,IAAKiO,EAAOjO,IAAK9gB,GACvDgvB,EAAQjO,MAAQuN,GAAeQ,EAAS/N,MAAOgO,EAAOhO,MAAO/gB,GAC7DgvB,EAAQhO,KAAOsN,GAAeQ,EAAS9N,KAAM+N,EAAO/N,KAAMhhB,GAC1DgvB,EAAQ/nB,MAAQknB,GAAUW,EAAS7nB,MAAO8nB,EAAO9nB,MAAOjH,GACjD6gB,GAAKna,UAAUsoB,GACzB,EC7BL,SAASC,GAAa5a,EAAGC,GACrB,OAAQ0Y,GAAOA,EAAI,EAAI1Y,EAAID,CAC/B,CACA,SAAS,GAAUA,EAAGC,GAClB,OAAQ0Y,GAAMmB,GAAY9Z,EAAGC,EAAG0Y,EACpC,CACA,SAASkC,GAAS7a,GACd,MAAiB,iBAANA,EACA,GAEW,iBAANA,EACLhO,EAAmBgO,GACpB4a,GACAvN,GAAMxc,KAAKmP,GACPwa,GACAM,GAELxzB,MAAMsE,QAAQoU,GACZ+a,GAEW,iBAAN/a,EACLqN,GAAMxc,KAAKmP,GAAKwa,GAAWQ,GAE/BJ,EACX,CACA,SAASG,GAAS/a,EAAGC,GACjB,MAAMqO,EAAS,IAAItO,GACbib,EAAY3M,EAAO1nB,OACnBs0B,EAAalb,EAAExZ,KAAI,CAACmF,EAAG9E,IAAMg0B,GAASlvB,EAATkvB,CAAYlvB,EAAGsU,EAAEpZ,MACpD,OAAQ8xB,IACJ,IAAK,IAAI9xB,EAAI,EAAGA,EAAIo0B,EAAWp0B,IAC3BynB,EAAOznB,GAAKq0B,EAAWr0B,GAAG8xB,GAE9B,OAAOrK,CAAM,CAErB,CACA,SAAS0M,GAAUhb,EAAGC,GAClB,MAAMqO,EAAS,IAAKtO,KAAMC,GACpBib,EAAa,CAAC,EACpB,IAAK,MAAM12B,KAAO8pB,OACCjqB,IAAX2b,EAAExb,SAAiCH,IAAX4b,EAAEzb,KAC1B02B,EAAW12B,GAAOq2B,GAAS7a,EAAExb,GAAXq2B,CAAiB7a,EAAExb,GAAMyb,EAAEzb,KAGrD,OAAQmH,IACJ,IAAK,MAAMnH,KAAO02B,EACd5M,EAAO9pB,GAAO02B,EAAW12B,GAAKmH,GAElC,OAAO2iB,CAAM,CAErB,CAcA,MAAMwM,GAAa,CAACphB,EAAQxQ,KACxB,MAAMiyB,EAAW3M,GAAQJ,kBAAkBllB,GACrCkyB,EAAcxN,GAAoBlU,GAClC2hB,EAAczN,GAAoB1kB,GAIxC,OAHuBkyB,EAAYrN,QAAQC,IAAIpnB,SAAWy0B,EAAYtN,QAAQC,IAAIpnB,QAC9Ew0B,EAAYrN,QAAQV,MAAMzmB,SAAWy0B,EAAYtN,QAAQV,MAAMzmB,QAC/Dw0B,EAAYrN,QAAQtb,OAAO7L,QAAUy0B,EAAYtN,QAAQtb,OAAO7L,OAEzDsZ,GAAK6a,GArBpB,SAAoBrhB,EAAQxQ,GACxB,IAAIsQ,EACJ,MAAM8hB,EAAgB,GAChBC,EAAW,CAAElO,MAAO,EAAGW,IAAK,EAAGvb,OAAQ,GAC7C,IAAK,IAAI5L,EAAI,EAAGA,EAAIqC,EAAOhF,OAAO0C,OAAQC,IAAK,CAC3C,MAAMgC,EAAOK,EAAO+kB,MAAMpnB,GACpB20B,EAAc9hB,EAAOqU,QAAQllB,GAAM0yB,EAAS1yB,IAC5C4yB,EAAoD,QAArCjiB,EAAKE,EAAOxV,OAAOs3B,UAAiC,IAAPhiB,EAAgBA,EAAK,EACvF8hB,EAAcz0B,GAAK40B,EACnBF,EAAS1yB,IACb,CACA,OAAOyyB,CACX,CAS6BI,CAAWN,EAAaC,GAAcA,EAAYn3B,QAASi3B,KAGhF,SAAQ,EAAM,mBAAmBzhB,WAAgBxQ,6KAC1C0xB,GAAalhB,EAAQxQ,GAChC,EClFJ,SAASgU,GAAI3V,EAAMmB,EAAIiwB,GACnB,GAAoB,iBAATpxB,GACO,iBAAPmB,GACM,iBAANiwB,EACP,OAAOmB,GAAUvyB,EAAMmB,EAAIiwB,GAG/B,OADckC,GAAStzB,EAChBo0B,CAAMp0B,EAAMmB,EACvB,CC6BA,SAASkzB,GAAYC,EAAOvN,GAAUhc,MAAOwpB,GAAU,EAAI,KAAE7U,EAAI,MAAE0U,GAAU,CAAC,GAC1E,MAAMI,EAAcF,EAAMj1B,OAM1B,IALA,QAAUm1B,IAAgBzN,EAAO1nB,OAAQ,wDAKrB,IAAhBm1B,EACA,MAAO,IAAMzN,EAAO,GACxB,GAAoB,IAAhByN,GAAqBF,EAAM,KAAOA,EAAM,GACxC,MAAO,IAAMvN,EAAO,GAEpBuN,EAAM,GAAKA,EAAME,EAAc,KAC/BF,EAAQ,IAAIA,GAAOG,UACnB1N,EAAS,IAAIA,GAAQ0N,WAEzB,MAAMC,EAjDV,SAAsB3N,EAAQrH,EAAMiV,GAChC,MAAMD,EAAS,GACTE,EAAeD,GAAehf,GAC9Bkf,EAAY9N,EAAO1nB,OAAS,EAClC,IAAK,IAAIC,EAAI,EAAGA,EAAIu1B,EAAWv1B,IAAK,CAChC,IAAI80B,EAAQQ,EAAa7N,EAAOznB,GAAIynB,EAAOznB,EAAI,IAC/C,GAAIogB,EAAM,CACN,MAAMoV,EAAiB/0B,MAAMsE,QAAQqb,GAAQA,EAAKpgB,IAAMsd,GAAA,EAAO8C,EAC/D0U,EAAQzb,GAAKmc,EAAgBV,EACjC,CACAM,EAAOp2B,KAAK81B,EAChB,CACA,OAAOM,CACX,CAoCmBK,CAAahO,EAAQrH,EAAM0U,GACpCS,EAAYH,EAAOr1B,OACnB21B,EAAgB5wB,IAClB,IAAI9E,EAAI,EACR,GAAIu1B,EAAY,EACZ,KAAOv1B,EAAIg1B,EAAMj1B,OAAS,KAClB+E,EAAIkwB,EAAMh1B,EAAI,IADOA,KAKjC,MAAM21B,EAAkB5C,GAASiC,EAAMh1B,GAAIg1B,EAAMh1B,EAAI,GAAI8E,GACzD,OAAOswB,EAAOp1B,GAAG21B,EAAgB,EAErC,OAAOV,EACAnwB,GAAM4wB,EAAajqB,EAAMupB,EAAM,GAAIA,EAAME,EAAc,GAAIpwB,IAC5D4wB,CACV,CCtEA,SAASE,GAAcC,GACnB,MAAM/iB,EAAS,CAAC,GAEhB,OCFJ,SAAoBA,EAAQgjB,GACxB,MAAMpqB,EAAMoH,EAAOA,EAAO/S,OAAS,GACnC,IAAK,IAAIC,EAAI,EAAGA,GAAK81B,EAAW91B,IAAK,CACjC,MAAM+1B,EAAiBhD,GAAS,EAAG+C,EAAW91B,GAC9C8S,EAAO9T,KAAKi0B,GAAUvnB,EAAK,EAAGqqB,GAClC,CACJ,CDLIC,CAAWljB,EAAQ+iB,EAAI91B,OAAS,GACzB+S,CACX,CEIA,SAASyN,IAAU,SAAEJ,EAAW,IAAKI,UAAW0V,EAAc,MAAEC,EAAK,KAAE9V,EAAO,cAK1E,MAAM+V,ECfY,CAAC/V,GACZ3f,MAAMsE,QAAQqb,IAA4B,iBAAZA,EAAK,GDclBgW,CAAchW,GAChCA,EAAKzgB,IAAI+yB,IACTA,GAA2BtS,GAK3BhQ,EAAQ,CACV+d,MAAM,EACNrwB,MAAOm4B,EAAe,IAKpBI,EE7BV,SAA8BvjB,EAAQqN,GAClC,OAAOrN,EAAOnT,KAAK22B,GAAMA,EAAInW,GACjC,CF2B0BoW,CAGtBL,GAASA,EAAMn2B,SAAWk2B,EAAel2B,OACnCm2B,EACAN,GAAcK,GAAiB9V,GAC/BqW,EAAoBzB,GAAYsB,EAAeJ,EAAgB,CACjE7V,KAAM3f,MAAMsE,QAAQoxB,GACdA,GA9BS94B,EA+BK44B,EA/BGpE,EA+BasE,EA9BjC94B,EAAOsC,KAAI,IAAMkyB,GAAUF,KAAWzwB,OAAO,EAAG7D,EAAO0C,OAAS,MAD3E,IAAuB1C,EAAQw0B,EAiC3B,MAAO,CACHxC,mBAAoBlP,EACpBf,KAAOiN,IACHjc,EAAMtS,MAAQ04B,EAAkBnK,GAChCjc,EAAM+d,KAAO9B,GAAKlM,EACX/P,GAGnB,CG7CA,MAAMqmB,GAAmBhuB,IACrB,MAAMiuB,EAAgB,EAAGpV,eAAgB7Y,EAAO6Y,GAChD,MAAO,CACHrc,MAAO,IAAM,MAAMwD,OAAOiuB,GAAe,GACzCC,KAAM,KAAM,SAAYD,GAKxB1V,IAAK,IAAO,GAAAG,UAAUC,aAAe,GAAAD,UAAUG,UAAYJ,GAAKF,MACnE,ECAC4V,GAAa,CACfC,MAAOrH,GACPA,QAAO,GACPsH,MAAOvW,GACPA,UAAWA,GACX0N,OAAM,IAEJ8I,GAAqBlqB,GAAYA,EAAU,IAMjD,MAAMmqB,WAA4BvM,GAC9BtQ,aAAcmK,iBAAkB2S,EAAqB3S,MAAqBhU,IACtEgM,MAAMhM,GAINjW,KAAK68B,SAAW,KAIhB78B,KAAK88B,UAAY,KAIjB98B,KAAK+8B,WAAa,KAIlB/8B,KAAKg9B,YAAc,EAInBh9B,KAAKi9B,cAAgB,EAMrBj9B,KAAKk9B,iBAAmB,UACxBl9B,KAAK+V,MAAQ,OACb,MAAM,KAAE1N,EAAI,YAAE+hB,EAAW,UAAElE,GAAclmB,KAAKiW,QACxCknB,EAAczW,GAAsB1mB,KAAK2wB,oBAAoBjK,GAC/Dre,GAAQ+hB,GAAeA,EAAY4E,MACnChvB,KAAKupB,SAAWa,EAAY4E,MAAMhF,iBAAiB9D,EAAWiX,EAAY90B,EAAM+hB,GAGhFpqB,KAAKupB,SAAW,IAAIqT,EAAmB1W,EAAWiX,EAAY90B,EAAM+hB,GAExEpqB,KAAKupB,SAASe,iBAClB,CACA8G,aAAagM,GACT,MAAM,KAAEz1B,EAAO,YAAW,OAAE6e,EAAS,EAAC,YAAE+J,EAAc,EAAC,WAAE9J,EAAU,SAAErB,EAAW,GAAOplB,KAAKiW,QACtFonB,EAAmBd,GAAW50B,IAASue,GAO7C,IAAIoX,EACAC,EACAF,IAAqBnX,IACK,iBAAnBkX,EAAY,KAInBE,EAAwBte,GAAK0d,GAAmB1gB,GAAIohB,EAAY,GAAIA,EAAY,KAChFA,EAAc,CAAC,EAAG,MAEtB,MAAMI,EAAYH,EAAiB,IAAKr9B,KAAKiW,QAASiQ,UAAWkX,IAK9C,WAAf3W,IACA8W,EAAoBF,EAAiB,IAC9Br9B,KAAKiW,QACRiQ,UAAW,IAAIkX,GAAatC,UAC5B1V,UAAWA,KAWkB,OAAjCoY,EAAUxI,qBACVwI,EAAUxI,mBCrGtB,SAA+BwI,GAC3B,IAAI1X,EAAW,EAEX/P,EAAQynB,EAAUzY,KAAKe,GAC3B,MAAQ/P,EAAM+d,MAAQhO,EALG,KAMrBA,GAHa,GAIb/P,EAAQynB,EAAUzY,KAAKe,GAE3B,OAAOA,GATkB,IASiB2X,IAAW3X,CACzD,CD4F2C4X,CAAsBF,IAEzD,MAAM,mBAAExI,GAAuBwI,EACzBG,EAAmB3I,EAAqBzE,EAE9C,MAAO,CACHiN,YACAD,oBACAD,wBACAtI,qBACA2I,mBACAC,cAPkBD,GAAoBnX,EAAS,GAAK+J,EAS5D,CACAc,iBACI,MAAM,SAAEhB,GAAW,GAASrwB,KAAKiW,QACjCjW,KAAK69B,OACyB,WAA1B79B,KAAKk9B,kBAAkC7M,EAIvCrwB,KAAK+V,MAAQ/V,KAAKk9B,iBAHlBl9B,KAAK89B,OAKb,CACAC,KAAK9W,EAAW+W,GAAS,GACrB,MAAM,UAAER,EAAS,kBAAED,EAAiB,sBAAED,EAAqB,UAAEpX,EAAS,mBAAE8O,EAAkB,cAAE4I,EAAa,iBAAED,GAAsB39B,KAAKkd,SACtI,GAAuB,OAAnBld,KAAK88B,UACL,OAAOU,EAAUzY,KAAK,GAC1B,MAAM,MAAEuL,EAAK,OAAE9J,EAAM,WAAEC,EAAU,YAAE8J,EAAW,SAAEK,GAAa5wB,KAAKiW,QAO9DjW,KAAKi+B,MAAQ,EACbj+B,KAAK88B,UAAYhrB,KAAKT,IAAIrR,KAAK88B,UAAW7V,GAErCjnB,KAAKi+B,MAAQ,IAClBj+B,KAAK88B,UAAYhrB,KAAKT,IAAI4V,EAAY2W,EAAgB59B,KAAKi+B,MAAOj+B,KAAK88B,YAGvEkB,EACAh+B,KAAKg9B,YAAc/V,EAEI,OAAlBjnB,KAAK68B,SACV78B,KAAKg9B,YAAch9B,KAAK68B,SAMxB78B,KAAKg9B,YACDlrB,KAAKC,MAAMkV,EAAYjnB,KAAK88B,WAAa98B,KAAKi+B,MAGtD,MAAMC,EAAmBl+B,KAAKg9B,YAAc1M,GAAStwB,KAAKi+B,OAAS,EAAI,GAAK,GACtEE,EAAiBn+B,KAAKi+B,OAAS,EAC/BC,EAAmB,EACnBA,EAAmBN,EACzB59B,KAAKg9B,YAAclrB,KAAKR,IAAI4sB,EAAkB,GAE3B,aAAfl+B,KAAK+V,OAA0C,OAAlB/V,KAAK68B,WAClC78B,KAAKg9B,YAAcY,GAEvB,IAAIQ,EAAUp+B,KAAKg9B,YACfqB,EAAiBb,EACrB,GAAIhX,EAAQ,CAMR,MAAMkS,EAAW5mB,KAAKT,IAAIrR,KAAKg9B,YAAaY,GAAiBD,EAK7D,IAAIW,EAAmBxsB,KAAKysB,MAAM7F,GAK9B8F,EAAoB9F,EAAW,GAK9B8F,GAAqB9F,GAAY,IAClC8F,EAAoB,GAEF,IAAtBA,GAA2BF,IAC3BA,EAAmBxsB,KAAKT,IAAIitB,EAAkB9X,EAAS,GAIhCrb,QAAQmzB,EAAmB,KAE3B,YAAf7X,GACA+X,EAAoB,EAAIA,EACpBjO,IACAiO,GAAqBjO,EAAcoN,IAGnB,WAAflX,IACL4X,EAAiBd,IAGzBa,EAAUhtB,EAAM,EAAG,EAAGotB,GAAqBb,CAC/C,CAMA,MAAM5nB,EAAQooB,EACR,CAAErK,MAAM,EAAOrwB,MAAOyiB,EAAU,IAChCmY,EAAetZ,KAAKqZ,GACtBd,IACAvnB,EAAMtS,MAAQ65B,EAAsBvnB,EAAMtS,QAE9C,IAAI,KAAEqwB,GAAS/d,EACVooB,GAAyC,OAAvBnJ,IACnBlB,EACI9zB,KAAKi+B,OAAS,EACRj+B,KAAKg9B,aAAeY,EACpB59B,KAAKg9B,aAAe,GAElC,MAAMyB,EAAwC,OAAlBz+B,KAAK68B,WACb,aAAf78B,KAAK+V,OAAwC,YAAf/V,KAAK+V,OAAuB+d,GAO/D,OANIlD,GACAA,EAAS7a,EAAMtS,OAEfg7B,GACAz+B,KAAK0+B,SAEF3oB,CACX,CACI+P,eACA,OAAOP,GAAsBvlB,KAAKkd,SAAS8X,mBAC/C,CACInO,WACA,OAAOtB,GAAsBvlB,KAAKg9B,YACtC,CACInW,SAAKM,GACLA,EAAU9B,GAAsB8B,GAChCnnB,KAAKg9B,YAAc7V,EACG,OAAlBnnB,KAAK68B,UAAoC,IAAf78B,KAAKi+B,MAC/Bj+B,KAAK68B,SAAW1V,EAEXnnB,KAAK2+B,SACV3+B,KAAK88B,UAAY98B,KAAK2+B,OAAOhY,MAAQQ,EAAUnnB,KAAKi+B,MAE5D,CACIA,YACA,OAAOj+B,KAAKi9B,aAChB,CACIgB,UAAMW,GACN,MAAMC,EAAa7+B,KAAKi9B,gBAAkB2B,EAC1C5+B,KAAKi9B,cAAgB2B,EACjBC,IACA7+B,KAAK6mB,KAAOtB,GAAsBvlB,KAAKg9B,aAE/C,CACAa,OAII,GAHK79B,KAAKupB,SAASH,aACfppB,KAAKupB,SAASqB,UAEb5qB,KAAK0wB,UAEN,YADA1wB,KAAKk9B,iBAAmB,WAG5B,GAAIl9B,KAAKwwB,UACL,OACJ,MAAM,OAAEmO,EAASvC,GAAe,OAAE0C,GAAW9+B,KAAKiW,QAC7CjW,KAAK2+B,SACN3+B,KAAK2+B,OAASA,GAAQ1X,GAAcjnB,KAAK+9B,KAAK9W,MAElD6X,GAAUA,IACV,MAAMnY,EAAM3mB,KAAK2+B,OAAOhY,MACF,OAAlB3mB,KAAK68B,SACL78B,KAAK88B,UAAYnW,EAAM3mB,KAAK68B,SAEtB78B,KAAK88B,WAA4B,aAAf98B,KAAK+V,QAC7B/V,KAAK88B,UAAYnW,GAEF,aAAf3mB,KAAK+V,OACL/V,KAAKywB,wBAETzwB,KAAK+8B,WAAa/8B,KAAK88B,UACvB98B,KAAK68B,SAAW,KAKhB78B,KAAK+V,MAAQ,UACb/V,KAAK2+B,OAAO/zB,OAChB,CACAkzB,QACI,IAAIxlB,EACCtY,KAAK0wB,WAIV1wB,KAAK+V,MAAQ,SACb/V,KAAK68B,SAAuC,QAA3BvkB,EAAKtY,KAAKg9B,mBAAgC,IAAP1kB,EAAgBA,EAAK,GAJrEtY,KAAKk9B,iBAAmB,QAKhC,CACAZ,OAEI,GADAt8B,KAAKwwB,WAAY,EACE,SAAfxwB,KAAK+V,MACL,OACJ/V,KAAK+V,MAAQ,OACb,MAAM,OAAEgpB,GAAW/+B,KAAKiW,QACxB8oB,GAAUA,IACV/+B,KAAKg/B,UACT,CACAnV,WACuB,YAAf7pB,KAAK+V,OACL/V,KAAK69B,OAET79B,KAAKk9B,iBAAmBl9B,KAAK+V,MAAQ,WACrC/V,KAAK68B,SAAW,IACpB,CACA6B,SACI1+B,KAAKg/B,WACLh/B,KAAK+V,MAAQ,WACb,MAAM,WAAEoU,GAAenqB,KAAKiW,QAC5BkU,GAAcA,GAClB,CACAngB,SAC4B,OAApBhK,KAAK+8B,YACL/8B,KAAK+9B,KAAK/9B,KAAK+8B,YAEnB/8B,KAAKg/B,UACT,CACAA,WACIh/B,KAAK+V,MAAQ,OACb/V,KAAKi/B,aACLj/B,KAAKmxB,yBACLnxB,KAAKywB,wBACLzwB,KAAK88B,UAAY98B,KAAK+8B,WAAa,KACnC/8B,KAAKupB,SAASvf,QAClB,CACAi1B,aACSj/B,KAAK2+B,SAEV3+B,KAAK2+B,OAAOrC,OACZt8B,KAAK2+B,YAASx7B,EAClB,CACA66B,OAAOnX,GAEH,OADA7mB,KAAK88B,UAAY,EACV98B,KAAK+9B,KAAKlX,GAAM,EAC3B,EEtWJ,MAAMqY,GAAsB1H,GAAWpxB,MAAMsE,QAAQ8sB,IAAgC,iBAAdA,EAAO,GCE9E,SAAS2H,GAAuB3H,GAC5B,OAAOrsB,SAASqsB,GACO,iBAAXA,GAAuB4H,GAAqB5H,IACpD0H,GAAmB1H,IAClBpxB,MAAMsE,QAAQ8sB,IAAWA,EAAO6H,MAAMF,IAC/C,CACA,MAAMG,GAAsB,EAAExgB,EAAGC,EAAGoM,EAAG+H,KAAO,gBAAgBpU,MAAMC,MAAMoM,MAAM+H,KAC1EkM,GAAuB,CACzBjH,OAAQ,SACRpS,KAAM,OACNqR,OAAQ,UACRC,QAAS,WACTC,UAAW,cACXK,OAAQ2H,GAAoB,CAAC,EAAG,IAAM,IAAM,IAC5CzH,QAASyH,GAAoB,CAAC,IAAM,EAAG,EAAG,MAC1CtH,OAAQsH,GAAoB,CAAC,IAAM,IAAM,KAAO,MAChDvH,QAASuH,GAAoB,CAAC,IAAM,KAAM,IAAM,OAEpD,SAASC,GAAwB/H,GAC7B,GAAKA,EAEL,OAAO0H,GAAmB1H,GACpB8H,GAAoB9H,GACpBpxB,MAAMsE,QAAQ8sB,GACVA,EAAOlyB,IAAIi6B,IACXH,GAAqB5H,EACnC,CCjBA,MAAMgI,GCXN,SAAct6B,GACV,IAAIouB,EACJ,MAAO,UACYnwB,IAAXmwB,IACAA,EAASpuB,KACNouB,EAEf,CDIsBmM,EAAK,IAAMr1B,OAAOE,eAAeC,KAAKm1B,QAAQr1B,UAAW,aAIzEs1B,GAAoB,IAAI5vB,IAAI,CAC9B,UACA,WACA,SACA,cAyDJ,MAAM6vB,WAA6BxP,GAC/BtQ,YAAY7J,GACRgM,MAAMhM,GACN,MAAM,KAAE5N,EAAI,YAAE+hB,EAAW,UAAElE,GAAclmB,KAAKiW,QAC9CjW,KAAKupB,SAAW,IAAIwF,GAAqB7I,GAAYQ,GAAsB1mB,KAAK2wB,oBAAoBjK,IAAoBre,EAAM+hB,GAC9HpqB,KAAKupB,SAASe,iBAClB,CACA8G,aAAalL,GACT,IAAIJ,EAAW9lB,KAAKiW,QAAQ6P,UAAY,IAIxC,GA/CqB,YADU7P,EAgDGjW,KAAKiW,SA/C3BtO,MACK,oBAAjBsO,EAAQ5N,OACP82B,GAAuBlpB,EAAQ8P,MA6CiB,CAC7C,MAAM,WAAEoE,EAAU,SAAEyG,EAAQ,YAAExG,KAAgBnU,GAAYjW,KAAKiW,QACzD4pB,EA7ClB,SAA8B3Z,EAAWjQ,GAMrC,MAAM6pB,EAAkB,IAAInD,GAAoB,IACzC1mB,EACHiQ,YACAM,OAAQ,EACR8J,MAAO,IAEX,IAAIva,EAAQ,CAAE+d,MAAM,EAAOrwB,MAAOyiB,EAAU,IAC5C,MAAM6Z,EAAwB,GAK9B,IAAI/N,EAAI,EACR,MAAQjc,EAAM+d,MAAQ9B,EA9BN,KA+BZjc,EAAQ+pB,EAAgB9B,OAAOhM,GAC/B+N,EAAsBp7B,KAAKoR,EAAMtS,OACjCuuB,GAtCY,GAwChB,MAAO,CACH6J,WAAO14B,EACP+iB,UAAW6Z,EACXja,SAAUkM,EA3CE,GA4CZjM,KAAM,SAEd,CAe0Cia,CAAqB9Z,EAAWjQ,GAC9DiQ,EAAY2Z,EAAsB3Z,UAClCJ,EAAW+Z,EAAsB/Z,SACjC9lB,KAAKiW,QAAQ4lB,MAAQgE,EAAsBhE,MAC3C77B,KAAKiW,QAAQ8P,KAAO8Z,EAAsB9Z,IAC9C,CAvDR,IAAuC9P,EAwD/B,MAAM,YAAEmU,EAAW,KAAE/hB,GAASrI,KAAKiW,QAC7BrK,EE/Fd,SAAsB7L,EAASkgC,EAAW/Z,GAAW,MAAEoK,EAAQ,EAAC,SAAExK,EAAW,IAAG,OAAEU,EAAS,EAAC,WAAEC,EAAa,OAAM,KAAEV,EAAI,MAAE8V,GAAW,CAAC,GACjI,MAAMqE,EAAkB,CAAE,CAACD,GAAY/Z,GACnC2V,IACAqE,EAAgBznB,OAASojB,GAC7B,MAAMrE,EAAS+H,GAAwBxZ,GAMvC,OAFI3f,MAAMsE,QAAQ8sB,KACd0I,EAAgB1I,OAASA,GACtBz3B,EAAQiL,QAAQk1B,EAAiB,CACpC5P,QACAxK,WACA0R,OAASpxB,MAAMsE,QAAQ8sB,GAAmB,SAATA,EACjCnJ,KAAM,OACN8R,WAAY3Z,EAAS,EACrB4Z,UAA0B,YAAf3Z,EAA2B,YAAc,UAE5D,CF6E0B4Z,CAAajW,EAAY4E,MAAMrvB,QAAS0I,EAAM6d,EAAW,IAAKlmB,KAAKiW,QAAS6P,aA0B9F,OAvBAla,EAAUkxB,UAAYjW,GAAKF,MACvB3mB,KAAKsgC,iBACL10B,EAAU20B,SAAWvgC,KAAKsgC,gBAC1BtgC,KAAKsgC,qBAAkBn9B,GAWvByI,EAAU40B,SAAW,KACjB,MAAM,WAAErW,GAAenqB,KAAKiW,QAC5BmU,EAAYtnB,IAAIyjB,GAAiBL,EAAWlmB,KAAKiW,UACjDkU,GAAcA,IACdnqB,KAAKgK,SACLhK,KAAKmxB,yBACLnxB,KAAKywB,uBAAuB,EAG7B,CACH7kB,YACAka,WACAI,UAAWA,EAEnB,CACIJ,eACA,MAAM,SAAEA,GAAa9lB,KAAKkd,SAC1B,OAAOqI,GAAsBO,EACjC,CACIe,WACA,MAAM,UAAEjb,GAAc5L,KAAKkd,SAC3B,OAAOqI,GAAsB3Z,EAAUoxB,aAAe,EAC1D,CACInW,SAAKM,GACL,MAAM,UAAEvb,GAAc5L,KAAKkd,SAC3BtR,EAAUoxB,YAAc3X,GAAsB8B,EAClD,CACI8W,YACA,MAAM,UAAEryB,GAAc5L,KAAKkd,SAC3B,OAAOtR,EAAU60B,YACrB,CACIxC,UAAMW,GACN,MAAM,UAAEhzB,GAAc5L,KAAKkd,SAC3BtR,EAAU60B,aAAe7B,CAC7B,CACI7oB,YACA,MAAM,UAAEnK,GAAc5L,KAAKkd,SAC3B,OAAOtR,EAAU80B,SACrB,CAKAC,eAAeJ,GACX,GAAKvgC,KAAK0wB,UAGL,CACD,MAAM,UAAE9kB,GAAc5L,KAAKkd,SAC3BtR,EAAU20B,SAAWA,EACrB30B,EAAU40B,SAAW,IACzB,MANIxgC,KAAKsgC,gBAAkBC,EAO3B,OAAOtd,GAAA,CACX,CACA4a,OACI,GAAI79B,KAAKwwB,UACL,OACJ,MAAM,UAAE5kB,GAAc5L,KAAKkd,SAC3BtR,EAAUiyB,MACd,CACAC,QACI,MAAM,UAAElyB,GAAc5L,KAAKkd,SAC3BtR,EAAUkyB,OACd,CACAxB,OACIt8B,KAAKwwB,WAAY,EACjB,MAAM,UAAE5kB,EAAS,UAAEsa,GAAclmB,KAAKkd,SACtC,GAA4B,SAAxBtR,EAAU80B,WACc,aAAxB90B,EAAU80B,UADd,CAYA,GAAI1gC,KAAK6mB,KAAM,CACX,MAAM,YAAEuD,EAAW,SAAEwG,EAAQ,WAAEzG,KAAelU,GAAYjW,KAAKiW,QACzD6pB,EAAkB,IAAInD,GAAoB,IACzC1mB,EACHiQ,cAEJkE,EAAYwW,gBAAgBd,EAAgB9B,OAAOh+B,KAAK6mB,KA1KhD,IA0KoEpjB,MAAOq8B,EAAgB9B,OAAOh+B,KAAK6mB,MAAMpjB,MA1K7G,GA2KZ,CACAzD,KAAKgK,QAjBL,CAkBJ,CACA6f,WACI7pB,KAAKkd,SAAStR,UAAU8yB,QAC5B,CACA10B,SACIhK,KAAKkd,SAAStR,UAAU5B,QAC5B,CACA62B,gBAAgB5qB,GACZ,MAAM,YAAEmU,EAAW,KAAE/hB,EAAI,YAAEkoB,EAAW,WAAE9J,EAAU,QAAEd,EAAO,KAAEhe,GAASsO,EACtE,OAAQupB,MACJn3B,GACAs3B,GAAkB95B,IAAIwC,IACtB+hB,GACAA,EAAY4E,OACZ5E,EAAY4E,MAAMrvB,mBAAmBmhC,cAKpC1W,EAAY4E,MAAM5O,WAAWwQ,WAC7BL,GACc,WAAf9J,GACY,IAAZd,GACS,YAAThe,CACR,EGxNJ,MAAMo5B,GAAqB,CAAC14B,EAAM5E,EAAOuE,EAAQoV,EAAa,CAAC,EAAGrd,EAASihC,IAAe7W,IACtF,MAAM8W,EAAkB7a,GAAmBhJ,EAAY/U,IAAS,CAAC,EAM3DioB,EAAQ2Q,EAAgB3Q,OAASlT,EAAWkT,OAAS,EAK3D,IAAI,QAAE8N,EAAU,GAAMhhB,EACtBghB,GAAoB/Y,GAAsBiL,GAC1C,IAAIra,EAAU,CACViQ,UAAW9f,MAAMsE,QAAQ1C,GAAUA,EAAS,CAAC,KAAMA,GACnD+d,KAAM,UACNX,SAAU3hB,EAAM0M,iBACb8wB,EACH3Q,OAAQ8N,EACRxN,SAAWnmB,IACPhH,EAAMX,IAAI2H,GACVw2B,EAAgBrQ,UAAYqQ,EAAgBrQ,SAASnmB,EAAE,EAE3D0f,WAAY,KACRA,IACA8W,EAAgB9W,YAAc8W,EAAgB9W,YAAY,EAE9D9hB,OACA+hB,YAAa3mB,EACb1D,QAASihC,OAAY79B,EAAYpD,I5DnCzC,UAA6B,KAAEmhC,EAAM5Q,MAAO6Q,EAAM,cAAEC,EAAa,gBAAEC,EAAe,iBAAEC,EAAgB,OAAE9a,EAAM,WAAEC,EAAU,YAAE8J,EAAW,KAAElqB,EAAI,QAAE+3B,KAAYhhB,IACrJ,QAAShT,OAAO9D,KAAK8W,GAAY1X,MACrC,E4DuCS67B,CAAoBN,KACrBhrB,EAAU,IACHA,KACA+P,GAAqB3d,EAAM4N,KAQlCA,EAAQ6P,WACR7P,EAAQ6P,SAAWT,GAAsBpP,EAAQ6P,WAEjD7P,EAAQsa,cACRta,EAAQsa,YAAclL,GAAsBpP,EAAQsa,mBAEnCptB,IAAjB8S,EAAQ5P,OACR4P,EAAQiQ,UAAU,GAAKjQ,EAAQ5P,MAEnC,IAAIm7B,GAAa,EAkBjB,IAjBqB,IAAjBvrB,EAAQtO,OACRsO,EAAQ6P,SAAW,EACG,IAAlB7P,EAAQqa,QACRkR,GAAa,KAGjBnb,IACA,KAAmBob,kBACnBD,GAAa,EACbvrB,EAAQ6P,SAAW,EACnB7P,EAAQqa,MAAQ,GAOhBkR,IAAeR,QAA6B79B,IAAhBM,EAAMsC,MAAqB,CACvD,MAAM0kB,EAAgBlE,GAAiBtQ,EAAQiQ,UAAW+a,GAC1D,QAAsB99B,IAAlBsnB,EAKA,YAJA,MAAMrc,QAAO,KACT6H,EAAQ2a,SAASnG,GACjBxU,EAAQkU,YAAY,GAIhC,CAMA,OAAK6W,GAAapB,GAAqB8B,SAASzrB,GACrC,IAAI2pB,GAAqB3pB,GAGzB,IAAI0mB,GAAoB1mB,EACnC,ECtGJ,SAAS0rB,GAAwBl+B,GAC7B,OAAO0H,QAAQ+E,EAAczM,IAAUA,EAAM8mB,IACjD,CCJA,SAASqX,GAAcpG,EAAKqG,IACG,IAAvBrG,EAAI51B,QAAQi8B,IACZrG,EAAI72B,KAAKk9B,EACjB,CACA,SAASC,GAAWtG,EAAKqG,GACrB,MAAME,EAAQvG,EAAI51B,QAAQi8B,GACtBE,GAAS,GACTvG,EAAI30B,OAAOk7B,EAAO,EAC1B,CCNA,MAAMC,GACFliB,cACI9f,KAAKiiC,cAAgB,EACzB,CACA1X,IAAIxM,GAEA,OADA6jB,GAAc5hC,KAAKiiC,cAAelkB,GAC3B,IAAM+jB,GAAW9hC,KAAKiiC,cAAelkB,EAChD,CACAmkB,OAAOpjB,EAAGC,EAAGoM,GACT,MAAMgX,EAAmBniC,KAAKiiC,cAAcv8B,OAC5C,GAAKy8B,EAEL,GAAyB,IAArBA,EAIAniC,KAAKiiC,cAAc,GAAGnjB,EAAGC,EAAGoM,QAG5B,IAAK,IAAIxlB,EAAI,EAAGA,EAAIw8B,EAAkBx8B,IAAK,CAKvC,MAAMoY,EAAU/d,KAAKiiC,cAAct8B,GACnCoY,GAAWA,EAAQe,EAAGC,EAAGoM,EAC7B,CAER,CACAiX,UACI,OAAOpiC,KAAKiiC,cAAcv8B,MAC9B,CACAN,QACIpF,KAAKiiC,cAAcv8B,OAAS,CAChC,EC1BJ,MAIM28B,GAAsB,CACxB1iC,aAASwD,GAOb,MAAMm/B,GASFxiB,YAAYyiB,EAAMtsB,EAAU,CAAC,GApBjB,IAACxS,EAyBTzD,KAAKwiC,QAAU,UAQfxiC,KAAKyiC,kBAAmB,EAIxBziC,KAAK0iC,OAAS,CAAC,EACf1iC,KAAK2iC,gBAAkB,CAACl4B,EAAG1J,GAAS,KAChC,MAAMi8B,EAAcnW,GAAKF,MAMrB3mB,KAAK4iC,YAAc5F,GACnBh9B,KAAK6iC,oBAET7iC,KAAKglB,KAAOhlB,KAAKL,QACjBK,KAAK8iC,WAAWr4B,GAEZzK,KAAKL,UAAYK,KAAKglB,MAAQhlB,KAAK0iC,OAAOK,QAC1C/iC,KAAK0iC,OAAOK,OAAOb,OAAOliC,KAAKL,SAG/BoB,GAAUf,KAAK0iC,OAAOM,eACtBhjC,KAAK0iC,OAAOM,cAAcd,OAAOliC,KAAKL,QAC1C,EAEJK,KAAKijC,aAAc,EACnBjjC,KAAK8iC,WAAWP,GAChBviC,KAAKyiC,kBA7DIh/B,EA6DuBzD,KAAKL,SA5DjC6tB,MAAM/b,WAAWhO,KA6DrBzD,KAAKgvB,MAAQ/Y,EAAQ+Y,KACzB,CACA8T,WAAWnjC,GACPK,KAAKL,QAAUA,EACfK,KAAK4iC,UAAY/b,GAAKF,KAC1B,CACAkc,kBAAkBK,EAAiBljC,KAAKL,SACpCK,KAAKkjC,eAAiBA,EACtBljC,KAAKmjC,cAAgBnjC,KAAK4iC,SAC9B,CAyCAQ,SAASC,GAIL,OAAOrjC,KAAKsjC,GAAG,SAAUD,EAC7B,CACAC,GAAGxlB,EAAW5Y,GACLlF,KAAK0iC,OAAO5kB,KACb9d,KAAK0iC,OAAO5kB,GAAa,IAAIkkB,IAEjC,MAAMuB,EAAcvjC,KAAK0iC,OAAO5kB,GAAWyM,IAAIrlB,GAC/C,MAAkB,WAAd4Y,EACO,KACHylB,IAKA,MAAMhmB,MAAK,KACFvd,KAAK0iC,OAAOK,OAAOX,WACpBpiC,KAAKs8B,MACT,GACF,EAGHiH,CACX,CACAC,iBACI,IAAK,MAAMC,KAAiBzjC,KAAK0iC,OAC7B1iC,KAAK0iC,OAAOe,GAAer+B,OAEnC,CAMAs+B,OAAOC,EAAeC,GAClB5jC,KAAK2jC,cAAgBA,EACrB3jC,KAAK4jC,kBAAoBA,CAC7B,CAgBA9gC,IAAI2H,EAAG1J,GAAS,GACPA,GAAWf,KAAK2jC,cAIjB3jC,KAAK2jC,cAAcl5B,EAAGzK,KAAK2iC,iBAH3B3iC,KAAK2iC,gBAAgBl4B,EAAG1J,EAKhC,CACA6/B,gBAAgB5b,EAAMrlB,EAASozB,GAC3B/yB,KAAK8C,IAAInD,GACTK,KAAKglB,UAAO7hB,EACZnD,KAAKkjC,eAAiBle,EACtBhlB,KAAKmjC,cAAgBnjC,KAAK4iC,UAAY7P,CAC1C,CAKApD,KAAKllB,EAAGo5B,GAAe,GACnB7jC,KAAK2iC,gBAAgBl4B,GACrBzK,KAAKglB,KAAOva,EACZzK,KAAKmjC,cAAgBnjC,KAAKkjC,oBAAiB//B,EAC3C0gC,GAAgB7jC,KAAKs8B,OACjBt8B,KAAK4jC,mBACL5jC,KAAK4jC,mBACb,CAQA79B,MAII,OAHIs8B,GAAoB1iC,SACpB0iC,GAAoB1iC,QAAQgF,KAAK3E,MAE9BA,KAAKL,OAChB,CAIAmkC,cACI,OAAO9jC,KAAKglB,IAChB,CAQA7U,cACI,MAAM6sB,EAAcnW,GAAKF,MACzB,IAAK3mB,KAAKyiC,uBACkBt/B,IAAxBnD,KAAKkjC,gBACLlG,EAAch9B,KAAK4iC,UAjOJ,GAkOf,OAAO,EAEX,MAAM7P,EAAQjhB,KAAKT,IAAIrR,KAAK4iC,UAAY5iC,KAAKmjC,cApO1B,IAsOnB,OAAOxR,GAAkBlgB,WAAWzR,KAAKL,SACrC8R,WAAWzR,KAAKkjC,gBAAiBnQ,EACzC,CAaAnoB,MAAMm5B,GAEF,OADA/jC,KAAKs8B,OACE,IAAI5K,SAASH,IAChBvxB,KAAKijC,aAAc,EACnBjjC,KAAK4L,UAAYm4B,EAAexS,GAC5BvxB,KAAK0iC,OAAOsB,gBACZhkC,KAAK0iC,OAAOsB,eAAe9B,QAC/B,IACD5Q,MAAK,KACAtxB,KAAK0iC,OAAOuB,mBACZjkC,KAAK0iC,OAAOuB,kBAAkB/B,SAElCliC,KAAKkkC,gBAAgB,GAE7B,CAMA5H,OACQt8B,KAAK4L,YACL5L,KAAK4L,UAAU0wB,OACXt8B,KAAK0iC,OAAOyB,iBACZnkC,KAAK0iC,OAAOyB,gBAAgBjC,UAGpCliC,KAAKkkC,gBACT,CAMAE,cACI,QAASpkC,KAAK4L,SAClB,CACAs4B,wBACWlkC,KAAK4L,SAChB,CAUAy4B,UACIrkC,KAAKwjC,iBACLxjC,KAAKs8B,OACDt8B,KAAK4jC,mBACL5jC,KAAK4jC,mBAEb,EAEJ,SAASxZ,GAAYmY,EAAMtsB,GACvB,OAAO,IAAIqsB,GAAYC,EAAMtsB,EACjC,CClTA,SAASquB,GAAe32B,EAAerK,EAAKG,GACpCkK,EAAc42B,SAASjhC,GACvBqK,EAAc8hB,SAASnsB,GAAKR,IAAIW,GAGhCkK,EAAc62B,SAASlhC,EAAK8mB,GAAY3mB,GAEhD,CCDA,SAASghC,IAAqB,cAAEC,EAAa,eAAEC,GAAkBrhC,GAC7D,MAAMshC,EAAcF,EAAcp6B,eAAehH,KAAgC,IAAxBqhC,EAAerhC,GAExE,OADAqhC,EAAerhC,IAAO,EACfshC,CACX,CACA,SAASC,GAAcl3B,EAAem3B,GAAqB,MAAExU,EAAQ,EAAC,mBAAEyU,EAAkB,KAAEp9B,GAAS,CAAC,GAClG,IAAI2Q,EACJ,IAAI,WAAE8E,EAAazP,EAAcqY,uBAAsB,cAAE7I,KAAkBnV,GAAW88B,EACtF,MAAME,EAAar3B,EAAc8hB,SAAS,cACtCsV,IACA3nB,EAAa2nB,GACjB,MAAME,EAAa,GACbC,EAAqBv9B,GACvBgG,EAAca,gBACdb,EAAca,eAAe22B,WAAWx9B,GAC5C,IAAK,MAAMrE,KAAO0E,EAAQ,CACtB,MAAMvE,EAAQkK,EAAc8hB,SAASnsB,EAAgD,QAA1CgV,EAAK3K,EAAcqI,aAAa1S,UAAyB,IAAPgV,EAAgBA,EAAK,MAC5G+E,EAAcrV,EAAO1E,GAC3B,QAAoBH,IAAhBka,GACC6nB,GACGT,GAAqBS,EAAoB5hC,GAC7C,SAEJ,MAAM29B,EAAkB,CACpB3Q,QACA8N,QAAS,KACNhY,GAAmBhJ,GAAc,CAAC,EAAG9Z,IAM5C,IAAI09B,GAAY,EAChB,GAAI1yB,OAAO82B,wBAAyB,CAChC,MAAMC,EAAW13B,EAAcyS,WAAWvW,GAC1C,GAAIw7B,EAAU,CACV,MAAMjH,EAAU9vB,OAAO82B,wBAAwBC,EAAU/hC,GACzC,OAAZ86B,IACA6C,EAAgB7C,QAAUA,EAC1B4C,GAAY,EAEpB,CACJ,CACAv9B,EAAMmH,MAAMm2B,GAAmBz9B,EAAKG,EAAO4Z,EAAa1P,EAAc23B,oBAAsBx1B,EAAejK,IAAIvC,GACzG,CAAEqE,MAAM,GACRs5B,EAAiBtzB,EAAeqzB,IACtC,MAAMp1B,EAAYnI,EAAMmI,UACpBA,IACI+1B,GAAwBqD,KACxBA,EAAWza,IAAIjnB,GACfsI,EAAU0lB,MAAK,IAAM0T,EAAWO,OAAOjiC,MAE3C2hC,EAAWtgC,KAAKiH,GAExB,CAQA,OAPIuR,GACAuU,QAAQ3P,IAAIkjB,GAAY3T,MAAK,KACzB,MAAMljB,QAAO,KACT+O,GDxDhB,SAAmBxP,EAAegO,GAC9B,MAAMuB,EAAWgI,GAAevX,EAAegO,GAC/C,IAAI,cAAEwB,EAAgB,CAAC,EAAC,WAAEC,EAAa,CAAC,KAAMpV,GAAWkV,GAAY,CAAC,EACtElV,EAAS,IAAKA,KAAWmV,GACzB,IAAK,MAAM7Z,KAAO0E,EAEds8B,GAAe32B,EAAerK,EADhB4Y,GAA6BlU,EAAO1E,IAG1D,CCgDiCkiC,CAAU73B,EAAewP,EAAc,GAC1D,IAGH8nB,CACX,CC1EA,SAASQ,GAAe93B,EAAe+3B,EAASzvB,EAAU,CAAC,GACvD,IAAIqC,EACJ,MAAM4E,EAAWgI,GAAevX,EAAe+3B,EAA0B,SAAjBzvB,EAAQtO,KACjB,QAAxC2Q,EAAK3K,EAAcG,uBAAoC,IAAPwK,OAAgB,EAASA,EAAGhW,YAC7Ea,GACN,IAAI,WAAEia,EAAazP,EAAcqY,wBAA0B,CAAC,GAAM9I,GAAY,CAAC,EAC3EjH,EAAQ8uB,qBACR3nB,EAAanH,EAAQ8uB,oBAMzB,MAAMY,EAAezoB,EACf,IAAMwU,QAAQ3P,IAAI8iB,GAAcl3B,EAAeuP,EAAUjH,IACzD,IAAMyb,QAAQH,UAKdqU,EAAqBj4B,EAAck4B,iBAAmBl4B,EAAck4B,gBAAgBzlC,KACpF,CAAC0lC,EAAe,KACd,MAAM,cAAE1E,EAAgB,EAAC,gBAAEC,EAAe,iBAAEC,GAAsBlkB,EAClE,OAkBZ,SAAyBzP,EAAe+3B,EAAStE,EAAgB,EAAGC,EAAkB,EAAGC,EAAmB,EAAGrrB,GAC3G,MAAMgvB,EAAa,GACbc,GAAsBp4B,EAAck4B,gBAAgBzlC,KAAO,GAAKihC,EAChE2E,EAA+C,IAArB1E,EAC1B,CAAC37B,EAAI,IAAMA,EAAI07B,EACf,CAAC17B,EAAI,IAAMogC,EAAqBpgC,EAAI07B,EAU1C,OATAj7B,MAAMC,KAAKsH,EAAck4B,iBACpBI,KAAKC,IACL9iC,SAAQ,CAACQ,EAAO+B,KACjB/B,EAAMs+B,OAAO,iBAAkBwD,GAC/BT,EAAWtgC,KAAK8gC,GAAe7hC,EAAO8hC,EAAS,IACxCzvB,EACHqa,MAAO8Q,EAAgB4E,EAAwBrgC,KAChD2rB,MAAK,IAAM1tB,EAAMs+B,OAAO,oBAAqBwD,KAAU,IAEvDhU,QAAQ3P,IAAIkjB,EACvB,CAlCmBkB,CAAgBx4B,EAAe+3B,EAAStE,EAAgB0E,EAAczE,EAAiBC,EAAkBrrB,EAAQ,EAE1H,IAAMyb,QAAQH,WAKd,KAAE2P,GAAS9jB,EACjB,GAAI8jB,EAAM,CACN,MAAOkF,EAAOC,GAAiB,mBAATnF,EAChB,CAACyE,EAAcC,GACf,CAACA,EAAoBD,GAC3B,OAAOS,IAAQ9U,MAAK,IAAM+U,KAC9B,CAEI,OAAO3U,QAAQ3P,IAAI,CAAC4jB,IAAgBC,EAAmB3vB,EAAQqa,QAEvE,CAkBA,SAAS4V,GAAgBpnB,EAAGC,GACxB,OAAOD,EAAEwnB,iBAAiBvnB,EAC9B,CCvDA,MAAMwnB,GAAuB,IAAI17B,GAAsBiwB,UACjD0L,GAAoB37B,EAAqBnF,OAC/C,SAAS+gC,GAAY94B,GACjB,OAAQs3B,GAAevT,QAAQ3P,IAAIkjB,EAAW3/B,KAAI,EAAGsG,YAAWqK,aCNpE,SAA8BtI,EAAegO,EAAY1F,EAAU,CAAC,GAEhE,IAAIrK,EACJ,GAFA+B,EAAcu0B,OAAO,iBAAkBvmB,GAEnCvV,MAAMsE,QAAQiR,GAAa,CAC3B,MAAMspB,EAAatpB,EAAWrW,KAAKogC,GAAYD,GAAe93B,EAAe+3B,EAASzvB,KACtFrK,EAAY8lB,QAAQ3P,IAAIkjB,EAC5B,MACK,GAA0B,iBAAftpB,EACZ/P,EAAY65B,GAAe93B,EAAegO,EAAY1F,OAErD,CACD,MAAMywB,EAA2C,mBAAf/qB,EAC5BuJ,GAAevX,EAAegO,EAAY1F,EAAQ3T,QAClDqZ,EACN/P,EAAY8lB,QAAQ3P,IAAI8iB,GAAcl3B,EAAe+4B,EAAoBzwB,GAC7E,CACA,OAAOrK,EAAU0lB,MAAK,KAClB,MAAMjtB,YAAW,KACbsJ,EAAcu0B,OAAO,oBAAqBvmB,EAAW,GACvD,GAEV,CDfkFgrB,CAAqBh5B,EAAe/B,EAAWqK,KACjI,CACA,SAAS2wB,GAAqBj5B,GAC1B,IAAI3C,EAAUy7B,GAAY94B,GAC1B,MAAMoI,EA+RC,CACH/K,QAAS67B,IAAgB,GACzBC,YAAaD,KACbxmB,WAAYwmB,KACZ7uB,SAAU6uB,KACVE,UAAWF,KACXG,WAAYH,KACZh7B,KAAMg7B,MArSV,IAAI5hC,GAAkB,EAKtB,MAAMgiC,EAA2Bt/B,GAAS,CAACu/B,EAAKvrB,KAC5C,IAAIrD,EACJ,MAAM4E,EAAWgI,GAAevX,EAAegO,EAAqB,SAAThU,EACZ,QAAxC2Q,EAAK3K,EAAcG,uBAAoC,IAAPwK,OAAgB,EAASA,EAAGhW,YAC7Ea,GACN,GAAI+Z,EAAU,CACV,MAAM,WAAEE,EAAU,cAAED,KAAkBnV,GAAWkV,EACjDgqB,EAAM,IAAKA,KAAQl/B,KAAWmV,EAClC,CACA,OAAO+pB,CAAG,EAmBd,SAASz4B,EAAe04B,GACpB,MAAMlnC,EAAQ0N,EAAcyS,WACtBzd,EAAUgL,EAAcy5B,mBAAkB,IAAS,CAAC,EAKpDnC,EAAa,GAKboC,EAAc,IAAIt3B,IAMxB,IAAIu3B,EAAkB,CAAC,EAKnBC,EAAsB9J,IAO1B,IAAK,IAAI93B,EAAI,EAAGA,EAAI6gC,GAAmB7gC,IAAK,CACxC,MAAMgC,EAAO4+B,GAAqB5gC,GAC5B6hC,EAAYzxB,EAAMpO,GAClB8D,OAAuBtI,IAAhBlD,EAAM0H,GAAsB1H,EAAM0H,GAAQhF,EAAQgF,GACzD8/B,EAAgBj9B,EAAeiB,GAK/Bi8B,EAAc//B,IAASw/B,EAAoBK,EAAUvnB,SAAW,MAClD,IAAhBynB,IACAH,EAAsB5hC,GAO1B,IAAIgiC,EAAcl8B,IAAS9I,EAAQgF,IAAS8D,IAASxL,EAAM0H,IAAS8/B,EAepE,GAXIE,GACA1iC,GACA0I,EAAci6B,yBACdD,GAAc,GAMlBH,EAAU9C,cAAgB,IAAK4C,IAI7BE,EAAUvnB,UAA4B,OAAhBynB,IAElBj8B,IAAS+7B,EAAUK,UAErBl9B,EAAoBc,IACJ,kBAATA,EACP,SAQJ,IAAIq8B,EADqBC,GAAuBP,EAAUK,SAAUp8B,IAG/D9D,IAASw/B,GACNK,EAAUvnB,WACT0nB,GACDF,GAEH9hC,EAAI4hC,GAAuBE,EAC5BO,GAAuB,EAK3B,MAAMC,EAAiB7hC,MAAMsE,QAAQe,GAAQA,EAAO,CAACA,GAKrD,IAAIy8B,EAAiBD,EAAe/oB,OAAO+nB,EAAwBt/B,GAAO,CAAC,IACvD,IAAhB+/B,IACAQ,EAAiB,CAAC,GAUtB,MAAM,mBAAEC,EAAqB,CAAC,GAAMX,EAC9BY,EAAU,IACTD,KACAD,GAEDG,EAAiB/kC,IACnBwkC,GAAoB,EAChBT,EAAYxhC,IAAIvC,KAChB0kC,GAAuB,EACvBX,EAAYnkC,OAAOI,IAEvBkkC,EAAU7C,eAAerhC,IAAO,CAAI,EAExC,IAAK,MAAMA,KAAO8kC,EAAS,CACvB,MAAMrjB,EAAOmjB,EAAe5kC,GACtB0hB,EAAOmjB,EAAmB7kC,GAEhC,GAAIgkC,EAAgBh9B,eAAehH,GAC/B,SAIJ,IAAIglC,GAAkB,EAElBA,EADAxsB,GAAkBiJ,IAASjJ,GAAkBkJ,IAC1BF,GAAeC,EAAMC,GAGtBD,IAASC,EAE3BsjB,EACIvjB,QAEAsjB,EAAc/kC,GAId+jC,EAAY9c,IAAIjnB,QAGNH,IAAT4hB,GAAsBsiB,EAAYxhC,IAAIvC,GAK3C+kC,EAAc/kC,GAOdkkC,EAAU9C,cAAcphC,IAAO,CAEvC,CAKAkkC,EAAUK,SAAWp8B,EACrB+7B,EAAUW,mBAAqBD,EAI3BV,EAAUvnB,WACVqnB,EAAkB,IAAKA,KAAoBY,IAE3CjjC,GAAmB0I,EAAcQ,wBACjC25B,GAAoB,IAKpBA,GAAuBH,IAAeK,GACtC/C,EAAWtgC,QAAQsjC,EAAe3iC,KAAKsG,IAAc,CACjDA,UAAWA,EACXqK,QAAS,CAAEtO,YAGvB,CAMA,GAAI0/B,EAAYjnC,KAAM,CAClB,MAAMmoC,EAAoB,CAAC,EAC3BlB,EAAYjkC,SAASE,IACjB,MAAMklC,EAAiB76B,EAAc86B,cAAcnlC,GACnDilC,EAAkBjlC,QACKH,IAAnBqlC,EAA+B,KAAOA,CAAc,IAE5DvD,EAAWtgC,KAAK,CAAEiH,UAAW28B,GACjC,CACA,IAAIG,EAAgBv9B,QAAQ85B,EAAWv/B,QAOvC,OANIT,IACmB,IAAlBhF,EAAMmC,SAAqBnC,EAAMmC,UAAYnC,EAAM+K,SACnD2C,EAAci6B,yBACfc,GAAgB,GAEpBzjC,GAAkB,EACXyjC,EAAgB19B,EAAQi6B,GAAcvT,QAAQH,SACzD,CAkBA,MAAO,CACH9iB,iBACA6R,UAhBJ,SAAmB3Y,EAAMsY,GACrB,IAAI3H,EAEJ,GAAIvC,EAAMpO,GAAMsY,WAAaA,EACzB,OAAOyR,QAAQH,UAEsB,QAAxCjZ,EAAK3K,EAAck4B,uBAAoC,IAAPvtB,GAAyBA,EAAGlV,SAASQ,IAAY,IAAI0U,EAAI,OAAuC,QAA/BA,EAAK1U,EAAM4K,sBAAmC,IAAP8J,OAAgB,EAASA,EAAGgI,UAAU3Y,EAAMsY,EAAS,IAC9MlK,EAAMpO,GAAMsY,SAAWA,EACvB,MAAMglB,EAAax2B,EAAe9G,GAClC,IAAK,MAAMrE,KAAOyS,EACdA,EAAMzS,GAAKohC,cAAgB,CAAC,EAEhC,OAAOO,CACX,EAII0D,mBApPJ,SAA4BC,GACxB59B,EAAU49B,EAAaj7B,EAC3B,EAmPIw3B,SAAU,IAAMpvB,EAExB,CACA,SAASgyB,GAAuB/iB,EAAMD,GAClC,MAAoB,iBAATA,EACAA,IAASC,IAEX5e,MAAMsE,QAAQqa,KACXD,GAAeC,EAAMC,EAGrC,CACA,SAAS6hB,GAAgB5mB,GAAW,GAChC,MAAO,CACHA,WACAykB,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjBwD,mBAAoB,CAAC,EAE7B,CE1SA,IAAIjnC,GAAK,ECCT,MAAM+jC,GAAa,CACfr5B,UAAW,CACPiU,QCDR,cAA+BA,GAM3BC,YAAYC,GACRkC,MAAMlC,GACNA,EAAKvR,iBAAmBuR,EAAKvR,eAAiBo4B,GAAqB7mB,GACvE,CACA8oB,sCACI,MAAM,QAAE79B,GAAYhL,KAAK+f,KAAKK,WAC9BpgB,KAAKgP,UACDrE,EAAoBK,KACpBhL,KAAKgP,QAAUhE,EAAQ89B,UAAU9oC,KAAK+f,MAE9C,CAIAhR,QACI/O,KAAK6oC,qCACT,CACAz6B,SACI,MAAM,QAAEpD,GAAYhL,KAAK+f,KAAKK,YACtBpV,QAAS+9B,GAAgB/oC,KAAK+f,KAAKjgB,WAAa,CAAC,EACrDkL,IAAY+9B,GACZ/oC,KAAK6oC,qCAEb,CACA75B,UAAY,ID3BZnD,KAAM,CACFgU,QDLR,cAAmCA,GAC/BC,cACImC,SAASC,WACTliB,KAAKkB,GAAKA,IACd,CACAkN,SACI,IAAKpO,KAAK+f,KAAKjS,gBACX,OACJ,MAAM,UAAE3N,EAAS,eAAEkC,GAAmBrC,KAAK+f,KAAKjS,iBACxC3N,UAAW6oC,GAAkBhpC,KAAK+f,KAAKkpB,qBAAuB,CAAC,EACvE,IAAKjpC,KAAK+f,KAAKvR,gBAAkBrO,IAAc6oC,EAC3C,OAEJ,MAAME,EAAgBlpC,KAAK+f,KAAKvR,eAAe8R,UAAU,QAASngB,GAC9DkC,IAAmBlC,GACnB+oC,EAAc5X,MAAK,IAAMjvB,EAAerC,KAAKkB,KAErD,CACA6N,QACI,MAAM,SAAE9L,GAAajD,KAAK+f,KAAKjS,iBAAmB,CAAC,EAC/C7K,IACAjD,KAAKgP,QAAU/L,EAASjD,KAAKkB,IAErC,CACA8N,UAAY,KG3BViG,GAAW,CAAC6J,EAAGC,IAAMjN,KAAKyiB,IAAIzV,EAAIC,GCWxC,MAAMoqB,GACFrpB,YAAY1B,EAAOgrB,GAAU,mBAAEC,EAAkB,cAAEC,EAAa,iBAAEC,GAAmB,GAAU,CAAC,GAgE5F,GA5DAvpC,KAAKqjB,WAAa,KAIlBrjB,KAAKwpC,cAAgB,KAIrBxpC,KAAKypC,kBAAoB,KAIzBzpC,KAAKopC,SAAW,CAAC,EAIjBppC,KAAKspC,cAAgBh7B,OACrBtO,KAAK0pC,YAAc,KACf,IAAM1pC,KAAKwpC,gBAAiBxpC,KAAKypC,kBAC7B,OACJ,MAAMtpB,EAAOwpB,GAAW3pC,KAAKypC,kBAAmBzpC,KAAK4pC,SAC/CC,EAAmC,OAApB7pC,KAAKqjB,WAIpBymB,EDxClB,SAAoBhrB,EAAGC,GAEnB,MAAMgrB,EAAS90B,GAAS6J,EAAEzO,EAAG0O,EAAE1O,GACzB25B,EAAS/0B,GAAS6J,EAAExO,EAAGyO,EAAEzO,GAC/B,OAAOwB,KAAKqU,KAAK4jB,GAAU,EAAIC,GAAU,EAC7C,CCmC4CC,CAAW9pB,EAAK1H,OAAQ,CAAEpI,EAAG,EAAGC,EAAG,KAAQ,EAC3E,IAAKu5B,IAAiBC,EAClB,OACJ,MAAM,MAAEprB,GAAUyB,GACZ,UAAE8G,GAAc,GAAAH,UACtB9mB,KAAK4pC,QAAQjlC,KAAK,IAAK+Z,EAAOuI,cAC9B,MAAM,QAAEijB,EAAO,OAAEC,GAAWnqC,KAAKopC,SAC5BS,IACDK,GAAWA,EAAQlqC,KAAKwpC,cAAerpB,GACvCngB,KAAKqjB,WAAarjB,KAAKwpC,eAE3BW,GAAUA,EAAOnqC,KAAKwpC,cAAerpB,EAAK,EAE9CngB,KAAKoqC,kBAAoB,CAAChsB,EAAO+B,KAC7BngB,KAAKwpC,cAAgBprB,EACrBpe,KAAKypC,kBAAoBY,GAAelqB,EAAMngB,KAAKqpC,oBAEnD,MAAMj7B,OAAOpO,KAAK0pC,aAAa,EAAK,EAExC1pC,KAAKsqC,gBAAkB,CAAClsB,EAAO+B,KAC3BngB,KAAKuqC,MACL,MAAM,MAAEC,EAAK,aAAEC,EAAY,gBAAEC,GAAoB1qC,KAAKopC,SAGtD,GAFIppC,KAAKupC,kBACLmB,GAAmBA,KACjB1qC,KAAKwpC,gBAAiBxpC,KAAKypC,kBAC7B,OACJ,MAAMkB,EAAUhB,GAA0B,kBAAfvrB,EAAMzW,KAC3B3H,KAAKypC,kBACLY,GAAelqB,EAAMngB,KAAKqpC,oBAAqBrpC,KAAK4pC,SACtD5pC,KAAKqjB,YAAcmnB,GACnBA,EAAMpsB,EAAOusB,GAEjBF,GAAgBA,EAAarsB,EAAOusB,EAAQ,GAG3CxsB,GAAiBC,GAClB,OACJpe,KAAKupC,iBAAmBA,EACxBvpC,KAAKopC,SAAWA,EAChBppC,KAAKqpC,mBAAqBA,EAC1BrpC,KAAKspC,cAAgBA,GAAiBh7B,OACtC,MACMs8B,EAAcP,GADP7rB,GAAiBJ,GACWpe,KAAKqpC,qBACxC,MAAE3qB,GAAUksB,GACZ,UAAE3jB,GAAc,GAAAH,UACtB9mB,KAAK4pC,QAAU,CAAC,IAAKlrB,EAAOuI,cAC5B,MAAM,eAAE4jB,GAAmBzB,EAC3ByB,GACIA,EAAezsB,EAAOurB,GAAWiB,EAAa5qC,KAAK4pC,UACvD5pC,KAAK8qC,gBAAkB9rB,GAAKJ,GAAgB5e,KAAKspC,cAAe,cAAetpC,KAAKoqC,mBAAoBxrB,GAAgB5e,KAAKspC,cAAe,YAAatpC,KAAKsqC,iBAAkB1rB,GAAgB5e,KAAKspC,cAAe,gBAAiBtpC,KAAKsqC,iBAC9O,CACAS,eAAe3B,GACXppC,KAAKopC,SAAWA,CACpB,CACAmB,MACIvqC,KAAK8qC,iBAAmB9qC,KAAK8qC,mBAC7B,SAAY9qC,KAAK0pC,YACrB,EAEJ,SAASW,GAAelqB,EAAMkpB,GAC1B,OAAOA,EAAqB,CAAE3qB,MAAO2qB,EAAmBlpB,EAAKzB,QAAWyB,CAC5E,CACA,SAAS6qB,GAAclsB,EAAGC,GACtB,MAAO,CAAE1O,EAAGyO,EAAEzO,EAAI0O,EAAE1O,EAAGC,EAAGwO,EAAExO,EAAIyO,EAAEzO,EACtC,CACA,SAASq5B,IAAW,MAAEjrB,GAASkrB,GAC3B,MAAO,CACHlrB,QACAqU,MAAOiY,GAActsB,EAAOusB,GAAgBrB,IAC5CnxB,OAAQuyB,GAActsB,EAAOwsB,GAAiBtB,IAC9CxkB,SAAU,GAAYwkB,EAAS,IAEvC,CACA,SAASsB,GAAiBtB,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASqB,GAAgBrB,GACrB,OAAOA,EAAQA,EAAQlkC,OAAS,EACpC,CACA,SAAS,GAAYkkC,EAASuB,GAC1B,GAAIvB,EAAQlkC,OAAS,EACjB,MAAO,CAAE2K,EAAG,EAAGC,EAAG,GAEtB,IAAI3K,EAAIikC,EAAQlkC,OAAS,EACrB0lC,EAAmB,KACvB,MAAMC,EAAYJ,GAAgBrB,GAClC,KAAOjkC,GAAK,IACRylC,EAAmBxB,EAAQjkC,KACvB0lC,EAAUpkB,UAAYmkB,EAAiBnkB,UACvC5B,GAAsB8lB,MAG1BxlC,IAEJ,IAAKylC,EACD,MAAO,CAAE/6B,EAAG,EAAGC,EAAG,GAEtB,MAAMuW,EAAOtB,GAAsB8lB,EAAUpkB,UAAYmkB,EAAiBnkB,WAC1E,GAAa,IAATJ,EACA,MAAO,CAAExW,EAAG,EAAGC,EAAG,GAEtB,MAAMuL,EAAkB,CACpBxL,GAAIg7B,EAAUh7B,EAAI+6B,EAAiB/6B,GAAKwW,EACxCvW,GAAI+6B,EAAU/6B,EAAI86B,EAAiB96B,GAAKuW,GAQ5C,OANIhL,EAAgBxL,IAAMotB,MACtB5hB,EAAgBxL,EAAI,GAEpBwL,EAAgBvL,IAAMmtB,MACtB5hB,EAAgBvL,EAAI,GAEjBuL,CACX,CCvJA,SAASyvB,GAAWC,GAChB,OAAOA,EAAKj6B,IAAMi6B,EAAKl6B,GAC3B,CACA,SAASm6B,GAAO/nC,EAAOuE,EAAS,EAAGyjC,EAAc,KAC7C,OAAO35B,KAAKyiB,IAAI9wB,EAAQuE,IAAWyjC,CACvC,CACA,SAASC,GAAc3Y,EAAO9b,EAAQjP,EAAQwQ,EAAS,IACnDua,EAAMva,OAASA,EACfua,EAAM4Y,YAAc/S,GAAU3hB,EAAO5F,IAAK4F,EAAO3F,IAAKyhB,EAAMva,QAC5Dua,EAAMphB,MAAQ25B,GAAWtjC,GAAUsjC,GAAWr0B,IAC1Cu0B,GAAOzY,EAAMphB,MAAO,EAAG,OAAW6b,MAAMuF,EAAMphB,UAC9CohB,EAAMphB,MAAQ,GAClBohB,EAAM6Y,UACFhT,GAAU5wB,EAAOqJ,IAAKrJ,EAAOsJ,IAAKyhB,EAAMva,QAAUua,EAAM4Y,aACxDH,GAAOzY,EAAM6Y,YAAcpe,MAAMuF,EAAM6Y,cACvC7Y,EAAM6Y,UAAY,EAC1B,CACA,SAASC,GAAa9Y,EAAO9b,EAAQjP,EAAQwQ,GACzCkzB,GAAc3Y,EAAM1iB,EAAG4G,EAAO5G,EAAGrI,EAAOqI,EAAGmI,EAASA,EAAOjD,aAAUpS,GACrEuoC,GAAc3Y,EAAMziB,EAAG2G,EAAO3G,EAAGtI,EAAOsI,EAAGkI,EAASA,EAAOhD,aAAUrS,EACzE,CACA,SAAS2oC,GAAiB9jC,EAAQ+jC,EAAUn+B,GACxC5F,EAAOqJ,IAAMzD,EAAOyD,IAAM06B,EAAS16B,IACnCrJ,EAAOsJ,IAAMtJ,EAAOqJ,IAAMi6B,GAAWS,EACzC,CAKA,SAASC,GAAyBhkC,EAAQoE,EAAQwB,GAC9C5F,EAAOqJ,IAAMjF,EAAOiF,IAAMzD,EAAOyD,IACjCrJ,EAAOsJ,IAAMtJ,EAAOqJ,IAAMi6B,GAAWl/B,EACzC,CACA,SAAS6/B,GAAqBjkC,EAAQoE,EAAQwB,GAC1Co+B,GAAyBhkC,EAAOqI,EAAGjE,EAAOiE,EAAGzC,EAAOyC,GACpD27B,GAAyBhkC,EAAOsI,EAAGlE,EAAOkE,EAAG1C,EAAO0C,EACxD,CCRA,SAAS47B,GAA4BX,EAAMl6B,EAAKC,GAC5C,MAAO,CACHD,SAAalO,IAARkO,EAAoBk6B,EAAKl6B,IAAMA,OAAMlO,EAC1CmO,SAAanO,IAARmO,EACCi6B,EAAKj6B,IAAMA,GAAOi6B,EAAKj6B,IAAMi6B,EAAKl6B,UAClClO,EAEd,CAcA,SAASgpC,GAA4BC,EAAYC,GAC7C,IAAIh7B,EAAMg7B,EAAgBh7B,IAAM+6B,EAAW/6B,IACvCC,EAAM+6B,EAAgB/6B,IAAM86B,EAAW96B,IAO3C,OAJI+6B,EAAgB/6B,IAAM+6B,EAAgBh7B,IACtC+6B,EAAW96B,IAAM86B,EAAW/6B,OAC3BA,EAAKC,GAAO,CAACA,EAAKD,IAEhB,CAAEA,MAAKC,MAClB,CAuCA,MAAMg7B,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACHr7B,IAAKs7B,GAAoBH,EAAaC,GACtCn7B,IAAKq7B,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,iBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAChC,CC9HA,MAMMC,GAAc,KAAM,CACtBx8B,EAP0B,CAC1Bu7B,UAAW,EACXj6B,MAAO,EACP6G,OAAQ,EACRmzB,YAAa,GAIbr7B,EAR0B,CAC1Bs7B,UAAW,EACXj6B,MAAO,EACP6G,OAAQ,EACRmzB,YAAa,KAOXmB,GAAY,KAAM,CACpBz8B,EAFqB,CAAGgB,IAAK,EAAGC,IAAK,GAGrChB,EAHqB,CAAGe,IAAK,EAAGC,IAAK,KCVzC,SAASy7B,GAAS7nC,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCGA,SAAS8nC,IAAwB,IAAEtsC,EAAG,KAAEE,EAAI,MAAE+S,EAAK,OAAEC,IACjD,MAAO,CACHvD,EAAG,CAAEgB,IAAKzQ,EAAM0Q,IAAKqC,GACrBrD,EAAG,CAAEe,IAAK3Q,EAAK4Q,IAAKsC,GAE5B,CCVA,SAASq5B,GAAgBt7B,GACrB,YAAiBxO,IAAVwO,GAAiC,IAAVA,CAClC,CACA,SAASu7B,IAAS,MAAEv7B,EAAK,OAAEgD,EAAM,OAAEC,IAC/B,OAASq4B,GAAgBt7B,KACpBs7B,GAAgBt4B,KAChBs4B,GAAgBr4B,EACzB,CACA,SAASyB,GAAarT,GAClB,OAAQkqC,GAASlqC,IACbmqC,GAAenqC,IACfA,EAAOuN,GACPvN,EAAOuR,QACPvR,EAAOwR,SACPxR,EAAOyR,OACf,CACA,SAAS04B,GAAenqC,GACpB,OAAOoqC,GAAcpqC,EAAOqN,IAAM+8B,GAAcpqC,EAAOsN,EAC3D,CACA,SAAS88B,GAAc3pC,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CCfA,SAAS4pC,GAAW3uB,EAAO/M,EAAOg6B,GAG9B,OAAOA,EADQh6B,GADY+M,EAAQitB,EAGvC,CAIA,SAAS2B,GAAgB5uB,EAAOktB,EAAWj6B,EAAOg6B,EAAa4B,GAI3D,YAHiBpqC,IAAboqC,IACA7uB,EAAQ2uB,GAAW3uB,EAAO6uB,EAAU5B,IAEjC0B,GAAW3uB,EAAO/M,EAAOg6B,GAAeC,CACnD,CAIA,SAAS4B,GAAejC,EAAMK,EAAY,EAAGj6B,EAAQ,EAAGg6B,EAAa4B,GACjEhC,EAAKl6B,IAAMi8B,GAAgB/B,EAAKl6B,IAAKu6B,EAAWj6B,EAAOg6B,EAAa4B,GACpEhC,EAAKj6B,IAAMg8B,GAAgB/B,EAAKj6B,IAAKs6B,EAAWj6B,EAAOg6B,EAAa4B,EACxE,CAIA,SAASE,GAAcC,GAAK,EAAEr9B,EAAC,EAAEC,IAC7Bk9B,GAAeE,EAAIr9B,EAAGA,EAAEu7B,UAAWv7B,EAAEsB,MAAOtB,EAAEs7B,aAC9C6B,GAAeE,EAAIp9B,EAAGA,EAAEs7B,UAAWt7B,EAAEqB,MAAOrB,EAAEq7B,YAClD,CAuDA,SAASgC,GAAch8B,GACnB,OAAIi8B,OAAOC,UAAUl8B,IAEdA,EAAQ,iBAAmBA,EAAQ,cAD/BA,EACwD,CACvE,CACA,SAASm8B,GAAcvC,EAAMt2B,GACzBs2B,EAAKl6B,IAAMk6B,EAAKl6B,IAAM4D,EACtBs2B,EAAKj6B,IAAMi6B,EAAKj6B,IAAM2D,CAC1B,CAMA,SAAS84B,GAAcxC,EAAMyC,GAAa1qC,EAAK2qC,EAAUC,IACrD,MAAMC,OAAuChrC,IAA1B6qC,EAAWE,GAA2BF,EAAWE,GAAa,GAC3EvC,EAAc/S,GAAU2S,EAAKl6B,IAAKk6B,EAAKj6B,IAAK68B,GAElDX,GAAejC,EAAMyC,EAAW1qC,GAAM0qC,EAAWC,GAAWtC,EAAaqC,EAAWr8B,MACxF,CAIA,MAAMy8B,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAI9B,SAASC,GAAaZ,EAAKv8B,GACvB48B,GAAcL,EAAIr9B,EAAGc,EAAWi9B,IAChCL,GAAcL,EAAIp9B,EAAGa,EAAWk9B,GACpC,CCpHA,SAASte,GAAmBjhB,EAAUu7B,GAClC,OAAO2C,GHeX,SAA4BtuB,EAAO2rB,GAC/B,IAAKA,EACD,OAAO3rB,EACX,MAAM6vB,EAAUlE,EAAe,CAAEh6B,EAAGqO,EAAM9d,KAAM0P,EAAGoO,EAAMhe,MACnD8tC,EAAcnE,EAAe,CAAEh6B,EAAGqO,EAAM/K,MAAOrD,EAAGoO,EAAM9K,SAC9D,MAAO,CACHlT,IAAK6tC,EAAQj+B,EACb1P,KAAM2tC,EAAQl+B,EACduD,OAAQ46B,EAAYl+B,EACpBqD,MAAO66B,EAAYn+B,EAE3B,CG1BmCo+B,CAAmB3/B,EAAS2O,wBAAyB4sB,GACxF,CCJA,MAAMqE,GAAmB,EAAG/uC,aACjBA,EAAUA,EAAQgvC,cAAcC,YAAc,KCgBnDC,GAAsB,IAAIhuB,QAKhC,MAAMiuB,GACFhvB,YAAYnS,GAIR3N,KAAK+uC,eAAiB,KACtB/uC,KAAKgvC,YAAa,EAClBhvC,KAAKivC,iBAAmB,KACxBjvC,KAAK2rC,YAAc,CAAEt7B,EAAG,EAAGC,EAAG,GAI9BtQ,KAAKkvC,aAAc,EACnBlvC,KAAKmvC,uBAAwB,EAI7BnvC,KAAKovC,QAAUtC,KACf9sC,KAAK2N,cAAgBA,CACzB,CACA/C,MAAMykC,GAAa,aAAEC,GAAe,GAAU,CAAC,GAI3C,MAAM,gBAAExhC,GAAoB9N,KAAK2N,cACjC,GAAIG,IAAiD,IAA9BA,EAAgB3N,UACnC,OACJ,MA2FM,iBAAEopC,GAAqBvpC,KAAKogB,WAClCpgB,KAAKuvC,WAAa,IAAIpG,GAAWkG,EAAa,CAC1CxE,eA7FoBzsB,IACpB,MAAM,iBAAEmrB,GAAqBvpC,KAAKogB,WAGlCmpB,EAAmBvpC,KAAKwvC,iBAAmBxvC,KAAKyvC,gBAC5CH,GACAtvC,KAAKsvC,aAAa9wB,GAAiBJ,EAAO,QAAQM,MACtD,EAuFAwrB,QArFY,CAAC9rB,EAAO+B,KAEpB,MAAM,KAAErU,EAAI,gBAAE4jC,EAAe,YAAEC,GAAgB3vC,KAAKogB,WACpD,GAAItU,IAAS4jC,IACL1vC,KAAK+uC,gBACL/uC,KAAK+uC,iBACT/uC,KAAK+uC,eAAiBvvB,GAAc1T,IAE/B9L,KAAK+uC,gBACN,OAER/uC,KAAKgvC,YAAa,EAClBhvC,KAAKivC,iBAAmB,KACxBjvC,KAAK4vC,qBACD5vC,KAAK2N,cAAckN,aACnB7a,KAAK2N,cAAckN,WAAWg1B,oBAAqB,EACnD7vC,KAAK2N,cAAckN,WAAW7S,YAAS7E,GAK3C4pC,IAAUxB,IACN,IAAI5rC,EAAUK,KAAK8vC,mBAAmBvE,GAAMxlC,OAAS,EAIrD,GAAIyM,GAAQ7C,KAAKhQ,GAAU,CACvB,MAAM,WAAEkb,GAAe7a,KAAK2N,cAC5B,GAAIkN,GAAcA,EAAWzO,OAAQ,CACjC,MAAM2jC,EAAel1B,EAAWzO,OAAO4jC,UAAUzE,GACjD,GAAIwE,EAAc,CAEdpwC,EADe2rC,GAAWyE,IACNt+B,WAAW9R,GAAW,IAC9C,CACJ,CACJ,CACAK,KAAK2rC,YAAYJ,GAAQ5rC,CAAO,IAGhCgwC,GACAA,EAAYvxB,EAAO+B,GACvB,MAAM,eAAE3R,GAAmBxO,KAAK2N,cAChCa,GAAkBA,EAAe8R,UAAU,aAAa,EAAK,EA4C7D6pB,OA1CW,CAAC/rB,EAAO+B,KAEnB,MAAM,gBAAEuvB,EAAe,kBAAEO,EAAiB,gBAAEC,EAAe,OAAEC,GAAYnwC,KAAKogB,WAE9E,IAAKsvB,IAAoB1vC,KAAK+uC,eAC1B,OACJ,MAAM,OAAEt2B,GAAW0H,EAEnB,GAAI8vB,GAA+C,OAA1BjwC,KAAKivC,iBAM1B,OALAjvC,KAAKivC,iBAkWrB,SAA6Bx2B,EAAQ23B,EAAgB,IACjD,IAAIhQ,EAAY,KACZtuB,KAAKyiB,IAAI9b,EAAOnI,GAAK8/B,EACrBhQ,EAAY,IAEPtuB,KAAKyiB,IAAI9b,EAAOpI,GAAK+/B,IAC1BhQ,EAAY,KAEhB,OAAOA,CACX,CA3WwCiQ,CAAoB53B,QAEd,OAA1BzY,KAAKivC,kBACLiB,GAAmBA,EAAgBlwC,KAAKivC,mBAKhDjvC,KAAKswC,WAAW,IAAKnwB,EAAKzB,MAAOjG,GACjCzY,KAAKswC,WAAW,IAAKnwB,EAAKzB,MAAOjG,GAOjCzY,KAAK2N,cAAc5M,SAKnBovC,GAAUA,EAAO/xB,EAAO+B,EAAK,EAa7BsqB,aAXiB,CAACrsB,EAAO+B,IAASngB,KAAKs8B,KAAKle,EAAO+B,GAYnDuqB,gBAXoB,IAAMqC,IAAUxB,IACpC,IAAIjzB,EACJ,MAAwC,WAAjCtY,KAAKuwC,kBAAkBhF,KAC0B,QAAlDjzB,EAAKtY,KAAK8vC,mBAAmBvE,GAAM3/B,iBAA8B,IAAP0M,OAAgB,EAASA,EAAGulB,OAAO,KASpG,CACCwL,mBAAoBrpC,KAAK2N,cAAc6iC,wBACvCjH,mBACAD,cAAeoF,GAAiB1uC,KAAK2N,gBAE7C,CACA2uB,KAAKle,EAAO+B,GACR,MAAM6uB,EAAahvC,KAAKgvC,WAExB,GADAhvC,KAAKgK,UACAglC,EACD,OACJ,MAAM,SAAE5pB,GAAajF,EACrBngB,KAAK+jC,eAAe3e,GACpB,MAAM,UAAEqrB,GAAczwC,KAAKogB,WACvBqwB,GACAA,EAAUryB,EAAO+B,EACzB,CACAnW,SACIhK,KAAKgvC,YAAa,EAClB,MAAM,WAAEn0B,EAAU,eAAErM,GAAmBxO,KAAK2N,cACxCkN,IACAA,EAAWg1B,oBAAqB,GAEpC7vC,KAAKuvC,YAAcvvC,KAAKuvC,WAAWhF,MACnCvqC,KAAKuvC,gBAAapsC,EAClB,MAAM,gBAAEusC,GAAoB1vC,KAAKogB,YAC5BsvB,GAAmB1vC,KAAK+uC,iBACzB/uC,KAAK+uC,iBACL/uC,KAAK+uC,eAAiB,MAE1BvgC,GAAkBA,EAAe8R,UAAU,aAAa,EAC5D,CACAgwB,WAAW/E,EAAMmF,EAAQj4B,GACrB,MAAM,KAAE3M,GAAS9L,KAAKogB,WAEtB,IAAK3H,IAAWk4B,GAAWpF,EAAMz/B,EAAM9L,KAAKivC,kBACxC,OACJ,MAAM2B,EAAY5wC,KAAK8vC,mBAAmBvE,GAC1C,IAAIxmB,EAAO/kB,KAAK2rC,YAAYJ,GAAQ9yB,EAAO8yB,GAEvCvrC,KAAKkvC,aAAelvC,KAAKkvC,YAAY3D,KACrCxmB,ERnLZ,SAA0BrG,GAAO,IAAErN,EAAG,IAAEC,GAAO89B,GAa3C,YAZYjsC,IAARkO,GAAqBqN,EAAQrN,EAE7BqN,EAAQ0wB,EACFxW,GAAUvnB,EAAKqN,EAAO0wB,EAAQ/9B,KAC9BS,KAAKR,IAAIoN,EAAOrN,QAETlO,IAARmO,GAAqBoN,EAAQpN,IAElCoN,EAAQ0wB,EACFxW,GAAUtnB,EAAKoN,EAAO0wB,EAAQ99B,KAC9BQ,KAAKT,IAAIqN,EAAOpN,IAEnBoN,CACX,CQqKmBmyB,CAAiB9rB,EAAM/kB,KAAKkvC,YAAY3D,GAAOvrC,KAAKovC,QAAQ7D,KAEvEqF,EAAU9tC,IAAIiiB,EAClB,CACA6qB,qBACI,IAAIt3B,EACJ,MAAM,gBAAEw4B,EAAe,YAAEtE,GAAgBxsC,KAAKogB,WACxChU,EAASpM,KAAK2N,cAAckN,aAC7B7a,KAAK2N,cAAckN,WAAWzO,OAC7BpM,KAAK2N,cAAckN,WAAWk2B,SAAQ,GACG,QAAxCz4B,EAAKtY,KAAK2N,cAAckN,kBAA+B,IAAPvC,OAAgB,EAASA,EAAGlM,OAC7E4kC,EAAkBhxC,KAAKkvC,YACzB4B,GAAmB3mC,EAAY2mC,GAC1B9wC,KAAKkvC,cACNlvC,KAAKkvC,YAAclvC,KAAKixC,yBAKxBjxC,KAAKkvC,eADL4B,IAAmB1kC,IRrKnC,SAAiC4jC,GAAW,IAAEtvC,EAAG,KAAEE,EAAI,OAAEgT,EAAM,MAAED,IAC7D,MAAO,CACHtD,EAAG67B,GAA4B8D,EAAU3/B,EAAGzP,EAAM+S,GAClDrD,EAAG47B,GAA4B8D,EAAU1/B,EAAG5P,EAAKkT,GAEzD,CQiKmCs9B,CAAwB9kC,EAAO4jC,UAAWc,GAMrE9wC,KAAKovC,QR9Gb,SAA4B5C,EAAcF,IAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACHj8B,EAAGk8B,GAAmBC,EAAa,OAAQ,SAC3Cl8B,EAAGi8B,GAAmBC,EAAa,MAAO,UAElD,CQmGuB2E,CAAmB3E,GAK9BwE,IAAoBhxC,KAAKkvC,aACzB9iC,GACApM,KAAKkvC,cACJlvC,KAAKmvC,uBACNpC,IAAUxB,IACFvrC,KAAK8vC,mBAAmBvE,KACxBvrC,KAAKkvC,YAAY3D,GRvIrC,SAA+Bn/B,EAAQ8iC,GACnC,MAAMkC,EAAsB,CAAC,EAO7B,YANwBjuC,IAApB+rC,EAAY79B,MACZ+/B,EAAoB//B,IAAM69B,EAAY79B,IAAMjF,EAAOiF,UAE/BlO,IAApB+rC,EAAY59B,MACZ8/B,EAAoB9/B,IAAM49B,EAAY59B,IAAMlF,EAAOiF,KAEhD+/B,CACX,CQ8H6CC,CAAsBjlC,EAAO4jC,UAAUzE,GAAOvrC,KAAKkvC,YAAY3D,IAC5F,GAGZ,CACA0F,wBACI,MAAQH,gBAAiB5B,EAAW,yBAAEoC,GAA6BtxC,KAAKogB,WACxE,IAAK8uB,IAAgB/kC,EAAY+kC,GAC7B,OAAO,EACX,MAAMqC,EAAqBrC,EAAYvvC,SACvC,QAAiC,OAAvB4xC,EAA6B,0GACvC,MAAM,WAAE12B,GAAe7a,KAAK2N,cAE5B,IAAKkN,IAAeA,EAAWzO,OAC3B,OAAO,EACX,MAAMolC,EF1Od,SAAwBzxC,EAAS0xC,EAAoBpI,GACjD,MAAMqI,EAAc3hB,GAAmBhwB,EAASspC,IAC1C,OAAEsI,GAAWF,EAKnB,OAJIE,IACA7D,GAAc4D,EAAYrhC,EAAGshC,EAAOl5B,OAAOpI,GAC3Cy9B,GAAc4D,EAAYphC,EAAGqhC,EAAOl5B,OAAOnI,IAExCohC,CACX,CEkO+BE,CAAeL,EAAoB12B,EAAWwG,KAAMrhB,KAAK2N,cAAc6iC,yBAC9F,IAAIqB,ERhLZ,SAAiC7B,EAAWwB,GACxC,MAAO,CACHnhC,EAAG87B,GAA4B6D,EAAU3/B,EAAGmhC,EAAenhC,GAC3DC,EAAG67B,GAA4B6D,EAAU1/B,EAAGkhC,EAAelhC,GAEnE,CQ2KkCwhC,CAAwBj3B,EAAWzO,OAAO4jC,UAAWwB,GAK/E,GAAIF,EAA0B,CAC1B,MAAMS,EAAkBT,EL5OpC,UAAiC,EAAEjhC,EAAC,EAAEC,IAClC,MAAO,CAAE5P,IAAK4P,EAAEe,IAAKsC,MAAOtD,EAAEiB,IAAKsC,OAAQtD,EAAEgB,IAAK1Q,KAAMyP,EAAEgB,IAC9D,CK0O6D2gC,CAAwBH,IACzE7xC,KAAKmvC,wBAA0B4C,EAC3BA,IACAF,EAAsB7E,GAAwB+E,GAEtD,CACA,OAAOF,CACX,CACA9N,eAAe3e,GACX,MAAM,KAAEtZ,EAAI,aAAEmmC,EAAY,YAAEzF,EAAW,eAAE0F,EAAc,iBAAE3I,EAAgB,oBAAE4I,GAAyBnyC,KAAKogB,WACnG8uB,EAAclvC,KAAKkvC,aAAe,CAAC,EACnCkD,EAAqBrF,IAAUxB,IACjC,IAAKoF,GAAWpF,EAAMz/B,EAAM9L,KAAKivC,kBAC7B,OAEJ,IAAI7xB,EAAc8xB,GAAeA,EAAY3D,IAAU,CAAC,EACpDhC,IACAnsB,EAAa,CAAE/L,IAAK,EAAGC,IAAK,IAOhC,MAAMikB,EAAkBiX,EAAc,IAAM,IACtClX,EAAgBkX,EAAc,GAAK,IACnCrX,EAAU,CACZxtB,KAAM,UACNyd,SAAU6sB,EAAe7sB,EAASmmB,GAAQ,EAC1ChW,kBACAD,gBACAD,aAAc,IACdxB,UAAW,EACXjO,UAAW,MACRssB,KACA90B,GAKP,OAAOpd,KAAKqyC,wBAAwB9G,EAAMpW,EAAQ,IAGtD,OAAOzD,QAAQ3P,IAAIqwB,GAAoB9gB,KAAK6gB,EAChD,CACAE,wBAAwB9G,EAAMnuB,GAC1B,MAAMwzB,EAAY5wC,KAAK8vC,mBAAmBvE,GAC1C,OAAOqF,EAAUhmC,MAAMm2B,GAAmBwK,EAAMqF,EAAW,EAAGxzB,EAAYpd,KAAK2N,eACnF,CACA8hC,gBACI1C,IAAUxB,GAASvrC,KAAK8vC,mBAAmBvE,GAAMjP,QACrD,CACAkT,iBACIzC,IAAUxB,IAAW,IAAIjzB,EAAI,OAA0D,QAAlDA,EAAKtY,KAAK8vC,mBAAmBvE,GAAM3/B,iBAA8B,IAAP0M,OAAgB,EAASA,EAAGwlB,OAAO,GACtI,CACAyS,kBAAkBhF,GACd,IAAIjzB,EACJ,OAA0D,QAAlDA,EAAKtY,KAAK8vC,mBAAmBvE,GAAM3/B,iBAA8B,IAAP0M,OAAgB,EAASA,EAAGvC,KAClG,CAOA+5B,mBAAmBvE,GACf,MAAM+G,EAAU,QAAU/G,EAAK/vB,cACzBvb,EAAQD,KAAK2N,cAAcyS,WAC3BmyB,EAAsBtyC,EAAMqyC,GAClC,OAAOC,GAEDvyC,KAAK2N,cAAc8hB,SAAS8b,GAAOtrC,EAAMmC,QAAUnC,EAAMmC,QAAQmpC,QAAQpoC,IAAc,EACjG,CACAmsC,aAAa5wB,GACTquB,IAAUxB,IACN,MAAM,KAAEz/B,GAAS9L,KAAKogB,WAEtB,IAAKuwB,GAAWpF,EAAMz/B,EAAM9L,KAAKivC,kBAC7B,OACJ,MAAM,WAAEp0B,GAAe7a,KAAK2N,cACtBijC,EAAY5wC,KAAK8vC,mBAAmBvE,GAC1C,GAAI1wB,GAAcA,EAAWzO,OAAQ,CACjC,MAAM,IAAEiF,EAAG,IAAEC,GAAQuJ,EAAWzO,OAAO4jC,UAAUzE,GACjDqF,EAAU9tC,IAAI4b,EAAM6sB,GAAQ3S,GAAUvnB,EAAKC,EAAK,IACpD,IAER,CAMAkhC,iCACI,IAAKxyC,KAAK2N,cAAchO,QACpB,OACJ,MAAM,KAAEmM,EAAI,gBAAEglC,GAAoB9wC,KAAKogB,YACjC,WAAEvF,GAAe7a,KAAK2N,cAC5B,IAAKxD,EAAY2mC,KAAqBj2B,IAAe7a,KAAKkvC,YACtD,OAKJlvC,KAAKyvC,gBAKL,MAAMgD,EAAc,CAAEpiC,EAAG,EAAGC,EAAG,GAC/By8B,IAAUxB,IACN,MAAMqF,EAAY5wC,KAAK8vC,mBAAmBvE,GAC1C,GAAIqF,EAAW,CACX,MAAMx3B,EAASw3B,EAAU7qC,MACzB0sC,EAAYlH,GR7R5B,SAAoBt0B,EAAQjP,GACxB,IAAIwQ,EAAS,GACb,MAAMk6B,EAAepH,GAAWr0B,GAC1B07B,EAAerH,GAAWtjC,GAOhC,OANI2qC,EAAeD,EACfl6B,EAASkgB,GAAS1wB,EAAOqJ,IAAKrJ,EAAOsJ,IAAMohC,EAAcz7B,EAAO5F,KAE3DqhC,EAAeC,IACpBn6B,EAASkgB,GAASzhB,EAAO5F,IAAK4F,EAAO3F,IAAMqhC,EAAc3qC,EAAOqJ,MAE7DD,EAAM,EAAG,EAAGoH,EACvB,CQkRoC,CAAW,CAAEnH,IAAK+H,EAAQ9H,IAAK8H,GAAUpZ,KAAKkvC,YAAY3D,GAClF,KAKJ,MAAM,kBAAEr1B,GAAsBlW,KAAK2N,cAAcyS,WACjDpgB,KAAK2N,cAAchO,QAAQgC,MAAMwP,UAAY+E,EACvCA,EAAkB,CAAC,EAAG,IACtB,OACN2E,EAAWwG,MAAQxG,EAAWwG,KAAKuxB,eACnC/3B,EAAWg4B,eACX7yC,KAAK4vC,qBAKL7C,IAAUxB,IACN,IAAKoF,GAAWpF,EAAMz/B,EAAM,MACxB,OAIJ,MAAM8kC,EAAY5wC,KAAK8vC,mBAAmBvE,IACpC,IAAEl6B,EAAG,IAAEC,GAAQtR,KAAKkvC,YAAY3D,GACtCqF,EAAU9tC,IAAI81B,GAAUvnB,EAAKC,EAAKmhC,EAAYlH,IAAO,GAE7D,CACAuH,eACI,IAAK9yC,KAAK2N,cAAchO,QACpB,OACJkvC,GAAoB/rC,IAAI9C,KAAK2N,cAAe3N,MAC5C,MAIM+yC,EAAsBn0B,GAJZ5e,KAAK2N,cAAchO,QAIkB,eAAgBye,IACjE,MAAM,KAAEtS,EAAI,aAAEyL,GAAe,GAASvX,KAAKogB,WAC3CtU,GAAQyL,GAAgBvX,KAAK4K,MAAMwT,EAAM,IAEvC40B,EAAyB,KAC3B,MAAM,gBAAElC,GAAoB9wC,KAAKogB,WAC7BjW,EAAY2mC,KACZ9wC,KAAKkvC,YAAclvC,KAAKixC,wBAC5B,GAEE,WAAEp2B,GAAe7a,KAAK2N,cACtBslC,EAA4Bp4B,EAAWoD,iBAAiB,UAAW+0B,GACrEn4B,IAAeA,EAAWzO,SAC1ByO,EAAWwG,MAAQxG,EAAWwG,KAAKuxB,eACnC/3B,EAAWg4B,gBAEfG,IAKA,MAAME,EAAqBr1B,GAAYvP,OAAQ,UAAU,IAAMtO,KAAKwyC,mCAK9DW,EAA2Bt4B,EAAWoD,iBAAiB,aAAa,EAAI8U,QAAOqgB,uBAC7EpzC,KAAKgvC,YAAcoE,IACnBrG,IAAUxB,IACN,MAAMnhB,EAAcpqB,KAAK8vC,mBAAmBvE,GACvCnhB,IAELpqB,KAAK2rC,YAAYJ,IAASxY,EAAMwY,GAAMK,UACtCxhB,EAAYtnB,IAAIsnB,EAAYrkB,MAAQgtB,EAAMwY,GAAMK,WAAU,IAE9D5rC,KAAK2N,cAAc5M,SAE1B,IACD,MAAO,KACHmyC,IACAH,IACAE,IACAE,GAA4BA,GAA0B,CAE9D,CACA/yB,WACI,MAAMngB,EAAQD,KAAK2N,cAAcyS,YAC3B,KAAEtU,GAAO,EAAK,kBAAEmkC,GAAoB,EAAK,gBAAEP,GAAkB,EAAK,gBAAEoB,GAAkB,EAAK,YAAEtE,EAAcF,GAAc,aAAE2F,GAAe,GAAUhyC,EAC1J,MAAO,IACAA,EACH6L,OACAmkC,oBACAP,kBACAoB,kBACAtE,cACAyF,eAER,EAEJ,SAAStB,GAAWvQ,EAAWt0B,EAAMmjC,GACjC,SAAkB,IAATnjC,GAAiBA,IAASs0B,GACT,OAArB6O,GAA6BA,IAAqB7O,EAC3D,CCpcA,MAAMiT,GAAgBt1B,GAAY,CAACK,EAAO+B,KAClCpC,GACAA,EAAQK,EAAO+B,EACnB,ECJJ,MAAMmzB,GAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCbpB,SAASC,GAAgBC,EAAQnI,GAC7B,OAAIA,EAAKj6B,MAAQi6B,EAAKl6B,IACX,EACHqiC,GAAUnI,EAAKj6B,IAAMi6B,EAAKl6B,KAAQ,GAC9C,CAQA,MAAMsiC,GAAsB,CACxBC,QAAS,CAACx6B,EAAQ2G,KACd,IAAKA,EAAK/X,OACN,OAAOoR,EAKX,GAAsB,iBAAXA,EAAqB,CAC5B,IAAI3G,GAAG9C,KAAKyJ,GAIR,OAAOA,EAHPA,EAAS3H,WAAW2H,EAK5B,CAOA,MAAO,GAFGq6B,GAAgBr6B,EAAQ2G,EAAK/X,OAAOqI,OACpCojC,GAAgBr6B,EAAQ2G,EAAK/X,OAAOsI,KAC1B,GCjCtBujC,GAAmB,CACrBD,QAAS,CAACx6B,GAAU06B,YAAWC,sBAC3B,MAAMC,EAAW56B,EACX66B,EAAS3mB,GAAQ9b,MAAM4H,GAE7B,GAAI66B,EAAOvuC,OAAS,EAChB,OAAOsuC,EACX,MAAM/Z,EAAW3M,GAAQJ,kBAAkB9T,GACrCX,EAA8B,iBAAdw7B,EAAO,GAAkB,EAAI,EAE7CC,EAASH,EAAgB1jC,EAAEsB,MAAQmiC,EAAUzjC,EAC7C8jC,EAASJ,EAAgBzjC,EAAEqB,MAAQmiC,EAAUxjC,EACnD2jC,EAAO,EAAIx7B,IAAWy7B,EACtBD,EAAO,EAAIx7B,IAAW07B,EAOtB,MAAMC,EAAexb,GAAUsb,EAAQC,EAAQ,IAO/C,MALkC,iBAAvBF,EAAO,EAAIx7B,KAClBw7B,EAAO,EAAIx7B,IAAW27B,GAEQ,iBAAvBH,EAAO,EAAIx7B,KAClBw7B,EAAO,EAAIx7B,IAAW27B,GACnBna,EAASga,EAAO,GCnB/B,MAAMI,WAAiC,YAMnCC,oBACI,MAAM,cAAE3mC,EAAa,YAAE4mC,EAAW,kBAAEC,EAAiB,SAAEjnC,GAAavN,KAAKC,OACnE,WAAE4a,GAAelN,EhJlB/B,IAA2B8mC,IgJmBDC,GhJlBtBtqC,OAAO+M,OAAOvH,EAAiB6kC,GgJmBvB55B,IACI05B,EAAYI,OACZJ,EAAYI,MAAMpqB,IAAI1P,GACtB25B,GAAqBA,EAAkBvxC,UAAYsK,GACnDinC,EAAkBvxC,SAAS4X,GAE/BA,EAAWwG,KAAKuzB,YAChB/5B,EAAWoD,iBAAiB,qBAAqB,KAC7Cje,KAAK60C,cAAc,IAEvBh6B,EAAWi6B,WAAW,IACfj6B,EAAW5E,QACd5T,eAAgB,IAAMrC,KAAK60C,kBAGnCvB,GAAsBE,gBAAiB,CAC3C,CACA3zC,wBAAwBC,GACpB,MAAM,iBAAEi1C,EAAgB,cAAEpnC,EAAa,KAAE7B,EAAI,UAAE3L,GAAcH,KAAKC,MAC5D4a,EAAalN,EAAckN,WACjC,OAAKA,GASLA,EAAW1a,UAAYA,EACnB2L,GACAhM,EAAUi1C,mBAAqBA,QACV5xC,IAArB4xC,EACAl6B,EAAWm6B,aAGXh1C,KAAK60C,eAEL/0C,EAAUK,YAAcA,IACpBA,EACA0a,EAAWo6B,UAELp6B,EAAWq6B,YAMjB,MAAM7wC,YAAW,KACb,MAAM8wC,EAAQt6B,EAAWu6B,WACpBD,GAAUA,EAAME,QAAQ3vC,QACzB1F,KAAK60C,cACT,KAIL,MAnCI,IAoCf,CACA/zC,qBACI,MAAM,WAAE+Z,GAAe7a,KAAKC,MAAM0N,cAC9BkN,IACAA,EAAWwG,KAAKuzB,YAChB7qC,EAAU1F,YAAW,MACZwW,EAAWy6B,kBAAoBz6B,EAAW06B,UAC3Cv1C,KAAK60C,cACT,IAGZ,CACAW,uBACI,MAAM,cAAE7nC,EAAa,YAAE4mC,EAAaC,kBAAmBiB,GAAoBz1C,KAAKC,OAC1E,WAAE4a,GAAelN,EACnBkN,IACAA,EAAW66B,4BACPnB,GAAeA,EAAYI,OAC3BJ,EAAYI,MAAMpP,OAAO1qB,GACzB46B,GAAkBA,EAAeE,YACjCF,EAAeE,WAAW96B,GAEtC,CACAg6B,eACI,MAAM,aAAEA,GAAiB70C,KAAKC,MAC9B40C,GAAgBA,GACpB,CACA9zC,SACI,OAAO,IACX,EAEJ,SAASsM,GAAcpN,GACnB,MAAOE,EAAW00C,GCpFtB,WACI,MAAMlyC,GAAU,IAAArB,YAAW,KAC3B,GAAgB,OAAZqB,EACA,MAAO,EAAC,EAAM,MAClB,MAAM,UAAExC,EAAS,eAAEkC,EAAc,SAAEY,GAAaN,EAG1CzB,GAAK,IAAAC,SAGX,OAFA,IAAAkE,YAAU,IAAMpC,EAAS/B,IAAK,KAEtBf,GAAakC,EAAiB,EAAC,EADlB,IAAMA,GAAkBA,EAAenB,IACE,EAAC,EACnE,CDyEsC00C,GAC5BrB,GAAc,IAAAjzC,YAAW0C,EAAA,GAC/B,OAAQ,gBAA6BqwC,GAA0B,IAAKp0C,EAAOs0C,YAAaA,EAAaC,mBAAmB,IAAAlzC,YAAWiL,GAA2BpM,UAAWA,EAAW00C,aAAcA,GACtM,CACA,MAAMH,GAAyB,CAC3BvhC,aAAc,IACPwgC,GACHkC,QAAS,CACL,sBACA,uBACA,yBACA,4BAGRxiC,oBAAqBsgC,GACrBrgC,qBAAsBqgC,GACtBngC,uBAAwBmgC,GACxBpgC,wBAAyBogC,GACzBmC,UAAWjC,IE1HTkC,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQrwC,OACrBuwC,GAAYxyC,GAA2B,iBAAVA,EAAqBgO,WAAWhO,GAASA,EACtEyyC,GAAQzyC,GAA2B,iBAAVA,GAAsBgP,GAAG9C,KAAKlM,GA0C7D,SAAS0yC,GAAUnzC,EAAQozC,GACvB,YAA8BjzC,IAAvBH,EAAOozC,GACRpzC,EAAOozC,GACPpzC,EAAOmQ,YACjB,CAwBA,MAAMkjC,GAAkBC,GAAS,EAAG,GAAKze,IACnC0e,GAAmBD,GAAS,GAAK,IAAMrzB,GAAA,GAC7C,SAASqzB,GAASjlC,EAAKC,EAAKkmB,GACxB,OAAQC,GAEAA,EAAIpmB,EACG,EACPomB,EAAInmB,EACG,EACJkmB,EAAOkB,GAASrnB,EAAKC,EAAKmmB,GAEzC,CCrFA,SAAS+e,GAAajL,EAAMkL,GACxBlL,EAAKl6B,IAAMolC,EAAWplC,IACtBk6B,EAAKj6B,IAAMmlC,EAAWnlC,GAC1B,CAMA,SAASolC,GAAYhJ,EAAKiJ,GACtBH,GAAa9I,EAAIr9B,EAAGsmC,EAAUtmC,GAC9BmmC,GAAa9I,EAAIp9B,EAAGqmC,EAAUrmC,EAClC,CCVA,SAASsmC,GAAiBl4B,EAAOktB,EAAWj6B,EAAOg6B,EAAa4B,GAM5D,OAJA7uB,EAAQ2uB,GADR3uB,GAASktB,EACiB,EAAIj6B,EAAOg6B,QACpBxoC,IAAboqC,IACA7uB,EAAQ2uB,GAAW3uB,EAAO,EAAI6uB,EAAU5B,IAErCjtB,CACX,CAsBA,SAASm4B,GAAqBtL,EAAMyC,GAAa1qC,EAAK2qC,EAAUC,GAAY11B,EAAQs+B,IAlBpF,SAAyBvL,EAAMK,EAAY,EAAGj6B,EAAQ,EAAG6G,EAAS,GAAK+0B,EAAUkJ,EAAalL,EAAMuL,EAAavL,GACzG/4B,GAAQ7C,KAAKi8B,KACbA,EAAYn6B,WAAWm6B,GAEvBA,EADyBhT,GAAUke,EAAWzlC,IAAKylC,EAAWxlC,IAAKs6B,EAAY,KAChDkL,EAAWzlC,KAE9C,GAAyB,iBAAdu6B,EACP,OACJ,IAAID,EAAc/S,GAAU6d,EAAWplC,IAAKolC,EAAWnlC,IAAKkH,GACxD+yB,IAASkL,IACT9K,GAAeC,GACnBL,EAAKl6B,IAAMulC,GAAiBrL,EAAKl6B,IAAKu6B,EAAWj6B,EAAOg6B,EAAa4B,GACrEhC,EAAKj6B,IAAMslC,GAAiBrL,EAAKj6B,IAAKs6B,EAAWj6B,EAAOg6B,EAAa4B,EACzE,CAMIwJ,CAAgBxL,EAAMyC,EAAW1qC,GAAM0qC,EAAWC,GAAWD,EAAWE,GAAYF,EAAWr8B,MAAO6G,EAAQs+B,EAClH,CAIA,MAAM,GAAQ,CAAC,IAAK,SAAU,WACxB,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASE,GAAoBtJ,EAAKM,EAAY2I,EAAWM,GACrDJ,GAAqBnJ,EAAIr9B,EAAG29B,EAAY,GAAO2I,EAAYA,EAAUtmC,OAAIlN,EAAW8zC,EAAYA,EAAU5mC,OAAIlN,GAC9G0zC,GAAqBnJ,EAAIp9B,EAAG09B,EAAY,GAAO2I,EAAYA,EAAUrmC,OAAInN,EAAW8zC,EAAYA,EAAU3mC,OAAInN,EAClH,CCjDA,SAAS+zC,GAAgBnkB,GACrB,OAA2B,IAApBA,EAAM6Y,WAAmC,IAAhB7Y,EAAMphB,KAC1C,CACA,SAASwlC,GAAYpkB,GACjB,OAAOmkB,GAAgBnkB,EAAM1iB,IAAM6mC,GAAgBnkB,EAAMziB,EAC7D,CAOA,SAAS8mC,GAAiBt4B,EAAGC,GACzB,OAAQjN,KAAKC,MAAM+M,EAAEzO,EAAEgB,OAASS,KAAKC,MAAMgN,EAAE1O,EAAEgB,MAC3CS,KAAKC,MAAM+M,EAAEzO,EAAEiB,OAASQ,KAAKC,MAAMgN,EAAE1O,EAAEiB,MACvCQ,KAAKC,MAAM+M,EAAExO,EAAEe,OAASS,KAAKC,MAAMgN,EAAEzO,EAAEe,MACvCS,KAAKC,MAAM+M,EAAExO,EAAEgB,OAASQ,KAAKC,MAAMgN,EAAEzO,EAAEgB,IAC/C,CACA,SAAS+lC,GAAY3J,GACjB,OAAOpC,GAAWoC,EAAIr9B,GAAKi7B,GAAWoC,EAAIp9B,EAC9C,CCpBA,MAAMgnC,GACFx3B,cACI9f,KAAKq1C,QAAU,EACnB,CACA9qB,IAAIxK,GACA6hB,GAAc5hC,KAAKq1C,QAASt1B,GAC5BA,EAAKw3B,gBACT,CACAhS,OAAOxlB,GAKH,GAJA+hB,GAAW9hC,KAAKq1C,QAASt1B,GACrBA,IAAS/f,KAAKw3C,WACdx3C,KAAKw3C,cAAWr0C,GAEhB4c,IAAS/f,KAAKy3C,KAAM,CACpB,MAAMD,EAAWx3C,KAAKq1C,QAAQr1C,KAAKq1C,QAAQ3vC,OAAS,GAChD8xC,GACAx3C,KAAKi1C,QAAQuC,EAErB,CACJ,CACAtC,SAASn1B,GACL,MAAM23B,EAAc13C,KAAKq1C,QAAQsC,WAAWC,GAAW73B,IAAS63B,IAChE,GAAoB,IAAhBF,EACA,OAAO,EAIX,IAAIF,EACJ,IAAK,IAAI7xC,EAAI+xC,EAAa/xC,GAAK,EAAGA,IAAK,CACnC,MAAMiyC,EAAS53C,KAAKq1C,QAAQ1vC,GAC5B,IAAyB,IAArBiyC,EAAOz3C,UAAqB,CAC5Bq3C,EAAWI,EACX,KACJ,CACJ,CACA,QAAIJ,IACAx3C,KAAKi1C,QAAQuC,IACN,EAKf,CACAvC,QAAQl1B,EAAM83B,GACV,MAAML,EAAWx3C,KAAKy3C,KACtB,GAAI13B,IAASy3B,IAEbx3C,KAAKw3C,SAAWA,EAChBx3C,KAAKy3C,KAAO13B,EACZA,EAAK+3B,OACDN,GAAU,CACVA,EAAS1oC,UAAY0oC,EAASD,iBAC9Bx3B,EAAKw3B,iBACLx3B,EAAKg4B,WAAaP,EACdK,IACA93B,EAAKg4B,WAAWC,iBAAkB,GAElCR,EAASS,WACTl4B,EAAKk4B,SAAWT,EAASS,SACzBl4B,EAAKk4B,SAASjiC,aACVwhC,EAASU,iBAAmBV,EAASxhC,cAEzC+J,EAAKsB,MAAQtB,EAAKsB,KAAK82B,aACvBp4B,EAAKq4B,eAAgB,GAEzB,MAAM,UAAEC,GAAct4B,EAAK9J,SACT,IAAdoiC,GACAb,EAASc,MAcjB,CACJ,CACAC,wBACIv4C,KAAKq1C,QAAQjyC,SAAS2c,IAClB,MAAM,QAAE9J,EAAO,aAAEuiC,GAAiBz4B,EAClC9J,EAAQ5T,gBAAkB4T,EAAQ5T,iBAC9Bm2C,GACAA,EAAaviC,QAAQ5T,gBACjBm2C,EAAaviC,QAAQ5T,gBAC7B,GAER,CACAk1C,iBACIv3C,KAAKq1C,QAAQjyC,SAAS2c,IAClBA,EAAKjR,UAAYiR,EAAKw3B,gBAAe,EAAM,GAEnD,CAKAkB,qBACQz4C,KAAKy3C,MAAQz3C,KAAKy3C,KAAKQ,WACvBj4C,KAAKy3C,KAAKQ,cAAW90C,EAE7B,EC5GJ,SAASu1C,GAAyB3lB,EAAO+gB,EAAW6E,GAChD,IAAIxnC,EAAY,GAOhB,MAAMynC,EAAa7lB,EAAM1iB,EAAEu7B,UAAYkI,EAAUzjC,EAC3CwoC,EAAa9lB,EAAMziB,EAAEs7B,UAAYkI,EAAUxjC,EAWjD,IAVIsoC,GAAcC,KACd1nC,EAAY,eAAeynC,QAAiBC,YAM5B,IAAhB/E,EAAUzjC,GAA2B,IAAhByjC,EAAUxjC,IAC/Ba,GAAa,SAAS,EAAI2iC,EAAUzjC,MAAM,EAAIyjC,EAAUxjC,OAExDqoC,EAAiB,CACjB,MAAM,OAAEpkC,EAAM,QAAEC,EAAO,QAAEC,GAAYkkC,EACjCpkC,IACApD,GAAa,UAAUoD,UACvBC,IACArD,GAAa,WAAWqD,UACxBC,IACAtD,GAAa,WAAWsD,SAChC,CAKA,MAAMqkC,EAAgB/lB,EAAM1iB,EAAEsB,MAAQmiC,EAAUzjC,EAC1C0oC,EAAgBhmB,EAAMziB,EAAEqB,MAAQmiC,EAAUxjC,EAIhD,OAHsB,IAAlBwoC,GAAyC,IAAlBC,IACvB5nC,GAAa,SAAS2nC,MAAkBC,MAErC5nC,GAAa,MACxB,CCvCA,MAAM6nC,GAAiB,CAACl6B,EAAGC,IAAMD,EAAE0I,MAAQzI,EAAEyI,MCG7C,MAAMyxB,GACFn5B,cACI9f,KAAKgB,SAAW,GAChBhB,KAAKk5C,SAAU,CACnB,CACA3uB,IAAI3mB,GACAg+B,GAAc5hC,KAAKgB,SAAU4C,GAC7B5D,KAAKk5C,SAAU,CACnB,CACA3T,OAAO3hC,GACHk+B,GAAW9hC,KAAKgB,SAAU4C,GAC1B5D,KAAKk5C,SAAU,CACnB,CACA91C,QAAQ8B,GACJlF,KAAKk5C,SAAWl5C,KAAKgB,SAASilC,KAAK+S,IACnCh5C,KAAKk5C,SAAU,EACfl5C,KAAKgB,SAASoC,QAAQ8B,EAC1B,ECQJ,MAAMi0C,GAAgB,CAAC,GAAI,IAAK,IAAK,KAC/BC,GAAmB,CAAEC,WAAY,UAMvC,IAAI,GAAK,EAKT,MAAMC,GAAsB,CACxB3xC,KAAM,kBACN4xC,WAAY,EACZC,qBAAsB,EACtBC,uBAAwB,GAE5B,SAASC,IAAqB,qBAAEC,EAAoB,cAAEC,EAAa,cAAEC,EAAa,kBAAEC,EAAiB,eAAEC,IACnG,OAAO,MACHj6B,YAAY9J,EAAe,CAAC,EAAGpI,GAASgsC,aAAqD,EAASA,MAIlG55C,KAAKkB,GAAK,KAIVlB,KAAKg6C,YAAc,EAOnBh6C,KAAKgB,SAAW,IAAI+O,IAKpB/P,KAAKiW,QAAU,CAAC,EAMhBjW,KAAKi6C,iBAAkB,EACvBj6C,KAAK6vC,oBAAqB,EAO1B7vC,KAAKo4C,eAAgB,EAKrBp4C,KAAKk6C,mBAAoB,EAKzBl6C,KAAKm6C,yBAA0B,EAK/Bn6C,KAAKo6C,kBAAmB,EAIxBp6C,KAAKq6C,uBAAwB,EAC7Br6C,KAAKs6C,uBAAwB,EAK7Bt6C,KAAKm4C,YAAa,EAIlBn4C,KAAKu6C,OAAQ,EAKbv6C,KAAKw6C,YAAa,EAIlBx6C,KAAKy6C,sBAAuB,EAS5Bz6C,KAAK8zC,UAAY,CAAEzjC,EAAG,EAAGC,EAAG,GAI5BtQ,KAAK06C,cAAgB,IAAIh3C,IACzB1D,KAAK26C,iBAAkB,EAEvB36C,KAAK46C,iBAAkB,EACvB56C,KAAK66C,2BAA4B,EACjC76C,KAAK86C,kBAAoB,KACjB96C,KAAKm4C,aACLn4C,KAAKm4C,YAAa,EAClBn4C,KAAK+6C,oBACT,EAOJ/6C,KAAKg7C,iBAAmB,KCrJpC,IAAgBC,EDsJAj7C,KAAK66C,2BAA4B,EAKjCvB,GAAoBC,WAChBD,GAAoBE,qBAChBF,GAAoBG,uBAChB,EACZz5C,KAAKk7C,MAAM93C,QAAQ+3C,IACnBn7C,KAAKk7C,MAAM93C,QAAQg4C,IACnBp7C,KAAKk7C,MAAM93C,QAAQi4C,IACnBr7C,KAAKk7C,MAAM93C,QAAQk4C,IClKnBL,EDmKO3B,GClKfhrC,OAAOitC,aACPjtC,OAAOitC,YAAYC,OAAOP,EDiKS,EAE/Bj7C,KAAKy7C,cAAe,EACpBz7C,KAAK07C,WAAY,EACjB17C,KAAK27C,kBAAoB,EAKzB37C,KAAK47C,YAAc,IAAIl4C,IACvB1D,KAAKgW,aAAeA,EACpBhW,KAAKqhB,KAAOzT,EAASA,EAAOyT,MAAQzT,EAAS5N,KAC7CA,KAAK67C,KAAOjuC,EAAS,IAAIA,EAAOiuC,KAAMjuC,GAAU,GAChD5N,KAAK4N,OAASA,EACd5N,KAAKwnB,MAAQ5Z,EAASA,EAAO4Z,MAAQ,EAAI,EACzC,IAAK,IAAI7hB,EAAI,EAAGA,EAAI3F,KAAK67C,KAAKn2C,OAAQC,IAClC3F,KAAK67C,KAAKl2C,GAAG80C,sBAAuB,EAEpCz6C,KAAKqhB,OAASrhB,OACdA,KAAKk7C,MAAQ,IAAIjC,GACzB,CACAh7B,iBAAiB5V,EAAM0V,GAInB,OAHK/d,KAAK06C,cAAc70C,IAAIwC,IACxBrI,KAAK06C,cAAc53C,IAAIuF,EAAM,IAAI25B,IAE9BhiC,KAAK06C,cAAc30C,IAAIsC,GAAMkiB,IAAIxM,EAC5C,CACA+9B,gBAAgBzzC,KAAS0zC,GACrB,MAAMC,EAAsBh8C,KAAK06C,cAAc30C,IAAIsC,GACnD2zC,GAAuBA,EAAoB9Z,UAAU6Z,EACzD,CACAE,aAAa5zC,GACT,OAAOrI,KAAK06C,cAAc70C,IAAIwC,EAClC,CAIA0G,MAAMD,EAAUspC,EAAgBp4C,KAAKqhB,KAAKs5B,iBACtC,GAAI36C,KAAK8O,SACL,OE1MhB,IAAsB/O,EF2MVC,KAAKu6C,OE3MKx6C,EF2MgB+O,aE1MRotC,YAAkC,QAApBn8C,EAAQ4d,QF2MxC3d,KAAK8O,SAAWA,EAChB,MAAM,SAAEvB,EAAQ,OAAEnB,EAAM,cAAEuB,GAAkB3N,KAAKiW,QASjD,GARItI,IAAkBA,EAAchO,SAChCgO,EAAcoB,MAAMD,GAExB9O,KAAKqhB,KAAK65B,MAAM3wB,IAAIvqB,MACpBA,KAAK4N,QAAU5N,KAAK4N,OAAO5M,SAASupB,IAAIvqB,MACpCo4C,IAAkBhsC,GAAUmB,KAC5BvN,KAAKo4C,eAAgB,GAErBuB,EAAsB,CACtB,IAAIwC,EACJ,MAAMC,EAAsB,IAAOp8C,KAAKqhB,KAAKi5B,uBAAwB,EACrEX,EAAqB7qC,GAAU,KAC3B9O,KAAKqhB,KAAKi5B,uBAAwB,EAClC6B,GAAeA,IACfA,EGtNpB,SAAej3C,EAAUm3C,GACrB,MAAMzxC,EAAQic,GAAKF,MACb21B,EAAe,EAAGr1B,gBACpB,MAAMmX,EAAUnX,EAAYrc,EACxBwzB,GAAWie,KACX,SAAYC,GACZp3C,EAASk5B,EAAUie,GACvB,EAGJ,OADA,MAAM9+B,KAAK++B,GAAc,GAClB,KAAM,SAAYA,EAC7B,CH2MkChsB,CAAM8rB,EAAqB,KACrC9I,GAAsBC,yBACtBD,GAAsBC,wBAAyB,EAC/CvzC,KAAKk7C,MAAM93C,QAAQm5C,IACvB,GAER,CACIhvC,GACAvN,KAAKqhB,KAAKm7B,mBAAmBjvC,EAAUvN,OAGd,IAAzBA,KAAKiW,QAAQjL,SACb2C,IACCJ,GAAYnB,IACbpM,KAAKie,iBAAiB,aAAa,EAAG8U,QAAOqgB,mBAAkBqJ,2BAA0BrwC,OAAQswC,MAC7F,GAAI18C,KAAK28C,yBAGL,OAFA38C,KAAKgI,YAAS7E,OACdnD,KAAK48C,oBAAiBz5C,GAI1B,MAAM05C,EAAmB78C,KAAKiW,QAAQmH,YAClCzP,EAAcqY,wBACd82B,IACE,uBAAEC,EAAsB,0BAAEC,GAA+BrvC,EAAcyS,WAKvE68B,GAAiBj9C,KAAKk9C,eACvB9F,GAAiBp3C,KAAKk9C,aAAcR,IACrCD,EAMEU,GAAgC/J,GAAoBqJ,EAC1D,GAAIz8C,KAAKiW,QAAQmnC,YACZp9C,KAAK+3C,YAAc/3C,KAAK+3C,WAAWjpC,UACpCquC,GACC/J,IACI6J,IAAkBj9C,KAAKs1C,kBAAoB,CAC5Ct1C,KAAK+3C,aACL/3C,KAAKw4C,aAAex4C,KAAK+3C,WACzB/3C,KAAKw4C,aAAaA,kBAAer1C,GAErCnD,KAAKq9C,mBAAmBtqB,EAAOoqB,GAC/B,MAAMG,EAAmB,IAClBl3B,GAAmBy2B,EAAkB,UACxC/d,OAAQie,EACR5yB,WAAY6yB,IAEZrvC,EAAc23B,oBACdtlC,KAAKiW,QAAQmnC,cACbE,EAAiBhtB,MAAQ,EACzBgtB,EAAiB31C,MAAO,GAE5B3H,KAAK+jC,eAAeuZ,EACxB,MAOSlK,GACDmJ,GAAgBv8C,MAEhBA,KAAKu1C,UAAYv1C,KAAKiW,QAAQ5T,gBAC9BrC,KAAKiW,QAAQ5T,iBAGrBrC,KAAKk9C,aAAeR,CAAS,GAGzC,CACA1tC,UACIhP,KAAKiW,QAAQ1I,UAAYvN,KAAKg1C,aAC9Bh1C,KAAKqhB,KAAK65B,MAAM3V,OAAOvlC,MACvB,MAAMm1C,EAAQn1C,KAAKo1C,WACnBD,GAASA,EAAM5P,OAAOvlC,MACtBA,KAAK4N,QAAU5N,KAAK4N,OAAO5M,SAASkC,OAAOlD,MAC3CA,KAAK8O,cAAW3L,GAChB,SAAYnD,KAAKg7C,iBACrB,CAEAuC,cACIv9C,KAAKq6C,uBAAwB,CACjC,CACAmD,gBACIx9C,KAAKq6C,uBAAwB,CACjC,CACAoD,kBACI,OAAOz9C,KAAKq6C,uBAAyBr6C,KAAKs6C,qBAC9C,CACAqC,yBACI,OAAQ38C,KAAK6vC,oBACR7vC,KAAK4N,QAAU5N,KAAK4N,OAAO+uC,2BAC5B,CACR,CAEAe,cACQ19C,KAAKy9C,oBAETz9C,KAAKm4C,YAAa,EAClBn4C,KAAKk7C,OAASl7C,KAAKk7C,MAAM93C,QAAQu6C,IACjC39C,KAAKg6C,cACT,CACA4D,uBACI,MAAM,cAAEjwC,GAAkB3N,KAAKiW,QAC/B,OAAOtI,GAAiBA,EAAcyS,WAAWlK,iBACrD,CACA8+B,WAAW6I,GAAwB,GAE/B,GADA79C,KAAKqhB,KAAKs5B,iBAAkB,EACxB36C,KAAKqhB,KAAKo8B,kBAEV,YADAz9C,KAAKiW,QAAQ5T,gBAAkBrC,KAAKiW,QAAQ5T,kBAIhD,IADCrC,KAAKqhB,KAAK82B,YAAcn4C,KAAKqhB,KAAKq8B,cAC/B19C,KAAKo4C,cACL,OACJp4C,KAAKo4C,eAAgB,EACrB,IAAK,IAAIzyC,EAAI,EAAGA,EAAI3F,KAAK67C,KAAKn2C,OAAQC,IAAK,CACvC,MAAMoa,EAAO/f,KAAK67C,KAAKl2C,GACvBoa,EAAK06B,sBAAuB,EAC5B16B,EAAK6yB,aAAa,YACd7yB,EAAK9J,QAAQmnC,YACbr9B,EAAKi1B,YAAW,EAExB,CACA,MAAM,SAAEznC,EAAQ,OAAEnB,GAAWpM,KAAKiW,QAClC,QAAiB9S,IAAboK,IAA2BnB,EAC3B,OACJ,MAAM8J,EAAoBlW,KAAK49C,uBAC/B59C,KAAK89C,2BAA6B5nC,EAC5BA,EAAkBlW,KAAKgW,aAAc,SACrC7S,EACNnD,KAAK+9C,iBACLF,GAAyB79C,KAAK87C,gBAAgB,aAClD,CACA1tC,SACIpO,KAAK46C,iBAAkB,EAKvB,GAJyB56C,KAAKy9C,kBAQ1B,OAHAz9C,KAAKw9C,gBACLx9C,KAAK+6C,yBACL/6C,KAAKk7C,MAAM93C,QAAQ46C,IAGlBh+C,KAAKm4C,YACNn4C,KAAKk7C,MAAM93C,QAAQ66C,IAEvBj+C,KAAKm4C,YAAa,EAId7pC,OAAO4vC,4BACP5vC,OAAO4vC,6BAEXl+C,KAAKk7C,MAAM93C,QAAQ+6C,IAKnBn+C,KAAKk7C,MAAM93C,QAAQyvC,IAKnB7yC,KAAKk7C,MAAM93C,QAAQg7C,IACnBp+C,KAAK+6C,oBAML,MAAMp0B,EAAME,GAAKF,MACjB,GAAAG,UAAUiM,MAAQ3hB,EAAM,EAAG,IAAO,GAAIuV,EAAM,GAAAG,UAAUG,WACtD,GAAAH,UAAUG,UAAYN,EACtB,GAAAG,UAAUC,cAAe,EACzB,MAAM3Y,OAAOiwC,QAAQ,GAAAv3B,WACrB,MAAMw3B,UAAUD,QAAQ,GAAAv3B,WACxB,MAAM/lB,OAAOs9C,QAAQ,GAAAv3B,WACrB,GAAAA,UAAUC,cAAe,CAC7B,CACA6tB,YACS50C,KAAK46C,kBACN56C,KAAK46C,iBAAkB,EACvB7wC,EAAUwT,MAAK,IAAMvd,KAAKoO,WAElC,CACA2sC,oBACI/6C,KAAKk7C,MAAM93C,QAAQm7C,IACnBv+C,KAAK47C,YAAYx4C,QAAQo7C,GAC7B,CACAC,2BACSz+C,KAAK66C,4BACN76C,KAAK66C,2BAA4B,EACjC,MAAMyD,UAAUt+C,KAAKg7C,kBAAkB,GAAO,GAEtD,CACAtF,4BAMI,MAAMrxC,YAAW,KACTrE,KAAKo4C,cACLp4C,KAAKqhB,KAAKuzB,YAGV50C,KAAKqhB,KAAKy5B,mBACd,GAER,CAIAiD,kBACQ/9C,KAAKi4C,UAAaj4C,KAAK8O,WAE3B9O,KAAKi4C,SAAWj4C,KAAK+wC,UACzB,CACA8B,eACI,IAAK7yC,KAAK8O,SACN,OAGJ,GADA9O,KAAK4yC,iBACC5yC,KAAKiW,QAAQyoC,qBAAuB1+C,KAAKu1C,UAC1Cv1C,KAAKo4C,eACN,OASJ,GAAIp4C,KAAK+3C,aAAe/3C,KAAK+3C,WAAWjpC,SACpC,IAAK,IAAInJ,EAAI,EAAGA,EAAI3F,KAAK67C,KAAKn2C,OAAQC,IAAK,CAC1B3F,KAAK67C,KAAKl2C,GAClBitC,cACT,CAEJ,MAAM+L,EAAa3+C,KAAKoM,OACxBpM,KAAKoM,OAASpM,KAAK+wC,SAAQ,GAC3B/wC,KAAK4+C,gBAAkB9R,KACvB9sC,KAAKo4C,eAAgB,EACrBp4C,KAAK+zC,qBAAkB5wC,EACvBnD,KAAK87C,gBAAgB,UAAW97C,KAAKoM,OAAO4jC,WAC5C,MAAM,cAAEriC,GAAkB3N,KAAKiW,QAC/BtI,GACIA,EAAcu0B,OAAO,gBAAiBliC,KAAKoM,OAAO4jC,UAAW2O,EAAaA,EAAW3O,eAAY7sC,EACzG,CACAyvC,aAAaiM,EAAQ,WACjB,IAAIr1B,EAAmBre,QAAQnL,KAAKiW,QAAQ6oC,cAAgB9+C,KAAK8O,UAC7D9O,KAAK2xC,QACL3xC,KAAK2xC,OAAOqI,cAAgBh6C,KAAKqhB,KAAK24B,aACtCh6C,KAAK2xC,OAAOkN,QAAUA,IACtBr1B,GAAmB,GAEnBA,IACAxpB,KAAK2xC,OAAS,CACVqI,YAAah6C,KAAKqhB,KAAK24B,YACvB6E,QACAE,OAAQjF,EAAkB95C,KAAK8O,UAC/B2J,OAAQohC,EAAc75C,KAAK8O,WAGvC,CACAirC,iBACI,IAAKA,EACD,OACJ,MAAMiF,EAAmBh/C,KAAKo4C,eAAiBp4C,KAAKy6C,qBAC9CwE,EAAgBj/C,KAAK+zC,kBAAoBoD,GAAYn3C,KAAK+zC,iBAC1D79B,EAAoBlW,KAAK49C,uBACzBsB,EAAyBhpC,EACzBA,EAAkBlW,KAAKgW,aAAc,SACrC7S,EACAg8C,EAA8BD,IAA2Bl/C,KAAK89C,2BAChEkB,IACCC,GACG5oC,GAAarW,KAAKgW,eAClBmpC,KACJpF,EAAe/5C,KAAK8O,SAAUowC,GAC9Bl/C,KAAKy6C,sBAAuB,EAC5Bz6C,KAAKu3C,iBAEb,CACAxG,QAAQqO,GAAkB,GACtB,MAAMC,EAAUr/C,KAAK4xC,iBACrB,IAAI5B,EAAYhwC,KAAKs/C,oBAAoBD,GA+8BrD,IAAkB3R,EAr8BN,OAJI0R,IACApP,EAAYhwC,KAAKo/C,gBAAgBpP,IAy8B7CuP,IADc7R,EAt8BGsC,GAu8BH3/B,GACdkvC,GAAU7R,EAAIp9B,GAv8BC,CACH0pC,YAAah6C,KAAKqhB,KAAK24B,YACvBwF,YAAaH,EACbrP,YACAh6B,aAAc,CAAC,EACfiB,OAAQjX,KAAKkB,GAErB,CACA0wC,iBACI,MAAM,cAAEjkC,GAAkB3N,KAAKiW,QAC/B,IAAKtI,EACD,OAAOm/B,KACX,MAAMY,EAAM//B,EAAcoiB,sBAEpB,OAAE4hB,GAAW3xC,KAAKqhB,KAKxB,OAJIswB,IACA7D,GAAcJ,EAAIr9B,EAAGshC,EAAOl5B,OAAOpI,GACnCy9B,GAAcJ,EAAIp9B,EAAGqhC,EAAOl5B,OAAOnI,IAEhCo9B,CACX,CACA4R,oBAAoB5R,GAChB,MAAM+R,EAAmB3S,KACzB4J,GAAY+I,EAAkB/R,GAK9B,IAAK,IAAI/nC,EAAI,EAAGA,EAAI3F,KAAK67C,KAAKn2C,OAAQC,IAAK,CACvC,MAAMoa,EAAO/f,KAAK67C,KAAKl2C,IACjB,OAAEgsC,EAAM,QAAE17B,GAAY8J,EAC5B,GAAIA,IAAS/f,KAAKqhB,MAAQswB,GAAU17B,EAAQ6oC,aAAc,CAKtD,GAAInN,EAAOoN,OAAQ,CACfrI,GAAY+I,EAAkB/R,GAC9B,MAAQiE,OAAQ+N,GAAe1/C,KAAKqhB,KAKhCq+B,IACA5R,GAAc2R,EAAiBpvC,GAAIqvC,EAAWjnC,OAAOpI,GACrDy9B,GAAc2R,EAAiBnvC,GAAIovC,EAAWjnC,OAAOnI,GAE7D,CACAw9B,GAAc2R,EAAiBpvC,EAAGshC,EAAOl5B,OAAOpI,GAChDy9B,GAAc2R,EAAiBnvC,EAAGqhC,EAAOl5B,OAAOnI,EACpD,CACJ,CACA,OAAOmvC,CACX,CACAE,eAAejS,EAAKkS,GAAgB,GAChC,MAAMC,EAAiB/S,KACvB4J,GAAYmJ,EAAgBnS,GAC5B,IAAK,IAAI/nC,EAAI,EAAGA,EAAI3F,KAAK67C,KAAKn2C,OAAQC,IAAK,CACvC,MAAMoa,EAAO/f,KAAK67C,KAAKl2C,IAClBi6C,GACD7/B,EAAK9J,QAAQ6oC,cACb/+B,EAAK4xB,QACL5xB,IAASA,EAAKsB,MACditB,GAAauR,EAAgB,CACzBxvC,GAAI0P,EAAK4xB,OAAOl5B,OAAOpI,EACvBC,GAAIyP,EAAK4xB,OAAOl5B,OAAOnI,IAG1B+F,GAAa0J,EAAK/J,eAEvBs4B,GAAauR,EAAgB9/B,EAAK/J,aACtC,CAIA,OAHIK,GAAarW,KAAKgW,eAClBs4B,GAAauR,EAAgB7/C,KAAKgW,cAE/B6pC,CACX,CACAT,gBAAgB1R,GACZ,MAAMoS,EAAsBhT,KAC5B4J,GAAYoJ,EAAqBpS,GACjC,IAAK,IAAI/nC,EAAI,EAAGA,EAAI3F,KAAK67C,KAAKn2C,OAAQC,IAAK,CACvC,MAAMoa,EAAO/f,KAAK67C,KAAKl2C,GACvB,IAAKoa,EAAKjR,SACN,SACJ,IAAKuH,GAAa0J,EAAK/J,cACnB,SACJk3B,GAASntB,EAAK/J,eAAiB+J,EAAKg+B,iBACpC,MAAM9G,EAAYnK,KAElB4J,GAAYO,EADIl3B,EAAK6xB,kBAErBoF,GAAoB8I,EAAqB//B,EAAK/J,aAAc+J,EAAKk4B,SAAWl4B,EAAKk4B,SAASjI,eAAY7sC,EAAW8zC,EACrH,CAIA,OAHI5gC,GAAarW,KAAKgW,eAClBghC,GAAoB8I,EAAqB9/C,KAAKgW,cAE3C8pC,CACX,CACAC,eAAehtB,GACX/yB,KAAKggD,YAAcjtB,EACnB/yB,KAAKqhB,KAAKo9B,2BACVz+C,KAAKk6C,mBAAoB,CAC7B,CACApF,WAAW7+B,GACPjW,KAAKiW,QAAU,IACRjW,KAAKiW,WACLA,EACHoiC,eAAiCl1C,IAAtB8S,EAAQoiC,WAA0BpiC,EAAQoiC,UAE7D,CACA2F,oBACIh+C,KAAK2xC,YAASxuC,EACdnD,KAAKoM,YAASjJ,EACdnD,KAAKi4C,cAAW90C,EAChBnD,KAAK89C,gCAA6B36C,EAClCnD,KAAKggD,iBAAc78C,EACnBnD,KAAKgI,YAAS7E,EACdnD,KAAKo4C,eAAgB,CACzB,CACA6H,qCACSjgD,KAAKkgD,gBAQNlgD,KAAKkgD,eAAeC,2BACpB,GAAAr5B,UAAUG,WACVjnB,KAAKkgD,eAAe9E,oBAAmB,EAE/C,CACAA,mBAAmBgF,GAAqB,GACpC,IAAI9nC,EAMJ,MAAMm/B,EAAOz3C,KAAKqgD,UAClBrgD,KAAKk6C,oBAAsBl6C,KAAKk6C,kBAAoBzC,EAAKyC,mBACzDl6C,KAAKo6C,mBAAqBp6C,KAAKo6C,iBAAmB3C,EAAK2C,kBACvDp6C,KAAKm6C,0BAA4Bn6C,KAAKm6C,wBAA0B1C,EAAK0C,yBACrE,MAAMmG,EAAWn1C,QAAQnL,KAAKw4C,eAAiBx4C,OAASy3C,EAUxD,KALkB2I,GACbE,GAAYtgD,KAAKm6C,yBAClBn6C,KAAKk6C,oBACmB,QAAtB5hC,EAAKtY,KAAK4N,cAA2B,IAAP0K,OAAgB,EAASA,EAAG4hC,oBAC5Dl6C,KAAKugD,gCAEL,OACJ,MAAM,OAAEn0C,EAAM,SAAEmB,GAAavN,KAAKiW,QAIlC,GAAKjW,KAAKoM,SAAYA,GAAUmB,GAAhC,CAQA,GANAvN,KAAKmgD,yBAA2B,GAAAr5B,UAAUG,WAMrCjnB,KAAKggD,cAAgBhgD,KAAK48C,eAAgB,CAC3C,MAAMsD,EAAiBlgD,KAAKwgD,6BACxBN,GACAA,EAAe9zC,QACY,IAA3BpM,KAAK27C,mBACL37C,KAAKkgD,eAAiBA,EACtBlgD,KAAKigD,qCACLjgD,KAAK48C,eAAiB9P,KACtB9sC,KAAKygD,qBAAuB3T,KAC5Bb,GAAqBjsC,KAAKygD,qBAAsBzgD,KAAKoM,OAAO4jC,UAAWkQ,EAAe9zC,OAAO4jC,WAC7F0G,GAAY12C,KAAK48C,eAAgB58C,KAAKygD,uBAGtCzgD,KAAKkgD,eAAiBlgD,KAAK48C,oBAAiBz5C,CAEpD,CAKA,GAAKnD,KAAK48C,gBAAmB58C,KAAKggD,YAAlC,CxB/qBZ,IAAyBh4C,EAAQ+jC,EAAUn+B,EwBwtB/B,GApCK5N,KAAKgI,SACNhI,KAAKgI,OAAS8kC,KACd9sC,KAAK0gD,qBAAuB5T,MAK5B9sC,KAAK48C,gBACL58C,KAAKygD,sBACLzgD,KAAKkgD,gBACLlgD,KAAKkgD,eAAel4C,QACpBhI,KAAKigD,qCxB/rBIj4C,EwBgsBOhI,KAAKgI,OxBhsBJ+jC,EwBgsBY/rC,KAAK48C,exBhsBPhvC,EwBgsBuB5N,KAAKkgD,eAAel4C,OxB/rBlF8jC,GAAiB9jC,EAAOqI,EAAG07B,EAAS17B,EAAGzC,EAAOyC,GAC9Cy7B,GAAiB9jC,EAAOsI,EAAGy7B,EAASz7B,EAAG1C,EAAO0C,IwBmsB7BtQ,KAAKggD,aACN70C,QAAQnL,KAAKw4C,cAEbx4C,KAAKgI,OAAShI,KAAK2/C,eAAe3/C,KAAKoM,OAAO4jC,WAG9C0G,GAAY12C,KAAKgI,OAAQhI,KAAKoM,OAAO4jC,WAEzCvC,GAAcztC,KAAKgI,OAAQhI,KAAKggD,cAMhCtJ,GAAY12C,KAAKgI,OAAQhI,KAAKoM,OAAO4jC,WAKrChwC,KAAKugD,+BAAgC,CACrCvgD,KAAKugD,gCAAiC,EACtC,MAAML,EAAiBlgD,KAAKwgD,6BACxBN,GACA/0C,QAAQ+0C,EAAe1H,gBACnBrtC,QAAQnL,KAAKw4C,gBAChB0H,EAAejqC,QAAQ6oC,cACxBoB,EAAel4C,QACY,IAA3BhI,KAAK27C,mBACL37C,KAAKkgD,eAAiBA,EACtBlgD,KAAKigD,qCACLjgD,KAAK48C,eAAiB9P,KACtB9sC,KAAKygD,qBAAuB3T,KAC5Bb,GAAqBjsC,KAAKygD,qBAAsBzgD,KAAKgI,OAAQk4C,EAAel4C,QAC5E0uC,GAAY12C,KAAK48C,eAAgB58C,KAAKygD,uBAGtCzgD,KAAKkgD,eAAiBlgD,KAAK48C,oBAAiBz5C,CAEpD,CAIAm2C,GAAoBE,sBA/DV,CA5BA,CA4Fd,CACAgH,6BACI,GAAKxgD,KAAK4N,SACNs/B,GAASltC,KAAK4N,OAAOoI,gBACrBm3B,GAAentC,KAAK4N,OAAOoI,cAG/B,OAAIhW,KAAK4N,OAAO+yC,eACL3gD,KAAK4N,OAGL5N,KAAK4N,OAAO4yC,4BAE3B,CACAG,eACI,OAAOx1C,SAASnL,KAAK48C,gBACjB58C,KAAKggD,aACLhgD,KAAKiW,QAAQmnC,aACbp9C,KAAKoM,OACb,CACAivC,iBACI,IAAI/iC,EACJ,MAAMm/B,EAAOz3C,KAAKqgD,UACZC,EAAWn1C,QAAQnL,KAAKw4C,eAAiBx4C,OAASy3C,EACxD,IAAImJ,GAAU,EAuBd,IAlBI5gD,KAAKk6C,oBAA6C,QAAtB5hC,EAAKtY,KAAK4N,cAA2B,IAAP0K,OAAgB,EAASA,EAAG4hC,sBACtF0G,GAAU,GAMVN,IACCtgD,KAAKm6C,yBAA2Bn6C,KAAKo6C,oBACtCwG,GAAU,GAMV5gD,KAAKmgD,2BAA6B,GAAAr5B,UAAUG,YAC5C25B,GAAU,GAEVA,EACA,OACJ,MAAM,OAAEx0C,EAAM,SAAEmB,GAAavN,KAAKiW,QAWlC,GANAjW,KAAKi6C,gBAAkB9uC,QAASnL,KAAK4N,QAAU5N,KAAK4N,OAAOqsC,iBACvDj6C,KAAKs1C,kBACLt1C,KAAK6gD,kBACJ7gD,KAAKi6C,kBACNj6C,KAAKggD,YAAchgD,KAAK48C,oBAAiBz5C,IAExCnD,KAAKoM,SAAYA,IAAUmB,EAC5B,OAKJmpC,GAAY12C,KAAK4+C,gBAAiB5+C,KAAKoM,OAAO4jC,WAI9C,MAAM8Q,EAAiB9gD,KAAK8zC,UAAUzjC,EAChC0wC,EAAiB/gD,KAAK8zC,UAAUxjC,GlB1yBlD,SAAyBo9B,EAAKoG,EAAWkN,EAAUC,GAAqB,GACpE,MAAMC,EAAaF,EAASt7C,OAC5B,IAAKw7C,EACD,OAGJ,IAAInhC,EACAgT,EAFJ+gB,EAAUzjC,EAAIyjC,EAAUxjC,EAAI,EAG5B,IAAK,IAAI3K,EAAI,EAAGA,EAAIu7C,EAAYv7C,IAAK,CACjCoa,EAAOihC,EAASr7C,GAChBotB,EAAQhT,EAAKg0B,gBAKb,MAAMjlC,EAAWiR,EAAKjR,SAClBA,GACAA,EAASnN,OACkB,aAA3BmN,EAASnN,MAAM2G,UAGf24C,GACAlhC,EAAK9J,QAAQ6oC,cACb/+B,EAAK4xB,QACL5xB,IAASA,EAAKsB,MACditB,GAAaZ,EAAK,CACdr9B,GAAI0P,EAAK4xB,OAAOl5B,OAAOpI,EACvBC,GAAIyP,EAAK4xB,OAAOl5B,OAAOnI,IAG3ByiB,IAEA+gB,EAAUzjC,GAAK0iB,EAAM1iB,EAAEsB,MACvBmiC,EAAUxjC,GAAKyiB,EAAMziB,EAAEqB,MAEvB87B,GAAcC,EAAK3a,IAEnBkuB,GAAsB5qC,GAAa0J,EAAK/J,eACxCs4B,GAAaZ,EAAK3tB,EAAK/J,cAE/B,CAKA89B,EAAUzjC,EAAIs9B,GAAcmG,EAAUzjC,GACtCyjC,EAAUxjC,EAAIq9B,GAAcmG,EAAUxjC,EAC1C,CkBgwBY6wC,CAAgBnhD,KAAK4+C,gBAAiB5+C,KAAK8zC,UAAW9zC,KAAK67C,KAAMyE,IAK7D7I,EAAKrrC,QACJqrC,EAAKzvC,QACgB,IAArBhI,KAAK8zC,UAAUzjC,GAAgC,IAArBrQ,KAAK8zC,UAAUxjC,IAC1CmnC,EAAKzvC,OAASyvC,EAAKrrC,OAAO4jC,UAC1ByH,EAAKiJ,qBAAuB5T,MAEhC,MAAM,OAAE9kC,GAAWyvC,EACnB,IAAKzvC,EAWD,YALIhI,KAAKohD,sBACLphD,KAAK+zC,gBAAkBlH,KACvB7sC,KAAKohD,oBAAsB,OAC3BphD,KAAKu3C,mBAIRv3C,KAAK+zC,kBACN/zC,KAAK+zC,gBAAkBlH,KACvB7sC,KAAKqhD,6BAA+BxU,MAExC,MAAMyU,EAA0BthD,KAAKohD,oBAUrCvV,GAAa7rC,KAAK+zC,gBAAiB/zC,KAAK4+C,gBAAiB52C,EAAQhI,KAAKgW,cACtEhW,KAAKohD,oBAAsB1I,GAAyB14C,KAAK+zC,gBAAiB/zC,KAAK8zC,WAC3E9zC,KAAKohD,sBAAwBE,GAC7BthD,KAAK8zC,UAAUzjC,IAAMywC,GACrB9gD,KAAK8zC,UAAUxjC,IAAMywC,IACrB/gD,KAAKy7C,cAAe,EACpBz7C,KAAKu3C,iBACLv3C,KAAK87C,gBAAgB,mBAAoB9zC,IAK7CsxC,GAAoBG,wBACxB,CACAnB,OACIt4C,KAAK07C,WAAY,CAErB,CACA5D,OACI93C,KAAK07C,WAAY,CAErB,CACAnE,eAAegK,GAAY,GAEvB,GADAvhD,KAAKiW,QAAQshC,gBAAkBv3C,KAAKiW,QAAQshC,iBACxCgK,EAAW,CACX,MAAMpM,EAAQn1C,KAAKo1C,WACnBD,GAASA,EAAMoC,gBACnB,CACIv3C,KAAKw4C,eAAiBx4C,KAAKw4C,aAAa1pC,WACxC9O,KAAKw4C,kBAAer1C,EAE5B,CACAk6C,mBAAmBtqB,EAAOoqB,GAA+B,GACrD,MAAMlF,EAAWj4C,KAAKi4C,SAChBuJ,EAAuBvJ,EACvBA,EAASjiC,aACT,CAAC,EACDyrC,EAAc,IAAKzhD,KAAKgW,cACxBgqC,EAAcnT,KACf7sC,KAAKkgD,gBACLlgD,KAAKkgD,eAAejqC,QAAQmnC,aAC7Bp9C,KAAK48C,eAAiB58C,KAAKygD,0BAAuBt9C,GAEtDnD,KAAKugD,gCAAkCpD,EACvC,MAAMuE,EAAiB5U,KAGjB6U,GAFiB1J,EAAWA,EAAShhC,YAAS9T,MAC/BnD,KAAKoM,OAASpM,KAAKoM,OAAO6K,YAAS9T,GAElDgyC,EAAQn1C,KAAKo1C,WACbwM,GAAgBzM,GAASA,EAAME,QAAQ3vC,QAAU,EACjDm8C,EAAyB12C,QAAQw2C,IAClCC,IAC0B,IAA3B5hD,KAAKiW,QAAQoiC,YACZr4C,KAAK67C,KAAK5wC,KAAK62C,KAEpB,IAAIC,EADJ/hD,KAAK27C,kBAAoB,EAEzB37C,KAAKgiD,eAAkB5oC,IACnB,MAAMsf,EAAWtf,EAAS,IL/6B1C,IAAmB0F,EAAGC,EKi7CNqO,EAAQ/mB,EAAMmB,EAAIiwB,EAjgBlBwqB,GAAajC,EAAY3vC,EAAG0iB,EAAM1iB,EAAGqoB,GACrCupB,GAAajC,EAAY1vC,EAAGyiB,EAAMziB,EAAGooB,GACrC14B,KAAK+/C,eAAeC,GAChBhgD,KAAK48C,gBACL58C,KAAKygD,sBACLzgD,KAAKoM,QACLpM,KAAKkgD,gBACLlgD,KAAKkgD,eAAe9zC,SACpB6/B,GAAqByV,EAAgB1hD,KAAKoM,OAAO4jC,UAAWhwC,KAAKkgD,eAAe9zC,OAAO4jC,WAyf3F5iB,EAxfWptB,KAAK48C,eAwfRv2C,EAxfwBrG,KAAKygD,qBAwfvBj5C,EAxf6Ck6C,EAwfzCjqB,EAxfyDiB,EAyfvFwpB,GAAQ90B,EAAO/c,EAAGhK,EAAKgK,EAAG7I,EAAG6I,EAAGonB,GAChCyqB,GAAQ90B,EAAO9c,EAAGjK,EAAKiK,EAAG9I,EAAG8I,EAAGmnB,GArfZsqB,IL97BLjjC,EK+7Be9e,KAAK48C,eL/7BjB79B,EK+7BiCgjC,EL97B3CjjC,EAAEzO,EAAEgB,MAAQ0N,EAAE1O,EAAEgB,KACpByN,EAAEzO,EAAEiB,MAAQyN,EAAE1O,EAAEiB,KAChBwN,EAAExO,EAAEe,MAAQ0N,EAAEzO,EAAEe,KAChByN,EAAExO,EAAEgB,MAAQyN,EAAEzO,EAAEgB,OK47BAtR,KAAKk6C,mBAAoB,GAExB6H,IACDA,EAAqBjV,MACzB4J,GAAYqL,EAAoB/hD,KAAK48C,iBAErC+E,IACA3hD,KAAKk4C,gBAAkBuJ,ERr8B3C,SAAmBz5C,EAAQm6C,EAAQ1K,EAAM/e,EAAUmpB,EAAwBD,GACnEC,GACA75C,EAAOsN,QAAUsjB,GAAU,OAEVz1B,IAAjBs0C,EAAKniC,QAAwBmiC,EAAKniC,QAAU,EAAG+gC,GAAgB3d,IAC/D1wB,EAAOo6C,YAAcxpB,QAA6Bz1B,IAAnBg/C,EAAO7sC,QAAwB6sC,EAAO7sC,QAAU,EAAG,EAAGihC,GAAiB7d,KAEjGkpB,IACL55C,EAAOsN,QAAUsjB,QAA6Bz1B,IAAnBg/C,EAAO7sC,QAAwB6sC,EAAO7sC,QAAU,OAAoBnS,IAAjBs0C,EAAKniC,QAAwBmiC,EAAKniC,QAAU,EAAGojB,IAKjI,IAAK,IAAI/yB,EAAI,EAAGA,EAAIqwC,GAAYrwC,IAAK,CACjC,MAAM08C,EAAc,SAAStM,GAAQpwC,WACrC,IAAI28C,EAAenM,GAAUgM,EAAQE,GACjCE,EAAapM,GAAUsB,EAAM4K,QACZl/C,IAAjBm/C,QAA6Cn/C,IAAfo/C,IAElCD,IAAiBA,EAAe,GAChCC,IAAeA,EAAa,GACI,IAAjBD,GACI,IAAfC,GACArM,GAAKoM,KAAkBpM,GAAKqM,IAE5Bv6C,EAAOq6C,GAAevwC,KAAKR,IAAIsnB,GAAUqd,GAASqM,GAAerM,GAASsM,GAAa7pB,GAAW,IAC9FlmB,GAAQ7C,KAAK4yC,IAAe/vC,GAAQ7C,KAAK2yC,MACzCt6C,EAAOq6C,IAAgB,MAI3Br6C,EAAOq6C,GAAeE,EAE9B,EAIIJ,EAAO5tC,QAAUkjC,EAAKljC,UACtBvM,EAAOuM,OAASqkB,GAAUupB,EAAO5tC,QAAU,EAAGkjC,EAAKljC,QAAU,EAAGmkB,GAExE,CQ85BoB8pB,CAAUf,EAAaD,EAAsBxhD,KAAKgW,aAAc0iB,EAAUmpB,EAAwBD,IAEtG5hD,KAAKqhB,KAAKo9B,2BACVz+C,KAAKu3C,iBACLv3C,KAAK27C,kBAAoBjjB,CAAQ,EAErC14B,KAAKgiD,eAAehiD,KAAKiW,QAAQmnC,WAAa,IAAO,EACzD,CACArZ,eAAe9tB,GACXjW,KAAK87C,gBAAgB,kBACrB97C,KAAKs1C,kBAAoBt1C,KAAKs1C,iBAAiBhZ,OAC3Ct8B,KAAKw4C,cAAgBx4C,KAAKw4C,aAAalD,kBACvCt1C,KAAKw4C,aAAalD,iBAAiBhZ,OAEnCt8B,KAAK6gD,oBACL,SAAY7gD,KAAK6gD,kBACjB7gD,KAAK6gD,sBAAmB19C,GAO5BnD,KAAK6gD,iBAAmB,MAAMzyC,QAAO,KACjCklC,GAAsBC,wBAAyB,EAC/CvzC,KAAKs1C,iBIr+BrB,SAA4B7xC,EAAOyiB,EAAWjQ,GAC1C,MAAMwsC,EAAgBvyC,EAAczM,GAASA,EAAQ2mB,GAAY3mB,GAEjE,OADAg/C,EAAc73C,MAAMm2B,GAAmB,GAAI0hB,EAAev8B,EAAWjQ,IAC9DwsC,EAAc72C,SACzB,CJi+BwC82C,CAAmB,EAv8BnC,IAu8BuD,IACxDzsC,EACH2a,SAAWxX,IACPpZ,KAAKgiD,eAAe5oC,GACpBnD,EAAQ2a,UAAY3a,EAAQ2a,SAASxX,EAAO,EAEhD+Q,WAAY,KACRlU,EAAQkU,YAAclU,EAAQkU,aAC9BnqB,KAAK2iD,mBAAmB,IAG5B3iD,KAAKw4C,eACLx4C,KAAKw4C,aAAalD,iBAAmBt1C,KAAKs1C,kBAE9Ct1C,KAAK6gD,sBAAmB19C,CAAS,GAEzC,CACAw/C,oBACQ3iD,KAAKw4C,eACLx4C,KAAKw4C,aAAalD,sBAAmBnyC,EACrCnD,KAAKw4C,aAAaR,qBAAkB70C,GAExC,MAAMgyC,EAAQn1C,KAAKo1C,WACnBD,GAASA,EAAMoD,wBACfv4C,KAAKw4C,aACDx4C,KAAKs1C,iBACDt1C,KAAKk4C,qBACD/0C,EACZnD,KAAK87C,gBAAgB,oBACzB,CACAS,kBACQv8C,KAAKs1C,mBACLt1C,KAAKgiD,gBAAkBhiD,KAAKgiD,eAv+BpB,KAw+BRhiD,KAAKs1C,iBAAiBhZ,QAE1Bt8B,KAAK2iD,mBACT,CACAC,0BACI,MAAMnL,EAAOz3C,KAAKqgD,UAClB,IAAI,qBAAEK,EAAoB,OAAE14C,EAAM,OAAEoE,EAAM,aAAE4J,GAAiByhC,EAC7D,GAAKiJ,GAAyB14C,GAAWoE,EAAzC,CAOA,GAAIpM,OAASy3C,GACTz3C,KAAKoM,QACLA,GACAy2C,GAA0B7iD,KAAKiW,QAAQ6sC,cAAe9iD,KAAKoM,OAAO4jC,UAAW5jC,EAAO4jC,WAAY,CAChGhoC,EAAShI,KAAKgI,QAAU8kC,KACxB,MAAMiW,EAAUzX,GAAWtrC,KAAKoM,OAAO4jC,UAAU3/B,GACjDrI,EAAOqI,EAAEgB,IAAMomC,EAAKzvC,OAAOqI,EAAEgB,IAC7BrJ,EAAOqI,EAAEiB,IAAMtJ,EAAOqI,EAAEgB,IAAM0xC,EAC9B,MAAMC,EAAU1X,GAAWtrC,KAAKoM,OAAO4jC,UAAU1/B,GACjDtI,EAAOsI,EAAEe,IAAMomC,EAAKzvC,OAAOsI,EAAEe,IAC7BrJ,EAAOsI,EAAEgB,IAAMtJ,EAAOsI,EAAEe,IAAM2xC,CAClC,CACAtM,GAAYgK,EAAsB14C,GAMlCsmC,GAAaoS,EAAsB1qC,GAOnC61B,GAAa7rC,KAAKqhD,6BAA8BrhD,KAAK4+C,gBAAiB8B,EAAsB1qC,EA/BlF,CAgCd,CACAwmC,mBAAmBjvC,EAAUwS,GACpB/f,KAAK47C,YAAY/1C,IAAI0H,IACtBvN,KAAK47C,YAAY94C,IAAIyK,EAAU,IAAI+pC,IAEzBt3C,KAAK47C,YAAY71C,IAAIwH,GAC7Bgd,IAAIxK,GACV,MAAMzD,EAASyD,EAAK9J,QAAQgtC,uBAC5BljC,EAAKk1B,QAAQ,CACT73B,WAAYd,EAASA,EAAOc,gBAAaja,EACzC00C,sBAAuBv7B,GAAUA,EAAO4mC,4BAClC5mC,EAAO4mC,4BAA4BnjC,QACnC5c,GAEd,CACAoyC,SACI,MAAMJ,EAAQn1C,KAAKo1C,WACnB,OAAOD,GAAQA,EAAMsC,OAASz3C,IAClC,CACAqgD,UACI,IAAI/nC,EACJ,MAAM,SAAE/K,GAAavN,KAAKiW,QAC1B,OAAO1I,IAAuC,QAA1B+K,EAAKtY,KAAKo1C,kBAA+B,IAAP98B,OAAgB,EAASA,EAAGm/B,OAAgBz3C,IACtG,CACAmjD,cACI,IAAI7qC,EACJ,MAAM,SAAE/K,GAAavN,KAAKiW,QAC1B,OAAO1I,EAAsC,QAA1B+K,EAAKtY,KAAKo1C,kBAA+B,IAAP98B,OAAgB,EAASA,EAAGk/B,cAAWr0C,CAChG,CACAiyC,WACI,MAAM,SAAE7nC,GAAavN,KAAKiW,QAC1B,GAAI1I,EACA,OAAOvN,KAAKqhB,KAAKu6B,YAAY71C,IAAIwH,EACzC,CACA0nC,SAAQ,WAAEuF,EAAU,WAAEp9B,EAAU,sBAAEy6B,GAA2B,CAAC,GAC1D,MAAM1C,EAAQn1C,KAAKo1C,WACfD,GACAA,EAAMF,QAAQj1C,KAAM63C,GACpB2C,IACAx6C,KAAK+zC,qBAAkB5wC,EACvBnD,KAAKw6C,YAAa,GAElBp9B,GACApd,KAAK80C,WAAW,CAAE13B,cAC1B,CACA83B,WACI,MAAMC,EAAQn1C,KAAKo1C,WACnB,QAAID,GACOA,EAAMD,SAASl1C,KAK9B,CACA29C,gBACI,MAAM,cAAEhwC,GAAkB3N,KAAKiW,QAC/B,IAAKtI,EACD,OAEJ,IAAIy1C,GAAY,EAKhB,MAAM,aAAEptC,GAAiBrI,EAQzB,IAPIqI,EAAazB,QACbyB,EAAaxB,SACbwB,EAAavB,SACbuB,EAAatB,WACb0uC,GAAY,IAGXA,EACD,OACJ,MAAMC,EAAc,CAAC,EAErB,IAAK,IAAI19C,EAAI,EAAGA,EAAIwzC,GAAczzC,OAAQC,IAAK,CAC3C,MAAMrC,EAAM,SAAW61C,GAAcxzC,GAEjCqQ,EAAa1S,KACb+/C,EAAY//C,GAAO0S,EAAa1S,GAChCqK,EAAc21C,eAAehgD,EAAK,GAE1C,CAGAqK,EAAc5M,SAEd,IAAK,MAAMuC,KAAO+/C,EACd11C,EAAc21C,eAAehgD,EAAK+/C,EAAY//C,IAIlDqK,EAAc4pC,gBAClB,CACAz8B,oBAAoBF,GAChB,IAAItC,EAAIiV,EACR,IAAKvtB,KAAK8O,UAAY9O,KAAKu6C,MACvB,OACJ,IAAKv6C,KAAK07C,UACN,OAAOtC,GAEX,MAAMmK,EAAS,CACXlK,WAAY,IAEVnjC,EAAoBlW,KAAK49C,uBAC/B,GAAI59C,KAAKw6C,WAQL,OAPAx6C,KAAKw6C,YAAa,EAClB+I,EAAOjuC,QAAU,GACjBiuC,EAAOC,cACHrnC,GAAmBvB,aAA6C,EAASA,EAAU4oC,gBAAkB,GACzGD,EAAOpyC,UAAY+E,EACbA,EAAkBlW,KAAKgW,aAAc,IACrC,OACCutC,EAEX,MAAM9L,EAAOz3C,KAAKqgD,UAClB,IAAKrgD,KAAK+zC,kBAAoB/zC,KAAKoM,SAAWqrC,EAAKzvC,OAAQ,CACvD,MAAMy7C,EAAc,CAAC,EAerB,OAdIzjD,KAAKiW,QAAQ1I,WACbk2C,EAAYnuC,aACsBnS,IAA9BnD,KAAKgW,aAAaV,QACZtV,KAAKgW,aAAaV,QAClB,EACVmuC,EAAYD,cACRrnC,GAAmBvB,aAA6C,EAASA,EAAU4oC,gBAAkB,IAEzGxjD,KAAKy7C,eAAiBplC,GAAarW,KAAKgW,gBACxCytC,EAAYtyC,UAAY+E,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACNlW,KAAKy7C,cAAe,GAEjBgI,CACX,CACA,MAAMC,EAAiBjM,EAAKS,iBAAmBT,EAAKzhC,aACpDhW,KAAK4iD,0BACLW,EAAOpyC,UAAYunC,GAAyB14C,KAAKqhD,6BAA8BrhD,KAAK8zC,UAAW4P,GAC3FxtC,IACAqtC,EAAOpyC,UAAY+E,EAAkBwtC,EAAgBH,EAAOpyC,YAEhE,MAAM,EAAEd,EAAC,EAAEC,GAAMtQ,KAAK+zC,gBACtBwP,EAAOntC,gBAAkB,GAAc,IAAX/F,EAAEmI,WAA4B,IAAXlI,EAAEkI,YAC7Ci/B,EAAKS,gBAKLqL,EAAOjuC,QACHmiC,IAASz3C,KACiG,QAAnGutB,EAAuC,QAAjCjV,EAAKorC,EAAepuC,eAA4B,IAAPgD,EAAgBA,EAAKtY,KAAKgW,aAAaV,eAA4B,IAAPiY,EAAgBA,EAAK,EACjIvtB,KAAKg4C,gBACDh4C,KAAKgW,aAAaV,QAClBouC,EAAetB,YAO7BmB,EAAOjuC,QACHmiC,IAASz3C,UACwBmD,IAA3BugD,EAAepuC,QACXouC,EAAepuC,QACf,QAC2BnS,IAA/BugD,EAAetB,YACXsB,EAAetB,YACf,EAKlB,IAAK,MAAM9+C,KAAOsM,EAAiB,CAC/B,QAA4BzM,IAAxBugD,EAAepgD,GACf,SACJ,MAAM,QAAEswC,EAAO,QAAEiC,GAAYjmC,EAAgBtM,GAOvCqgD,EAAiC,SAArBJ,EAAOpyC,UACnBuyC,EAAepgD,GACfswC,EAAQ8P,EAAepgD,GAAMm0C,GACnC,GAAI5B,EAAS,CACT,MAAM+N,EAAM/N,EAAQnwC,OACpB,IAAK,IAAIC,EAAI,EAAGA,EAAIi+C,EAAKj+C,IACrB49C,EAAO1N,EAAQlwC,IAAMg+C,CAE7B,MAEIJ,EAAOjgD,GAAOqgD,CAEtB,CAYA,OANI3jD,KAAKiW,QAAQ1I,WACbg2C,EAAOC,cACH/L,IAASz3C,KACHmc,GAAmBvB,aAA6C,EAASA,EAAU4oC,gBAAkB,GACrG,QAEPD,CACX,CACAhF,gBACIv+C,KAAK+3C,WAAa/3C,KAAKi4C,cAAW90C,CACtC,CAEA0gD,YACI7jD,KAAKqhB,KAAK65B,MAAM93C,SAAS2c,IAAW,IAAIzH,EAAI,OAAwC,QAAhCA,EAAKyH,EAAKu1B,wBAAqC,IAAPh9B,OAAgB,EAASA,EAAGgkB,MAAM,IAC9Ht8B,KAAKqhB,KAAK65B,MAAM93C,QAAQ46C,IACxBh+C,KAAKqhB,KAAKu6B,YAAYx2C,OAC1B,EAER,CACA,SAASytC,GAAa9yB,GAClBA,EAAK8yB,cACT,CACA,SAASuL,GAAmBr+B,GACxB,IAAIzH,EACJ,MAAM2/B,GAAuC,QAA1B3/B,EAAKyH,EAAKg4B,kBAA+B,IAAPz/B,OAAgB,EAASA,EAAG2/B,WAAal4B,EAAKk4B,SACnG,GAAIl4B,EAAKw1B,UACLx1B,EAAK3T,QACL6rC,GACAl4B,EAAKk8B,aAAa,aAAc,CAChC,MAAQjM,UAAW5jC,EAAQozC,YAAasE,GAAmB/jC,EAAK3T,QAC1D,cAAE02C,GAAkB/iC,EAAK9J,QACzBqqC,EAAWrI,EAAShhC,SAAW8I,EAAK3T,OAAO6K,OAG3B,SAAlB6rC,EACA/V,IAAUxB,IACN,MAAMwY,EAAezD,EACfrI,EAASuH,YAAYjU,GACrB0M,EAASjI,UAAUzE,GACnB7lC,EAAS4lC,GAAWyY,GAC1BA,EAAa1yC,IAAMjF,EAAOm/B,GAAMl6B,IAChC0yC,EAAazyC,IAAMyyC,EAAa1yC,IAAM3L,CAAM,IAG3Cm9C,GAA0BC,EAAe7K,EAASjI,UAAW5jC,IAClE2gC,IAAUxB,IACN,MAAMwY,EAAezD,EACfrI,EAASuH,YAAYjU,GACrB0M,EAASjI,UAAUzE,GACnB7lC,EAAS4lC,GAAWl/B,EAAOm/B,IACjCwY,EAAazyC,IAAMyyC,EAAa1yC,IAAM3L,EAIlCqa,EAAK68B,iBAAmB78B,EAAKu1B,mBAC7Bv1B,EAAKm6B,mBAAoB,EACzBn6B,EAAK68B,eAAerR,GAAMj6B,IACtByO,EAAK68B,eAAerR,GAAMl6B,IAAM3L,EACxC,IAGR,MAAMs+C,EAAcnX,KACpBhB,GAAamY,EAAa53C,EAAQ6rC,EAASjI,WAC3C,MAAMiU,EAAcpX,KAChByT,EACAzU,GAAaoY,EAAalkC,EAAK4/B,eAAemE,GAAgB,GAAO7L,EAASuH,aAG9E3T,GAAaoY,EAAa73C,EAAQ6rC,EAASjI,WAE/C,MAAMoD,GAAoB+D,GAAY6M,GACtC,IAAIvH,GAA2B,EAC/B,IAAK18B,EAAKg4B,WAAY,CAClB,MAAMmI,EAAiBngC,EAAKygC,6BAK5B,GAAIN,IAAmBA,EAAenI,WAAY,CAC9C,MAAQE,SAAUiM,EAAgB93C,OAAQ+3C,GAAiBjE,EAC3D,GAAIgE,GAAkBC,EAAc,CAChC,MAAMC,EAAmBtX,KACzBb,GAAqBmY,EAAkBnM,EAASjI,UAAWkU,EAAelU,WAC1E,MAAM0R,EAAiB5U,KACvBb,GAAqByV,EAAgBt1C,EAAQ+3C,EAAanU,WACrDoH,GAAiBgN,EAAkB1C,KACpCjF,GAA2B,GAE3ByD,EAAejqC,QAAQmnC,aACvBr9B,EAAK68B,eAAiB8E,EACtB3hC,EAAK0gC,qBAAuB2D,EAC5BrkC,EAAKmgC,eAAiBA,EAE9B,CACJ,CACJ,CACAngC,EAAK+7B,gBAAgB,YAAa,CAC9B1vC,SACA6rC,WACAllB,MAAOkxB,EACPD,cACA5Q,mBACAqJ,4BAER,MACK,GAAI18B,EAAKw1B,SAAU,CACpB,MAAM,eAAElzC,GAAmB0d,EAAK9J,QAChC5T,GAAkBA,GACtB,CAMA0d,EAAK9J,QAAQmH,gBAAaja,CAC9B,CACA,SAASg4C,GAAoBp7B,GAIzBu5B,GAAoBC,aACfx5B,EAAKnS,SAQLmS,EAAK4gC,iBACN5gC,EAAKm6B,kBAAoBn6B,EAAKnS,OAAOssC,mBAOzCn6B,EAAKo6B,0BAA4Bp6B,EAAKo6B,wBAA0BhvC,QAAQ4U,EAAKm6B,mBACzEn6B,EAAKnS,OAAOssC,mBACZn6B,EAAKnS,OAAOusC,0BAChBp6B,EAAKq6B,mBAAqBr6B,EAAKq6B,iBAAmBr6B,EAAKnS,OAAOwsC,kBAClE,CACA,SAASkB,GAAgBv7B,GACrBA,EAAKm6B,kBACDn6B,EAAKo6B,wBACDp6B,EAAKq6B,kBACD,CAChB,CACA,SAASmE,GAAcx+B,GACnBA,EAAKw+B,eACT,CACA,SAASP,GAAkBj+B,GACvBA,EAAKi+B,mBACT,CACA,SAASC,GAAmBl+B,GACxBA,EAAKq4B,eAAgB,CACzB,CACA,SAAS+F,GAAoBp+B,GACzB,MAAM,cAAEpS,GAAkBoS,EAAK9J,QAC3BtI,GAAiBA,EAAcyS,WAAWikC,uBAC1C12C,EAAcu0B,OAAO,uBAEzBniB,EAAKg6B,gBACT,CACA,SAASwC,GAAgBx8B,GACrBA,EAAKw8B,kBACLx8B,EAAKigC,YAAcjgC,EAAK68B,eAAiB78B,EAAK/X,YAAS7E,EACvD4c,EAAKm6B,mBAAoB,CAC7B,CACA,SAASkB,GAAmBr7B,GACxBA,EAAKq7B,oBACT,CACA,SAASC,GAAet7B,GACpBA,EAAKs7B,gBACT,CACA,SAASsC,GAAc59B,GACnBA,EAAK49B,eACT,CACA,SAASa,GAAoBrJ,GACzBA,EAAMsD,oBACV,CACA,SAASwJ,GAAa70B,EAAQ2F,EAAO0E,GACjCrK,EAAOwe,UAAYhT,GAAU7F,EAAM6Y,UAAW,EAAGnU,GACjDrK,EAAOzb,MAAQinB,GAAU7F,EAAMphB,MAAO,EAAG8lB,GACzCrK,EAAO5U,OAASua,EAAMva,OACtB4U,EAAOue,YAAc5Y,EAAM4Y,WAC/B,CACA,SAASuW,GAAQ90B,EAAQ/mB,EAAMmB,EAAIiwB,GAC/BrK,EAAO/b,IAAMunB,GAAUvyB,EAAKgL,IAAK7J,EAAG6J,IAAKomB,GACzCrK,EAAO9b,IAAMsnB,GAAUvyB,EAAKiL,IAAK9J,EAAG8J,IAAKmmB,EAC7C,CAKA,SAASqqB,GAAoB/hC,GACzB,OAAQA,EAAKm4B,sBAAwD/0C,IAArC4c,EAAKm4B,gBAAgBkK,WACzD,CACA,MAAMtF,GAA0B,CAC5Bh3B,SAAU,IACVC,KAAM,CAAC,GAAK,EAAG,GAAK,IAElBu+B,GAAqBC,GAAgC,oBAAdC,WACzCA,UAAUC,WACVD,UAAUC,UAAU76C,cAAcnD,SAAS89C,GAMzCG,GAAaJ,GAAkB,kBAAoBA,GAAkB,WACrExyC,KAAKC,MACLkR,GAAA,EACN,SAASs8B,GAAUhU,GAEfA,EAAKl6B,IAAMqzC,GAAWnZ,EAAKl6B,KAC3Bk6B,EAAKj6B,IAAMozC,GAAWnZ,EAAKj6B,IAC/B,CAKA,SAASuxC,GAA0BC,EAAe7K,EAAU7rC,GACxD,MAA0B,aAAlB02C,GACe,oBAAlBA,IACItX,GAAO6L,GAAYY,GAAWZ,GAAYjrC,GAAS,GAChE,CKz9CA,MAAMu4C,GAAyBjL,GAAqB,CAChDC,qBAAsB,CAACv4C,EAAK8gC,IAAWrkB,GAAYzc,EAAK,SAAU8gC,GAClE2X,cAAe,KAAM,CACjBxpC,EAAGzO,SAASgjD,gBAAgBC,YAAcjjD,SAASuF,KAAK09C,WACxDv0C,EAAG1O,SAASgjD,gBAAgBE,WAAaljD,SAASuF,KAAK29C,YAE3DhL,kBAAmB,KAAM,ICNvBrI,GAAqB,CACvB9xC,aAASwD,GAEP4hD,GAAqBrL,GAAqB,CAC5CG,cAAgB/qC,IAAa,CACzBuB,EAAGvB,EAAS+1C,WACZv0C,EAAGxB,EAASg2C,YAEhBlL,cAAe,KACX,IAAKnI,GAAmB9xC,QAAS,CAC7B,MAAMqlD,EAAe,IAAIL,GAAuB,CAAC,GACjDK,EAAaj2C,MAAMT,QACnB02C,EAAalQ,WAAW,CAAEgK,cAAc,IACxCrN,GAAmB9xC,QAAUqlD,CACjC,CACA,OAAOvT,GAAmB9xC,OAAO,EAErCo6C,eAAgB,CAACjrC,EAAUrL,KACvBqL,EAASnN,MAAMwP,eAAsBhO,IAAVM,EAAsBA,EAAQ,MAAM,EAEnEq2C,kBAAoBhrC,GAAa3D,QAAuD,UAA/CmD,OAAOyZ,iBAAiBjZ,GAAUm2C,YClBzEn5C,GAAO,CACTI,IAAK,CACD2T,QrBIR,cAAyBA,GACrBC,cACImC,SAASC,WACTliB,KAAKklD,0BAA4BjiC,GAAA,CACrC,CACAkiC,cAAcC,GACVplD,KAAKqlD,QAAU,IAAIlc,GAAWic,EAAkBplD,KAAKslD,oBAAqB,CACtEjc,mBAAoBrpC,KAAK+f,KAAKywB,wBAC9BlH,cAAeoF,GAAiB1uC,KAAK+f,OAE7C,CACAulC,oBACI,MAAM,kBAAEC,EAAiB,WAAEC,EAAU,MAAEC,EAAK,SAAEC,GAAa1lD,KAAK+f,KAAKK,WACrE,MAAO,CACHyqB,eAAgBwI,GAAakS,GAC7Brb,QAASmJ,GAAamS,GACtBrb,OAAQsb,EACRjb,MAAO,CAACpsB,EAAO+B,YACJngB,KAAKqlD,QACRK,GACAA,EAAStnC,EAAO+B,EAAK,EAGrC,CACApR,QACI/O,KAAKklD,0BAA4BtmC,GAAgB5e,KAAK+f,KAAKpgB,QAAS,eAAgBye,GAAUpe,KAAKmlD,cAAc/mC,IACrH,CACAhQ,SACIpO,KAAKqlD,SAAWrlD,KAAKqlD,QAAQta,eAAe/qC,KAAKslD,oBACrD,CACAt2C,UACIhP,KAAKklD,4BACLllD,KAAKqlD,SAAWrlD,KAAKqlD,QAAQ9a,KACjC,IqBnCAz+B,KAAM,CACF+T,QCNR,cAA0BA,GACtBC,YAAYC,GACRkC,MAAMlC,GACN/f,KAAK2lD,oBAAsB1iC,GAAA,EAC3BjjB,KAAK8qC,gBAAkB7nB,GAAA,EACvBjjB,KAAK4lD,SAAW,IAAI9W,GAA0B/uB,EAClD,CACAhR,QAGI,MAAM,aAAE82C,GAAiB7lD,KAAK+f,KAAKK,WAC/BylC,IACA7lD,KAAK2lD,oBAAsBE,EAAa/c,UAAU9oC,KAAK4lD,WAE3D5lD,KAAK8qC,gBAAkB9qC,KAAK4lD,SAAS9S,gBAAkB7vB,GAAA,CAC3D,CACAjU,UACIhP,KAAK2lD,sBACL3lD,KAAK8qC,iBACT,GDZIgb,eAAgBf,GAChB13C,cAAa,KEXf04C,GAAuB,CAAEpmD,QAAS,MAClCqmD,GAA2B,CAAErmD,SAAS,GCF5C,MAAMsmD,GAAqB,IAAIplC,QCQzBqlC,GAAa,IAAIl9B,GAAqBmD,GAAOmB,ICkB7C64B,GAAe/7C,OAAO9D,KAAK+F,GAC3B+5C,GAAcD,GAAazgD,OAC3B2gD,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAEEC,GAAkBx7C,EAAapF,OAKrC,MAAM6gD,GACFzmC,aAAY,OAAElS,EAAM,MAAE3N,EAAK,gBAAE6N,EAAe,oBAAEC,EAAmB,sBAAEI,EAAqB,YAAET,GAAgBuI,EAAU,CAAC,GACjHjW,KAAKgqB,iBAAmB,CAAC9D,EAIzBiE,EAAY9hB,EAAM5E,IACP,IAAIzD,KAAKiqB,iBAAiB/D,EAAWiE,EAAY9hB,EAAM5E,EAAOzD,MAMzEA,KAAKL,QAAU,KAIfK,KAAKgB,SAAW,IAAI+O,IAIpB/P,KAAKkL,eAAgB,EACrBlL,KAAK+K,uBAAwB,EAQ7B/K,KAAKslC,mBAAqB,KAM1BtlC,KAAKgD,OAAS,IAAIU,IAClB1D,KAAKiqB,iBAAmBA,GAIxBjqB,KAAKgN,SAAW,CAAC,EAKjBhN,KAAKwmD,mBAAqB,IAAI9iD,IAM9B1D,KAAKymD,iBAAmB,CAAC,EAIzBzmD,KAAK0iC,OAAS,CAAC,EAMf1iC,KAAK0mD,uBAAyB,CAAC,EAC/B1mD,KAAK2mD,aAAe,IAAM3mD,KAAKkiC,OAAO,SAAUliC,KAAKgW,cACrDhW,KAAKe,OAAS,KACLf,KAAKL,UAEVK,KAAK4mD,eACL5mD,KAAK6mD,eAAe7mD,KAAKL,QAASK,KAAKkb,YAAalb,KAAKC,MAAM0B,MAAO3B,KAAK6a,YAAW,EAE1F7a,KAAKu3C,eAAiB,IAAM,MAAMx2C,OAAOf,KAAKe,QAAQ,GAAO,GAC7D,MAAM,aAAEiV,EAAY,YAAEkF,GAAgBxN,EACtC1N,KAAKgW,aAAeA,EACpBhW,KAAK8mD,WAAa,IAAK9wC,GACvBhW,KAAK+mD,cAAgB9mD,EAAMmC,QAAU,IAAK4T,GAAiB,CAAC,EAC5DhW,KAAKkb,YAAcA,EACnBlb,KAAK4N,OAASA,EACd5N,KAAKC,MAAQA,EACbD,KAAK8N,gBAAkBA,EACvB9N,KAAKwnB,MAAQ5Z,EAASA,EAAO4Z,MAAQ,EAAI,EACzCxnB,KAAK+N,oBAAsBA,EAC3B/N,KAAKiW,QAAUA,EACfjW,KAAKmO,sBAAwBhD,QAAQgD,GACrCnO,KAAK+K,sBAAwBA,EAAsB9K,GACnDD,KAAKkL,cAAgBA,EAAcjL,GAC/BD,KAAKkL,gBACLlL,KAAK6lC,gBAAkB,IAAI91B,KAE/B/P,KAAK4nC,uBAAyBz8B,QAAQyC,GAAUA,EAAOjO,SAWvD,MAAM,WAAEqlC,KAAegiB,GAAwBhnD,KAAKqb,4BAA4Bpb,EAAO,CAAC,GACxF,IAAK,MAAMqD,KAAO0jD,EAAqB,CACnC,MAAMvjD,EAAQujD,EAAoB1jD,QACRH,IAAtB6S,EAAa1S,IAAsB4M,EAAczM,KACjDA,EAAMX,IAAIkT,EAAa1S,IAAM,GACzBq+B,GAAwBqD,IACxBA,EAAWza,IAAIjnB,GAG3B,CACJ,CAQA+X,4BAA4B4rC,EAAQC,GAChC,MAAO,CAAC,CACZ,CACAn4C,MAAMD,GACF9O,KAAKL,QAAUmP,EACfm3C,GAAmBnjD,IAAIgM,EAAU9O,MAC7BA,KAAK6a,aAAe7a,KAAK6a,WAAW/L,UACpC9O,KAAK6a,WAAW9L,MAAMD,GAEtB9O,KAAK4N,QAAU5N,KAAKkL,gBAAkBlL,KAAK+K,wBAC3C/K,KAAKmnD,sBAAwBnnD,KAAK4N,OAAOw5C,gBAAgBpnD,OAE7DA,KAAKgD,OAAOI,SAAQ,CAACK,EAAOH,IAAQtD,KAAKqnD,kBAAkB/jD,EAAKG,KAC3DuiD,GAAyBrmD,SCzKtC,WAEI,GADAqmD,GAAyBrmD,SAAU,EAC9B,IAEL,GAAI2O,OAAOg5C,WAAY,CACnB,MAAMC,EAAmBj5C,OAAOg5C,WAAW,4BACrCE,EAA8B,IAAOzB,GAAqBpmD,QAAU4nD,EAAiB3iC,QAC3F2iC,EAAiBE,YAAYD,GAC7BA,GACJ,MAEIzB,GAAqBpmD,SAAU,CAEvC,CD6JY+nD,GAEJ1nD,KAAKslC,mBAC4B,UAA7BtlC,KAAK+N,sBAE8B,WAA7B/N,KAAK+N,qBAEDg4C,GAAqBpmD,SAI/BK,KAAK4N,QACL5N,KAAK4N,OAAO5M,SAASupB,IAAIvqB,MAC7BA,KAAKoO,OAAOpO,KAAKC,MAAOD,KAAK8N,gBACjC,CACAkB,UACIi3C,GAAmB/iD,OAAOlD,KAAKL,SAC/BK,KAAK6a,YAAc7a,KAAK6a,WAAW7L,WACnC,SAAYhP,KAAK2mD,eACjB,SAAY3mD,KAAKe,QACjBf,KAAKwmD,mBAAmBpjD,SAASmiC,GAAWA,MAC5CvlC,KAAKmnD,uBAAyBnnD,KAAKmnD,wBACnCnnD,KAAK4N,QAAU5N,KAAK4N,OAAO5M,SAASkC,OAAOlD,MAC3C,IAAK,MAAMsD,KAAOtD,KAAK0iC,OACnB1iC,KAAK0iC,OAAOp/B,GAAK8B,QAErB,IAAK,MAAM9B,KAAOtD,KAAKgN,SACnBhN,KAAKgN,SAAS1J,GAAK0L,UAEvBhP,KAAKL,QAAU,IACnB,CACA0nD,kBAAkB/jD,EAAKG,GACnB,MAAMkkD,EAAmB73C,EAAejK,IAAIvC,GACtCskD,EAAiBnkD,EAAM6/B,GAAG,UAAWukB,IACvC7nD,KAAKgW,aAAa1S,GAAOukD,EACzB7nD,KAAKC,MAAM2wB,UAAY,MAAM0tB,UAAUt+C,KAAK2mD,cACxCgB,GAAoB3nD,KAAK6a,aACzB7a,KAAK6a,WAAWu/B,kBAAmB,EACvC,IAEE0N,EAAwBrkD,EAAM6/B,GAAG,gBAAiBtjC,KAAKu3C,gBAC7Dv3C,KAAKwmD,mBAAmB1jD,IAAIQ,GAAK,KAC7BskD,IACAE,GAAuB,GAE/B,CACAxhB,iBAAiByhB,GAIb,OAAK/nD,KAAKL,SACLK,KAAKgoD,0BACNhoD,KAAK2H,OAASogD,EAAMpgD,KAGjB3H,KAAKgoD,yBAAyBhoD,KAAKL,QAASooD,EAAMpoD,SAF9C,CAGf,CACAsN,cAAa,SAAEjM,KAAainD,GAAiBp5C,EAAUlC,EAAmBiC,GACtE,IAAIs5C,EACA76C,EAaJ,IAAK,IAAI1H,EAAI,EAAGA,EAAIygD,GAAazgD,IAAK,CAClC,MAAM0C,EAAO89C,GAAaxgD,IACpB,UAAE2G,EAAWuT,QAASsoC,EAAkB,eAAErC,EAAgBz4C,cAAe+6C,GAA4B/7C,EAAmBhE,GAC1Hy9C,IACAoC,EAA4BpC,GAC5Bx5C,EAAU27C,MACLjoD,KAAKgN,SAAS3E,IAAS8/C,IACxBnoD,KAAKgN,SAAS3E,GAAQ,IAAI8/C,EAAmBnoD,OAE7CooD,IACA/6C,EAAgB+6C,GAG5B,CACA,IAAmB,SAAdpoD,KAAK2H,MAAiC,QAAd3H,KAAK2H,QAC7B3H,KAAK6a,YACNqtC,EAA2B,CAC3BloD,KAAK6a,WAAa,IAAIqtC,EAA0BloD,KAAKgW,aAAchW,KAAK4N,QAAU5N,KAAK4N,OAAOiN,YAC9F,MAAM,SAAEtN,EAAQ,OAAEnB,EAAM,KAAEN,EAAI,gBAAEglC,EAAe,aAAEgO,EAAY,WAAE1B,GAAgB6K,EAC/EjoD,KAAK6a,WAAWi6B,WAAW,CACvBvnC,WACAnB,SACAsyC,oBAAqBvzC,QAAQW,IACxBglC,GAAmB3mC,EAAY2mC,GACpCnjC,cAAe3N,KACfu3C,eAAgB,IAAMv3C,KAAKu3C,iBAQ3BuL,cAAiC,iBAAX12C,EAAsBA,EAAS,OACrD62C,uBAAwBr0C,EACxBkwC,eACA1B,cAER,CACA,OAAO/vC,CACX,CACAqB,iBACI,IAAK,MAAMpL,KAAOtD,KAAKgN,SAAU,CAC7B,MAAMq7C,EAAUroD,KAAKgN,SAAS1J,GAC1B+kD,EAAQ5oD,UACR4oD,EAAQj6C,UAGRi6C,EAAQt5C,QACRs5C,EAAQ5oD,WAAY,EAE5B,CACJ,CACAmnD,eACI5mD,KAAKsoD,MAAMtoD,KAAKkb,YAAalb,KAAKgW,aAAchW,KAAKiW,QAASjW,KAAKC,MACvE,CAMA8vB,qBACI,OAAO/vB,KAAKL,QACNK,KAAKuoD,2BAA2BvoD,KAAKL,QAASK,KAAKC,OACnD6sC,IACV,CACA0b,eAAellD,GACX,OAAOtD,KAAKgW,aAAa1S,EAC7B,CACAggD,eAAehgD,EAAKG,GAChBzD,KAAKgW,aAAa1S,GAAOG,CAC7B,CAKA2K,OAAOnO,EAAO6N,IACN7N,EAAMiW,mBAAqBlW,KAAKC,MAAMiW,oBACtClW,KAAKu3C,iBAETv3C,KAAKF,UAAYE,KAAKC,MACtBD,KAAKC,MAAQA,EACbD,KAAKipC,oBAAsBjpC,KAAK8N,gBAChC9N,KAAK8N,gBAAkBA,EAIvB,IAAK,IAAInI,EAAI,EAAGA,EAAI0gD,GAAkB3gD,OAAQC,IAAK,CAC/C,MAAMrC,EAAM+iD,GAAkB1gD,GAC1B3F,KAAK0mD,uBAAuBpjD,KAC5BtD,KAAK0mD,uBAAuBpjD,YACrBtD,KAAK0mD,uBAAuBpjD,IAEvC,MAAMmlD,EAAWxoD,EAAM,KAAOqD,GAC1BmlD,IACAzoD,KAAK0mD,uBAAuBpjD,GAAOtD,KAAKsjC,GAAGhgC,EAAKmlD,GAExD,CACAzoD,KAAKymD,iBElVb,SAAqC1mD,EAASglB,EAAMC,GAChD,MAAM,WAAEggB,GAAejgB,EACvB,IAAK,MAAMzhB,KAAOyhB,EAAM,CACpB,MAAM2jC,EAAY3jC,EAAKzhB,GACjBqlD,EAAY3jC,EAAK1hB,GACvB,GAAI4M,EAAcw4C,GAKd3oD,EAAQykC,SAASlhC,EAAKolD,GAClB/mB,GAAwBqD,IACxBA,EAAWza,IAAIjnB,QAUlB,GAAI4M,EAAcy4C,GAKnB5oD,EAAQykC,SAASlhC,EAAK8mB,GAAYs+B,EAAW,CAAE15B,MAAOjvB,KAClD4hC,GAAwBqD,IACxBA,EAAWO,OAAOjiC,QAGrB,GAAIqlD,IAAcD,EAMnB,GAAI3oD,EAAQwkC,SAASjhC,GAAM,CACvB,MAAMslD,EAAgB7oD,EAAQ0vB,SAASnsB,IAEtCslD,EAAc3lB,aAAe2lB,EAAc9lD,IAAI4lD,EACpD,KACK,CACD,MAAMb,EAAc9nD,EAAQyoD,eAAellD,GAC3CvD,EAAQykC,SAASlhC,EAAK8mB,QAA4BjnB,IAAhB0kD,EAA4BA,EAAca,EAAW,CAAE15B,MAAOjvB,IACpG,CAER,CAEA,IAAK,MAAMuD,KAAO0hB,OACI7hB,IAAd4hB,EAAKzhB,IACLvD,EAAQ8oD,YAAYvlD,GAE5B,OAAOyhB,CACX,CF2RgC+jC,CAA4B9oD,KAAMA,KAAKqb,4BAA4Bpb,EAAOD,KAAKF,WAAYE,KAAKymD,kBACpHzmD,KAAK+oD,wBACL/oD,KAAK+oD,wBAEb,CACA3oC,WACI,OAAOpgB,KAAKC,KAChB,CAIA+oD,WAAW3gD,GACP,OAAOrI,KAAKC,MAAMmL,SAAWpL,KAAKC,MAAMmL,SAAS/C,QAAQlF,CAC7D,CAIA6iB,uBACI,OAAOhmB,KAAKC,MAAMmd,UACtB,CACAozB,wBACI,OAAOxwC,KAAKC,MAAMopC,kBACtB,CACA4f,wBACI,OAAOjpD,KAAKkL,cACNlL,KACAA,KAAK4N,OACD5N,KAAK4N,OAAOq7C,6BACZ9lD,CACd,CACAikC,kBAAkB8hB,GAAgB,GAC9B,GAAIA,EACA,OAAOlpD,KAAK4N,OAAS5N,KAAK4N,OAAOw5B,yBAAsBjkC,EAE3D,IAAKnD,KAAK+K,sBAAuB,CAC7B,MAAMpI,EAAU3C,KAAK4N,QACf5N,KAAK4N,OAAOw5B,qBACZ,CAAC,EAIP,YAH2BjkC,IAAvBnD,KAAKC,MAAMmC,UACXO,EAAQP,QAAUpC,KAAKC,MAAMmC,SAE1BO,CACX,CACA,MAAMA,EAAU,CAAC,EACjB,IAAK,IAAIgD,EAAI,EAAGA,EAAI2gD,GAAiB3gD,IAAK,CACtC,MAAM0C,EAAOyC,EAAanF,GACpB8F,EAAOzL,KAAKC,MAAMoI,IACpBmC,EAAeiB,KAAkB,IAATA,KACxB9I,EAAQ0F,GAAQoD,EAExB,CACA,OAAO9I,CACX,CAIAykD,gBAAgBxjD,GACZ,MAAMulD,EAAqBnpD,KAAKipD,wBAChC,GAAIE,EAGA,OAFAA,EAAmBtjB,iBACfsjB,EAAmBtjB,gBAAgBtb,IAAI3mB,GACpC,IAAMulD,EAAmBtjB,gBAAgB3iC,OAAOU,EAE/D,CAIA4gC,SAASlhC,EAAKG,GAENA,IAAUzD,KAAKgD,OAAO+C,IAAIzC,KAC1BtD,KAAK6oD,YAAYvlD,GACjBtD,KAAKqnD,kBAAkB/jD,EAAKG,IAEhCzD,KAAKgD,OAAOF,IAAIQ,EAAKG,GACrBzD,KAAKgW,aAAa1S,GAAOG,EAAMsC,KACnC,CAIA8iD,YAAYvlD,GACRtD,KAAKgD,OAAOE,OAAOI,GACnB,MAAMigC,EAAcvjC,KAAKwmD,mBAAmBzgD,IAAIzC,GAC5CigC,IACAA,IACAvjC,KAAKwmD,mBAAmBtjD,OAAOI,WAE5BtD,KAAKgW,aAAa1S,GACzBtD,KAAKopD,2BAA2B9lD,EAAKtD,KAAKkb,YAC9C,CAIAqpB,SAASjhC,GACL,OAAOtD,KAAKgD,OAAO6C,IAAIvC,EAC3B,CACAmsB,SAASnsB,EAAKyqB,GACV,GAAI/tB,KAAKC,MAAM+C,QAAUhD,KAAKC,MAAM+C,OAAOM,GACvC,OAAOtD,KAAKC,MAAM+C,OAAOM,GAE7B,IAAIG,EAAQzD,KAAKgD,OAAO+C,IAAIzC,GAK5B,YAJcH,IAAVM,QAAwCN,IAAjB4qB,IACvBtqB,EAAQ2mB,GAA6B,OAAjB2D,OAAwB5qB,EAAY4qB,EAAc,CAAEiB,MAAOhvB,OAC/EA,KAAKwkC,SAASlhC,EAAKG,IAEhBA,CACX,CAMAknB,UAAUrnB,EAAK0E,GACX,IAAIsQ,EACJ,IAAI7U,OAAmCN,IAA3BnD,KAAKgW,aAAa1S,IAAuBtD,KAAKL,QAEI,QAAvD2Y,EAAKtY,KAAKqpD,uBAAuBrpD,KAAKC,MAAOqD,UAAyB,IAAPgV,EAAgBA,EAAKtY,KAAKspD,sBAAsBtpD,KAAKL,QAAS2D,EAAKtD,KAAKiW,SADxIjW,KAAKgW,aAAa1S,GD7bV,IAACmH,EC0cf,OAXIhH,UACqB,iBAAVA,IACN4jB,GAAkB5jB,IAAU2jB,GAAkB3jB,IAE/CA,EAAQgO,WAAWhO,IDncZgH,ECqcahH,GDrcPyiD,GAAWh9B,KAAKH,GAActe,KCqcb6iB,GAAQ3d,KAAK3H,KAC3CvE,EAAQ,GAAkBH,EAAK0E,KAEnChI,KAAKupD,cAAcjmD,EAAK4M,EAAczM,GAASA,EAAMsC,MAAQtC,IAE1DyM,EAAczM,GAASA,EAAMsC,MAAQtC,CAChD,CAKA8lD,cAAcjmD,EAAKG,GACfzD,KAAK8mD,WAAWxjD,GAAOG,CAC3B,CAKAglC,cAAcnlC,GACV,IAAIgV,EAAIiV,EACR,MAAM,QAAEnrB,GAAYpC,KAAKC,MACnBupD,EAAsC,iBAAZpnD,GAA2C,iBAAZA,EAC2E,QAAnImrB,EAAK7R,GAAwB1b,KAAKC,MAAOmC,EAAyC,QAA/BkW,EAAKtY,KAAK8N,uBAAoC,IAAPwK,OAAgB,EAASA,EAAGhW,eAA4B,IAAPirB,OAAgB,EAASA,EAAGjqB,QACxKH,EAIN,GAAIf,QAAgCe,IAArBqmD,EACX,OAAOA,EAMX,MAAMxhD,EAAShI,KAAKqpD,uBAAuBrpD,KAAKC,MAAOqD,GACvD,YAAeH,IAAX6E,GAAyBkI,EAAclI,QAMR7E,IAA5BnD,KAAK+mD,cAAczjD,SACDH,IAArBqmD,OACErmD,EACAnD,KAAK8mD,WAAWxjD,GARX0E,CASf,CACAs7B,GAAGxlB,EAAW5Y,GAIV,OAHKlF,KAAK0iC,OAAO5kB,KACb9d,KAAK0iC,OAAO5kB,GAAa,IAAIkkB,IAE1BhiC,KAAK0iC,OAAO5kB,GAAWyM,IAAIrlB,EACtC,CACAg9B,OAAOpkB,KAAci+B,GACb/7C,KAAK0iC,OAAO5kB,IACZ9d,KAAK0iC,OAAO5kB,GAAWokB,UAAU6Z,EAEzC,EGtgBJ,MAAM0N,WAAyBlD,GAC3BzmC,cACImC,SAASC,WACTliB,KAAKiqB,iBAAmB8E,EAC5B,CACAi5B,yBAAyBlpC,EAAGC,GAMxB,OAAsC,EAA/BD,EAAE4qC,wBAAwB3qC,GAAS,GAAK,CACnD,CACAsqC,uBAAuBppD,EAAOqD,GAC1B,OAAOrD,EAAM0B,MAAQ1B,EAAM0B,MAAM2B,QAAOH,CAC5C,CACAimD,2BAA2B9lD,GAAK,KAAE6S,EAAI,MAAExU,WAC7BwU,EAAK7S,UACL3B,EAAM2B,EACjB,ECTJ,MAAMqmD,WAA0BF,GAC5B3pC,cACImC,SAASC,WACTliB,KAAK2H,KAAO,MAChB,CACA2hD,sBAAsBx6C,EAAUxL,GAC5B,GAAIwM,EAAejK,IAAIvC,GAAM,CACzB,MAAMsmD,EAAc/6B,GAAoBvrB,GACxC,OAAOsmD,GAAcA,EAAYh4C,SAAe,CACpD,CACK,CACD,MAAMi4C,GAdQ9pD,EAcyB+O,EAbxCR,OAAOyZ,iBAAiBhoB,IAcjB0D,GAASmN,EAAkBtN,GAC3BumD,EAAc7hC,iBAAiB1kB,GAC/BumD,EAAcvmD,KAAS,EAC7B,MAAwB,iBAAVG,EAAqBA,EAAMwN,OAASxN,CACtD,CAnBR,IAA0B1D,CAoBtB,CACAwoD,2BAA2Bz5C,GAAU,mBAAEu6B,IACnC,OAAOtZ,GAAmBjhB,EAAUu6B,EACxC,CACAif,MAAMptC,EAAalF,EAAcC,EAAShW,GACtC6V,GAAgBoF,EAAalF,EAAcC,EAAShW,EAAMiW,kBAC9D,CACAmF,4BAA4Bpb,EAAOH,GAC/B,OAAOub,GAA4Bpb,EAAOH,EAC9C,CACAipD,yBACQ/oD,KAAK8pD,oBACL9pD,KAAK8pD,2BACE9pD,KAAK8pD,mBAEhB,MAAM,SAAE9oD,GAAahB,KAAKC,MACtBiQ,EAAclP,KACdhB,KAAK8pD,kBAAoB9oD,EAASsiC,GAAG,UAAWlqB,IACxCpZ,KAAKL,UACLK,KAAKL,QAAQoqD,YAAc,GAAG3wC,IAAQ,IAGtD,CACAytC,eAAe/3C,EAAUoM,EAAaN,EAAWC,GAC7CF,GAAW7L,EAAUoM,EAAaN,EAAWC,EACjD,EC5CJ,MAAMmvC,WAAyBP,GAC3B3pC,cACImC,SAASC,WACTliB,KAAK2H,KAAO,MACZ3H,KAAKqZ,UAAW,CACpB,CACAgwC,uBAAuBppD,EAAOqD,GAC1B,OAAOrD,EAAMqD,EACjB,CACAgmD,sBAAsBx6C,EAAUxL,GAC5B,GAAIwM,EAAejK,IAAIvC,GAAM,CACzB,MAAMsmD,EAAc/6B,GAAoBvrB,GACxC,OAAOsmD,GAAcA,EAAYh4C,SAAe,CACpD,CAEA,OADAtO,EAAO0X,GAAoBnV,IAAIvC,GAA0BA,EAAnBmG,EAAYnG,GAC3CwL,EAASm7C,aAAa3mD,EACjC,CACAilD,6BACI,OAAOzb,IACX,CACAzxB,4BAA4Bpb,EAAOH,GAC/B,OAAO,GAA4BG,EAAOH,EAC9C,CACAwoD,MAAMptC,EAAalF,EAAcC,EAAShW,GACtC4Y,GAAcqC,EAAalF,EAAcC,EAASjW,KAAKqZ,SAAUpZ,EAAMiW,kBAC3E,CACA2wC,eAAe/3C,EAAUoM,EAAaN,EAAWC,GAC7CI,GAAUnM,EAAUoM,EAAaN,EAAWC,EAChD,CACA9L,MAAMD,GACF9O,KAAKqZ,SAAWA,GAASvK,EAAS6O,SAClCsE,MAAMlT,MAAMD,EAChB,ECvCJ,MAAM,GAAyB,CAAC/B,EAAWkJ,IAChCvG,EAAe3C,GAChB,IAAIi9C,GAAiB/zC,EAAS,CAAES,4BAA4B,IAC5D,IAAIizC,GAAkB1zC,EAAS,CAAES,4BAA4B,ICEjE/J,GAAoB,IACnBs4B,MACAjjB,MACAlW,MCTQ,CACXM,OAAQ,CACJ05C,eAAgBf,GAChB13C,cAAa,MDef68C,GAAuB/6C,GAAkB,CAACpC,EAAWuP,IEhB3D,SAA+BvP,GAAW,mBAAEqN,GAAqB,GAASzN,EAAmBC,GAIzF,MAAO,IAHY8C,EAAe3C,GAC5BuQ,GACAM,GAGFjR,oBACAE,UAAWsN,GAAgBC,GAC3BxN,sBACAG,YAER,CFKsE,CAAsBA,EAAWuP,EAAQ3P,GAAmB,MG4GlI,OA9HsBxD,IAAsB,IAArB,YAAEjC,GAAaiC,EACpC,OACE9B,EAAAA,cAAC6iD,GAAOC,IAAG,CACX/nD,QAAS,CAAEkT,QAAS,GACpBtK,QAAS,CAAEsK,QAAS,GACpB8H,WAAY,CAAE0I,SAAU,IACxBja,KAAM,CAAEyJ,QAAS,GACjBhO,UAAU,iBACRD,EAAAA,cAAA,OAAKC,UAAU,mBACbD,EAAAA,cAAA,OAAKC,UAAU,wBACbD,EAAAA,cAAA,OAAK,cAAY,OAAOO,QAASV,EAAaI,UAAU,gBAAe,MAEzED,EAAAA,cAAA,WAASnG,GAAG,kBAAkBoG,UAAU,cACtCD,EAAAA,cAAA,OAAKC,UAAU,aACbD,EAAAA,cAAA,OAAKC,UAAU,iCACbD,EAAAA,cAAA,MAAIC,UAAU,iCAAgC,oBAEhDD,EAAAA,cAAA,KAAGC,UAAU,yBAAwB,mIAIrCD,EAAAA,cAAA,OAAKC,UAAU,6BACbD,EAAAA,cAAA,OAAKC,UAAU,aACbD,EAAAA,cAAA,QACEC,UAAU,aACVa,OAAO,yDACPC,OAAO,QAEPf,EAAAA,cAAA,SAAOM,KAAK,SAASU,KAAK,WAAW5E,MAAM,UAC3C4D,EAAAA,cAAA,SAAOM,KAAK,OAAOU,KAAK,SAAS1G,MAAO,CAAE2G,QAAS,UAEnDjB,EAAAA,cAAA,SACEM,KAAK,SACLU,KAAK,QACL5E,MAAM,sCAGR4D,EAAAA,cAAA,OAAKC,UAAU,sBACbD,EAAAA,cAAA,OAAKC,UAAU,oBACbD,EAAAA,cAAA,SAAOkB,QAAQ,aAAY,cAC3BlB,EAAAA,cAAA,SACEM,KAAK,OACLzG,GAAG,YACHmH,KAAK,YACLG,UAAQ,EACRlB,UAAU,kBAGdD,EAAAA,cAAA,OAAKC,UAAU,oBACbD,EAAAA,cAAA,SAAOkB,QAAQ,YAAW,aAC1BlB,EAAAA,cAAA,SACEM,KAAK,OACLzG,GAAG,WACHmH,KAAK,WACLG,UAAQ,EACRlB,UAAU,mBAKhBD,EAAAA,cAAA,WACEA,EAAAA,cAAA,SAAOkB,QAAQ,SAAQ,SACvBlB,EAAAA,cAAA,SACEM,KAAK,QACLzG,GAAG,QACHmH,KAAK,QACLG,UAAQ,EACRlB,UAAU,kBAIdD,EAAAA,cAAA,WACEA,EAAAA,cAAA,SAAOkB,QAAQ,SAAQ,gBACvBlB,EAAAA,cAAA,SACEM,KAAK,MACLzG,GAAG,QACHmH,KAAK,QACLG,UAAQ,EACRlB,UAAU,kBAIdD,EAAAA,cAAA,WACEA,EAAAA,cAAA,SAAOkB,QAAQ,WAAU,sCAGzBlB,EAAAA,cAAA,UACEgB,KAAK,UACLnH,GAAG,UACHsH,UAAQ,EACRlB,UAAU,eAEVD,EAAAA,cAAA,UAAQ+iD,UAAQ,EAACC,UAAQ,GAAC,2BAG1BhjD,EAAAA,cAAA,UAAQ5D,MAAM,SAAQ,kBACtB4D,EAAAA,cAAA,UAAQ5D,MAAM,aAAY,wBAC1B4D,EAAAA,cAAA,UAAQ5D,MAAM,SAAQ,6BACtB4D,EAAAA,cAAA,UAAQ5D,MAAM,YAAW,oBACzB4D,EAAAA,cAAA,UAAQ5D,MAAM,SAAQ,WAI1B4D,EAAAA,cAAA,WACEA,EAAAA,cAAA,SAAOkB,QAAQ,UAAUjB,UAAU,cAAa,yCAGhDD,EAAAA,cAAA,YACEnG,GAAG,UACHmH,KAAK,UACLG,UAAQ,EACRlB,UAAU,eACVmB,YAAY,MAGhBpB,EAAAA,cAAA,UAAQC,UAAU,wBAAuB,gBAO1C,C,uDC3HjB,MAAMtD,GAAqB,E,QAAAsF,eAAc,CAAC,E,uDCG1C,MAAM/H,GAAsB,E,QAAA+H,eAAc,CACtC+/B,mBAAqB5R,GAAMA,EAC3BhqB,UAAU,EACVO,cAAe,S,sDCHnB,MAAMzK,GAAkB,E,QAAA+F,eAAc,K,qECLtC,MAAMghD,EACFxqC,cACI9f,KAAKuqD,MAAQ,GACbvqD,KAAKwqD,UAAY,IAAIz6C,GACzB,CACAwa,IAAI8zB,GACA,IAAKr+C,KAAKwqD,UAAU3kD,IAAIw4C,GAGpB,OAFAr+C,KAAKwqD,UAAUjgC,IAAI8zB,GACnBr+C,KAAKuqD,MAAM5lD,KAAK05C,IACT,CAEf,CACA9Y,OAAO8Y,GACH,MAAMtc,EAAQ/hC,KAAKuqD,MAAM3kD,QAAQy4C,IAClB,IAAXtc,IACA/hC,KAAKuqD,MAAM1jD,OAAOk7B,EAAO,GACzB/hC,KAAKwqD,UAAUtnD,OAAOm7C,GAE9B,CACAj5C,QACIpF,KAAKuqD,MAAM7kD,OAAS,EACpB1F,KAAKwqD,UAAUplD,OACnB,ECnBJ,MAAMqlD,EAAa,CACf,OACA,mBACA,SACA,YACA,SACA,cAEEC,EAAa,GACnB,SAASC,EAAoBC,EAAmBC,GAC5C,IAAIC,GAAe,EACfC,GAAoB,EACxB,MAAMh1C,EAAQ,CACVgd,MAAO,EACP9L,UAAW,EACXF,cAAc,GAEZikC,EAAQP,EAAWvrC,QAAO,CAACgoB,EAAK5jC,KAClC4jC,EAAI5jC,GDGZ,SAA0BwnD,GAKtB,IAAIG,EAAY,IAAIX,EAChBY,EAAY,IAAIZ,EAChBa,EAAW,EAKXpkC,GAAe,EACfqkC,GAAiB,EAIrB,MAAMC,EAAc,IAAIC,QAClBC,EAAO,CAITzhD,SAAU,CAAC5E,EAAUsmD,GAAY,EAAOC,GAAY,KAChD,MAAMC,EAAoBD,GAAa1kC,EACjC4kC,EAAQD,EAAoBT,EAAYC,EAO9C,OANIM,GACAH,EAAY9gC,IAAIrlB,GAChBymD,EAAMphC,IAAIrlB,IAAawmD,GAAqB3kC,IAE5CokC,EAAWF,EAAUV,MAAM7kD,QAExBR,CAAQ,EAKnB8E,OAAS9E,IACLgmD,EAAU3lB,OAAOrgC,GACjBmmD,EAAYnoD,OAAOgC,EAAS,EAKhCm5C,QAAUv3B,IAMN,GAAIC,EACAqkC,GAAiB,MADrB,CAUA,GANArkC,GAAe,GACdkkC,EAAWC,GAAa,CAACA,EAAWD,GAErCC,EAAU9lD,QAEV+lD,EAAWF,EAAUV,MAAM7kD,OACvBylD,EACA,IAAK,IAAIxlD,EAAI,EAAGA,EAAIwlD,EAAUxlD,IAAK,CAC/B,MAAMT,EAAW+lD,EAAUV,MAAM5kD,GAC7B0lD,EAAYxlD,IAAIX,KAChBqmD,EAAKzhD,SAAS5E,GACd4lD,KAEJ5lD,EAAS4hB,EACb,CAEJC,GAAe,EACXqkC,IACAA,GAAiB,EACjBG,EAAKlN,QAAQv3B,GApBjB,CAqBA,GAGR,OAAOykC,CACX,CChFmBK,EAAiB,IAAOd,GAAe,IAC3C5jB,IACR,CAAC,GACE2kB,EAAeC,IACjBd,EAAMc,GAAQzN,QAAQtoC,EAAM,EAE1Bg2C,EAAe,KACjB,MAAM9kC,EAAY,IAAmBD,gBAC/BjR,EAAMkR,UACNC,YAAYP,MAClBmkC,GAAe,EACf/0C,EAAMgd,MAAQg4B,EACR,IAAO,GACPj5C,KAAKR,IAAIQ,KAAKT,IAAI4V,EAAYlR,EAAMkR,UAAWyjC,GAAa,GAClE30C,EAAMkR,UAAYA,EAClBlR,EAAMgR,cAAe,EACrB0jC,EAAWrnD,QAAQyoD,GACnB91C,EAAMgR,cAAe,EACjB+jC,GAAgBD,IAChBE,GAAoB,EACpBH,EAAkBmB,GACtB,EAmBJ,MAAO,CAAEjiD,SAVQ2gD,EAAWvrC,QAAO,CAACgoB,EAAK5jC,KACrC,MAAMioD,EAAOP,EAAM1nD,GAMnB,OALA4jC,EAAI5jC,GAAO,CAAC+6C,EAASmN,GAAY,EAAOC,GAAY,KAC3CX,IATTA,GAAe,EACfC,GAAoB,EACfh1C,EAAMgR,cACP6jC,EAAkBmB,IAQXR,EAAKzhD,SAASu0C,EAASmN,EAAWC,IAEtCvkB,CAAG,GACX,CAAC,GAEel9B,OADHq0C,GAAYoM,EAAWrnD,SAASE,GAAQ0nD,EAAM1nD,GAAK0G,OAAOq0C,KAC/CtoC,QAAOi1C,QACtC,C,+JC3DA,MAAQlhD,SAAUkiD,EAAOhiD,OAAQiiD,EAAal2C,MAAO+Q,EAAS,MAAEkkC,IAAW,OAAqD,oBAA1BkB,sBAAwCA,sBAAwB,KAAM,E,uDCH5K,MAAMC,EAAqB,CACvB1qB,gBAAgB,EAChBza,iBAAiB,E,4FCArB,IAAIolC,EAAU,IACVC,EAAY,G,uDCHhB,MAAMC,EAAgC,oBAAb1qD,Q,uDCAzB,MAAMqhB,EAAQspC,GAAQA,C,qECStB,SAASC,EAAYjqB,GACjB,MAAMnhC,GAAM,IAAA1B,QAAO,MAInB,OAHoB,OAAhB0B,EAAIzB,UACJyB,EAAIzB,QAAU4iC,KAEXnhC,EAAIzB,OACf,C,qECZA,MAAM8sD,E,QAA4B,EAAY,EAAAC,gBAAkB,EAAArnD,S","sources":["webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/use-force-update.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","webpack://Cerberus Risk Management/./src/components/Navbar.jsx","webpack://Cerberus Risk Management/./src/components/UpperNavbar.js","webpack://Cerberus Risk Management/./src/components/Contact.jsx","webpack://Cerberus Risk Management/./src/components/Footer.jsx","webpack://Cerberus Risk Management/./src/components/Layout.js","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://Cerberus Risk Management/./src/components/RequestAQuote.js","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://Cerberus Risk Management/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"],"sourcesContent":["import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                // clean up the exiting children map\n                exitingChildren.delete(key);\n                // compute the keys of children that were rendered once but are no longer present\n                // this could happen in case of too many fast consequent renderings\n                // @link https://github.com/framer/motion/issues/2023\n                const leftOverKeys = Array.from(allChildren.keys()).filter((childKey) => !targetKeys.includes(childKey));\n                // clean up the all children map\n                leftOverKeys.forEach((leftOverKey) => allChildren.delete(leftOverKey));\n                // make sure to render only the children that are actually visible\n                presentChildren.current = filteredChildren.filter((presentChild) => {\n                    const presentChildKey = getChildKey(presentChild);\n                    return (\n                    // filter out the node exiting\n                    presentChildKey === key ||\n                        // filter out the leftover children\n                        leftOverKeys.includes(presentChildKey));\n                });\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exitingChildren.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'gatsby';\r\nimport RequestAQuote from './RequestAQuote';\r\nimport { AnimatePresence } from 'framer-motion';\r\n\r\nconst Navbar = () => {\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  const toggleModal = () => {\r\n    setModalOpen(!modalOpen);\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.body.style.overflow = modalOpen ? \"hidden\" : \"unset\";\r\n  }, [modalOpen]);\r\n\r\n  return (\r\n      <nav className=\"navbar navbar-expand-lg bg-black navbar-dark sticky-top py-2 border-bottom border-primary border-3\">\r\n        <div className=\"container\">\r\n          <Link to=\"/\" className='navbar-brand m-0 p-0'>\r\n            <div className='d-flex align-items-center navbar-brand m-0'>\r\n              <div className=\"navbar-brand border-end border-light border-2 pe-2 m-0 __nav-small CRM\">CRM</div>\r\n              <div className='navbar-brand m-0 mx-1 __nav-small'>\r\n                <img src=\"/logo.png\" alt=\"logo\" height='46' width='auto' />\r\n              </div>\r\n              <div className=\"navbar-brand m-0 __nav-small\">Cerberus Risk Management</div>\r\n            </div>\r\n          </Link>\r\n\r\n\r\n          <button className=\"navbar-toggler px-0\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"navigation\">\r\n            <ul className=\"navbar-nav ms-auto d-lg-flex align-items-lg-center\">\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/#services\" className=\"nav-link\">Services</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <div aria-hidden=\"true\" className=\"nav-link\" onClick={toggleModal}>Request a Quote</div>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/#contact\" className=\"nav-link\">Contact Us</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link href=\"/\" className=\"nav-link\">Careers</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"tel:(401) 588-2449\" className=\"nav-link\">\r\n                  <button className='btn btn-primary' type='button'>(401) 588-2449</button>\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <AnimatePresence>\r\n          { modalOpen && <RequestAQuote toggleModal={toggleModal} />}\r\n        </AnimatePresence>\r\n      </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar","import React from 'react'\r\n\r\nconst UpperNavbar = () => {\r\n  return (\r\n    <div className='bg-black'>\r\n      <div className='container py-3 d-flex align-items-center justify-content-between'>\r\n        <div className='text-light'>\r\n          <a className='text-decoration-none' href='https://licensing.fdacs.gov/access/agency.aspx?TYPE=AGENCY&CATEGORY=&COUNTY=00&LICENSE=B%203300204&STATUS=ORG_DETAIL&ORG_ID=' target='_blank' rel=\"noreferrer\">License # B 3300204</a>\r\n        </div>\r\n        <div className=\"text-light\">\r\n        {/* <button className='btn btn-primary' type='button'>(401) 588-2449</button> */}\r\n        <img className='ms-2' src=\"/vet.png\" alt=\"vetOwned\" height='40' width='auto' />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UpperNavbar","import React from 'react'\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <section id=\"contact\" className=\"py-4 bg-black text-light\">\r\n      <div className=\"container\">\r\n        <div className='h1 text-center mb-4 text-primary'>Contact Us</div>\r\n        <div className=\"row g-4\">\r\n          <div className=\"col-md text-primary\">\r\n            <div className='border-start border-light border-5 ps-3'>\r\n              <div className='lead'><span className=\"fw-bold text-light\">Mailing Address:</span> 7901 4th St N, Suite 300, St.\r\n                Petersburg, FL</div>\r\n              <div className='lead'><span className=\"fw-bold text-light\">Phone:</span> (401) 588-2449</div>\r\n              <div className='lead'><span className=\"fw-bold text-light\">Email:</span> info@crmtampa.com</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <form action=\"https://formsubmit.co/31aee523a5e7db1381cf87d0da5ebbc5\" method=\"POST\">\r\n                  <input type=\"hidden\" name=\"_captcha\" value=\"false\" />\r\n                  <input type=\"text\" name=\"_honey\" style={{display: 'none'}} />\r\n                  {/* <!-- edit redirect location for production --> */}\r\n                  <input type=\"hidden\" name=\"_next\" value=\"https://www.crmtampa.com/thankyou\" />\r\n\r\n\r\n                  <label htmlFor=\"name\">Name</label>\r\n                  <input type=\"text\" id='name' name='name' required className='form-control' />\r\n\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input type=\"email\" id='email' name='email' required className='form-control' />\r\n\r\n                  <label htmlFor=\"message\" className='form-label'>Message</label>\r\n                  <textarea id='message' name='message' required className='form-control' placeholder=''></textarea>\r\n                  <button className='btn btn-primary mt-2'>Submit</button>\r\n\r\n                </form>\r\n\r\n              </div>\r\n\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Contact","import React from 'react'\r\nimport Contact from './Contact';\r\n\r\nconst Footer = () => {\r\n  const year = new Date().getFullYear();\r\n  return (\r\n    <>\r\n      <Contact />\r\n      <div className=\"ntsa-widget\">\r\n        <iframe src=\"https://www.dhs.gov/ntas/\" name=\"National Terrorism Advisory System\" title=\"National Terrorism Advisory System\" width=\"170\" height=\"180\" scrolling=\"no\" frameBorder=\"0\" seamless border=\"0\"></iframe>\r\n      </div>\r\n\r\n      <section id=\"copyright\" className=\"py-4 bg-black text-primary\">\r\n        <div className='container text-center'>\r\n        <p><i className=\"bi bi-c-circle\"> </i>{year} CERBERUS RISK MANAGEMENT. All Rights Reserved</p>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\nimport Navbar from './Navbar'\r\nimport UpperNavbar from './UpperNavbar'\r\nimport Footer from './Footer'\r\nimport { Script } from 'gatsby'\r\nimport '../styles/globals.css'\r\nimport '../styles/custom.css'\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <div className='layout'>\r\n      <UpperNavbar />\r\n      <Navbar />\r\n      <div className=\"content\">\r\n        { children }\r\n      </div>\r\n      <Footer />\r\n      {/* <!-- Start of Tawk.to Script--> */}\r\n      <Script \r\n        type=\"text/javascript\" id='Tawkto'>{`\r\n        var Tawk_API = Tawk_API || {}, Tawk_LoadStart = new Date();\r\n        (function () {\r\n          var s1 = document.createElement(\"script\"), s0 = document.getElementsByTagName(\"script\")[0];\r\n          s1.async = true;\r\n          s1.src = 'https://embed.tawk.to/644fc6b031ebfa0fe7fb5ece/1gvbq0853';\r\n          s1.charset = 'UTF-8';\r\n          s1.setAttribute('crossorigin', '*');\r\n          s0.parentNode.insertBefore(s1, s0);\r\n        })();`}\r\n      </Script>\r\n      {/* <!--End of Tawk.to Script --> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.postRender(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap)\n                            onTap(event, info);\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            onTapStart(event, info);\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel)\n            onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return resolvedKeyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { frame, cancelFrame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        // Write\n        toResolve.forEach((resolver) => {\n            resolver.needsMeasurement && resolver.unsetTransforms();\n        });\n        // Read\n        toResolve.forEach((resolver) => {\n            resolver.needsMeasurement && resolver.measureInitialState();\n        });\n        // Write\n        toResolve.forEach((resolver) => {\n            resolver.needsMeasurement && resolver.renderEndStyles();\n        });\n        // Read\n        toResolve.forEach((resolver) => {\n            resolver.needsMeasurement && resolver.measureEndState();\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n    frame.resolveKeyframes(measureAllKeyframes);\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n    cancelFrame(readAllKeyframes);\n    cancelFrame(measureAllKeyframes);\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    unsetTransforms() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, removeNonTranslationalTransform, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        const noneKeyframeIndexes = [];\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            const keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\" && isCSSVariableToken(keyframe)) {\n                const resolved = getVariableValue(keyframe, element.current);\n                if (resolved !== undefined) {\n                    unresolvedKeyframes[i] = resolved;\n                }\n            }\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (!originType || !targetType || originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    unsetTransforms() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        this.removedTransforms = removeNonTranslationalTransform(element);\n        const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        element.getValue(name, finalKeyframe).jump(finalKeyframe, false);\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n    }\n    renderEndStyles() {\n        this.element.render();\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        unresolvedKeyframes[unresolvedKeyframes.length - 1] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (name === \"height\" && this.suspendedScrollY !== undefined) {\n            window.scrollTo(0, this.suspendedScrollY);\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        if (typeof unresolvedKeyframes[i] === \"string\" &&\n            unresolvedKeyframes[i] !== \"none\" &&\n            unresolvedKeyframes[i] !== \"0\") {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved)\n            flushKeyframeResolvers();\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes) {\n        const { name, type, velocity, delay, onComplete, onUpdate } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                const finalKeyframe = getFinalKeyframe(keyframes, this.options);\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(finalKeyframe);\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                this.updateFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        this._resolved = {\n            keyframes,\n            ...this.initPlayback(keyframes),\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = () => {\n                resolve();\n                this.updateFinishedPromise();\n            };\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mixNumber } from './number.mjs';\nimport { invariant } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\n\nfunction mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes) => this.onKeyframesResolved(resolvedKeyframes);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = this.resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        return millisecondsToSeconds(this.resolved.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    stop() {\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.state = \"idle\";\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.teardown();\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes) => this.onKeyframesResolved(resolvedKeyframes), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes) {\n        let duration = this.options.duration || 300;\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            duration = pregeneratedAnimation.duration;\n            this.options.times = pregeneratedAnimation.times;\n            this.options.ease = pregeneratedAnimation.ease;\n        }\n        const { motionValue, name } = this.options;\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n                this.updateFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { duration } = this.resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { animation } = this.resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { animation } = this.resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { animation } = this.resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { animation } = this.resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { animation } = this.resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { animation } = this.resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { animation } = this.resolved;\n        animation.play();\n    }\n    pause() {\n        const { animation } = this.resolved;\n        animation.pause();\n    }\n    stop() {\n        this.isStopped = true;\n        const { animation, keyframes } = this.resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n            });\n            motionValue.setWithVelocity(sampleAnimation.sample(this.time - sampleDelta).value, sampleAnimation.sample(this.time).value, sampleDelta);\n        }\n        this.cancel();\n    }\n    complete() {\n        this.resolved.animation.finish();\n    }\n    cancel() {\n        this.resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.0.12\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n                animation.then(() => willChange.remove(key));\n            }\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                fallbackAnimation[key] =\n                    fallbackTarget === undefined ? null : fallbackTarget;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart)\n                onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd)\n            onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        handler(event, info);\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd)\n                    onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            if (window.HandoffCancelAllAnimations) {\n                window.HandoffCancelAllAnimations();\n            }\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a, _b;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_b = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom)) === null || _b === void 0 ? void 0 : _b[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.0.12\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.0.12 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import React from 'react'\r\nimport { motion } from 'framer-motion';\r\n\r\nconst RequestAQuote = ({ toggleModal }) => {\r\n  return (\r\n    <motion.div\r\n    initial={{ opacity: 0}}\r\n    animate={{ opacity: 1}}\r\n    transition={{ duration: 0.3 }}\r\n    exit={{ opacity: 0 }}\r\n    className='modal-wrapper'>\r\n      <div className=\"modal-container\">\r\n        <div className=\"close-button-wrapper\">\r\n          <div aria-hidden=\"true\" onClick={toggleModal} className=\"close-button\">+</div>\r\n        </div>\r\n        <section id=\"request-a-quote\" className=\"text-light\">\r\n          <div className=\"container\">\r\n            <div className=\"d-flex justify-content-center\">\r\n              <h1 className=\"text-center mb-3 text-primary\">Request a Quote</h1>\r\n            </div>\r\n            <p className=\"lead text-center mb-4\">\r\n              Looking for services? Let us know what you need by filling out the\r\n              form below and one of our agents will get in touch with you!\r\n            </p>\r\n            <div className=\"card quote-form-container\">\r\n              <div className=\"card-body\">\r\n                <form\r\n                  className=\"quote-form\"\r\n                  action=\"https://formsubmit.co/31aee523a5e7db1381cf87d0da5ebbc5\"\r\n                  method=\"POST\"\r\n                >\r\n                  <input type=\"hidden\" name=\"_captcha\" value=\"false\" />\r\n                  <input type=\"text\" name=\"_honey\" style={{ display: \"none\" }} />\r\n                  {/* <!-- edit redirect location for production --> */}\r\n                  <input\r\n                    type=\"hidden\"\r\n                    name=\"_next\"\r\n                    value=\"https://www.crmtampa.com/thankyou\"\r\n                  />\r\n\r\n                  <div className=\"d-flex gap-3 group\">\r\n                    <div className=\"flex-grow-1 item\">\r\n                      <label htmlFor=\"firstname\">First Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"firstname\"\r\n                        name=\"firstname\"\r\n                        required\r\n                        className=\"form-control\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"flex-grow-1 item\">\r\n                      <label htmlFor=\"lastname\">Last Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"lastname\"\r\n                        name=\"lastname\"\r\n                        required\r\n                        className=\"form-control\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      id=\"email\"\r\n                      name=\"email\"\r\n                      required\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label htmlFor=\"phone\">Phone Number</label>\r\n                    <input\r\n                      type=\"tel\"\r\n                      id=\"phone\"\r\n                      name=\"phone\"\r\n                      required\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label htmlFor=\"service\">\r\n                      What services are you looking for?\r\n                    </label>\r\n                    <select\r\n                      name=\"service\"\r\n                      id=\"service\"\r\n                      required\r\n                      className=\"form-select\"\r\n                    >\r\n                      <option selected disabled>\r\n                        Please select an option\r\n                      </option>\r\n                      <option value=\"guard\">Guard Services</option>\r\n                      <option value=\"executive\">Executive Protection</option>\r\n                      <option value=\"event\">Event Safety and Security</option>\r\n                      <option value=\"vehicles\">Armored Vehicles</option>\r\n                      <option value=\"other\">Other</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label htmlFor=\"message\" className=\"form-label\">\r\n                      Additional details about your request\r\n                    </label>\r\n                    <textarea\r\n                      id=\"message\"\r\n                      name=\"message\"\r\n                      required\r\n                      className=\"form-control\"\r\n                      placeholder=\"\"\r\n                    ></textarea>\r\n                  </div>\r\n                  <button className=\"btn btn-primary mt-2\">Submit</button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </motion.div>\r\n  )\r\n}\r\n\r\nexport default RequestAQuote;\r\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\",\n    \"resolveKeyframes\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","const noop = (any) => any;\n\nexport { noop };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n"],"names":["useIsMounted","isMounted","useRef","current","PopChildMeasure","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","children","PopChild","id","useId","ref","nonce","useContext","MotionConfigContext","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","context","useMemo","childId","set","isComplete","values","register","delete","undefined","forEach","_","key","PresenceContext","Provider","value","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","forceRender","LayoutGroupContext","forcedRenderCount","setForcedRenderCount","useState","useCallback","postRender","useForceUpdate","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exitingChildren","presentChildren","allChildren","isInitialRender","callback","updateChildLookup","clear","useEffect","map","presentKeys","targetKeys","numPresent","length","i","indexOf","has","component","get","insertionIndex","exitingComponent","onExit","leftOverKeys","Array","from","keys","filter","childKey","includes","leftOverKey","presentChild","presentChildKey","splice","cloneElement","Navbar","modalOpen","setModalOpen","toggleModal","body","overflow","React","className","Link","to","src","alt","type","onClick","href","RequestAQuote","UpperNavbar","target","rel","Contact","action","method","name","display","htmlFor","required","placeholder","Footer","year","Date","getFullYear","title","scrolling","frameBorder","seamless","border","_ref","Script","MotionContext","createContext","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","schedule","microtask","cancel","cancelMicrotask","queueMicrotask","isRefObject","Object","prototype","hasOwnProperty","call","isVariantLabel","v","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","isVariantNode","Boolean","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","isStatic","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","reducedMotion","visualElementRef","renderer","blockInitialAnimation","update","wantsHandoff","window","HandoffComplete","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","customMotionComponentConfig","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","transform","clamp","min","max","number","parse","parseFloat","alpha","scale","default","sanitize","Math","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","buildTransform","createHtmlRenderState","copyRawValuesOnly","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","transformers","reduce","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","sqrt","getValueTransition","instantAnimationState","isNotNull","getFinalKeyframe","repeat","repeatType","resolvedKeyframes","now","clearTime","time","frameData","isProcessing","useManualTiming","timestamp","performance","newTime","isZeroValueString","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolver","needsMeasurement","unsetTransforms","measureInitialState","renderEndStyles","measureEndState","complete","readAllKeyframes","readKeyframes","resolveKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","scheduleResolve","add","currentValue","finalKeyframe","valueAsRead","readValue","resume","isColorString","testProp","splitColor","aName","bName","cName","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","DOMKeyframesResolver","owner","noneKeyframeIndexes","keyframe","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","originType","targetType","removedTransforms","getValue","removeNonTranslationalTransform","jump","suspendedScrollY","pageYOffset","measuredOrigin","measureViewportBox","scrollTo","unsetTransformName","unsetTransformValue","isAnimatable","BaseAnimation","autoplay","delay","repeatDelay","isStopped","updateFinishedPromise","_resolved","onKeyframesResolved","onUpdate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","d","pow","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","p","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","x1","y1","x2","y2","progress","toFromDifference","mixNumber","hueToRgb","q","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixImmediate","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","KeyframeResolver$1","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","onStop","teardown","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","supportsWaapi","memo","Element","acceleratedValues","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","setWithVelocity","static","HTMLElement","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","supports","isWillChangeMotionValue","addUniqueItem","item","removeItem","index","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","init","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","shouldReduceMotion","remove","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","prevIsPresent","prevPresenceContext","exitAnimation","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","HandoffCancelAllAnimations","resetTransformStyle","notifyLayoutUpdate","process","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","div","selected","disabled","Queue","order","scheduled","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","steps","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","keepAlive","immediate","addToCurrentFrame","queue","createRenderStep","processStep","stepId","processBatch","frame","cancelFrame","requestAnimationFrame","MotionGlobalConfig","warning","invariant","isBrowser","any","useConstant","useIsomorphicLayoutEffect","useLayoutEffect"],"sourceRoot":""}